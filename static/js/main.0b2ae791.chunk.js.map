{"version":3,"sources":["contexts/UserContext.js","assets/cursors/normal.cur","assets/cursors/clickable.cur","globalStyles.js","components/PreGame/Splash/styles.js","assets/images/winxp-logo.webp","assets/images/microsoft-logo.webp","components/PreGame/Splash/index.js","assets/images/account-image.webp","assets/cursors/cannot-clickable.cur","assets/cursors/beam.cur","components/PreGame/UserAccount/styles.js","utils/soundUtils.js","assets/audios/cannot-deal.ogg","assets/audios/deal.ogg","assets/audios/hint.ogg","assets/audios/mouse-down.ogg","assets/audios/mouse-up.ogg","assets/audios/no-hint.ogg","assets/audios/opening.ogg","assets/audios/shutdown.ogg","assets/audios/win.ogg","components/PreGame/UserAccount/index.js","components/PreGame/Login/styles.js","assets/images/winxp-shutdown.webp","assets/images/winxp-logo2.webp","components/PreGame/Login/index.js","views/Introduction/styles.js","views/Introduction/index.js","utils/cardUtils.js","assets/images/cards/card-back.webp","assets/images/cards/1.webp","assets/images/cards/2.webp","assets/images/cards/3.webp","assets/images/cards/4.webp","assets/images/cards/5.webp","assets/images/cards/6.webp","assets/images/cards/7.webp","assets/images/cards/8.webp","assets/images/cards/9.webp","assets/images/cards/10.webp","assets/images/cards/11.webp","assets/images/cards/12.webp","assets/images/cards/13.webp","contexts/GameContext.js","contexts/DesktopContext.js","assets/images/close.svg","assets/images/close-hover.svg","assets/images/close-active.svg","components/PreGame/Window/styles.js","assets/images/solitaire-icon.webp","components/PreGame/WindowMenu/styles.js","components/PreGame/WindowMenu/index.js","components/PreGame/Window/index.js","components/Game/GameOver/styles.js","components/Game/GameOver/index.js","components/Game/DeckArea/styles.js","components/Game/Card/index.js","components/Game/CardDeck/styles.js","components/Game/CardDeck/index.js","components/Game/DeckArea/index.js","views/SolitaireGame/styles.js","components/Game/CompletedArea/styles.js","components/Game/CompletedArea/index.js","components/Game/HintArea/styles.js","components/Game/HintArea/index.js","components/Game/DealArea/styles.js","components/Game/DealArea/index.js","views/SolitaireGame/index.js","components/PreGame/Taskbar/styles.js","assets/images/winxp-start-button.webp","utils/dateUtils.js","components/PreGame/Toolbar/styles.js","assets/images/msn-icon.webp","components/PreGame/Toolbar/index.js","components/PreGame/Taskbar/index.js","views/Desktop/styles.js","components/PreGame/Program/styles.js","components/PreGame/Program/index.js","views/Desktop/index.js","App.js","index.js"],"names":["UserContext","createContext","UserContextProvider","props","children","useState","username","user","setUser","isUserSelected","setIsUserSelected","useEffect","sessionStoragedUser","sessionStorage","getItem","JSON","parse","setItem","stringify","Provider","value","colors","whiteA03","white","yellow","black","lightBlue","blue","darkBlue","navyBlue","orange","beige","pink","aqua","transparent","green","brightGreen","theme","taskBg","loginScreenText","loginScreenHeaderBg","loginScreenFooterText","loginScreenFooterBg","loginScreenTextColor","buttonBg","buttonText","xpWindowBg","titleBarText","hintAreaBg","hintAreaText","subMenuButtonText","subMenuButtonText$hover","subMenuButtonBg$hover","menuButtonText","menuButtonBg$hover","menuButtonText$hover","menuBg","menuBarBg","toolbarText","taskBg$hover","loaderBorder","splashScreenText","splashScreenBg","loginAccountInputText","loginAccountInputBg","loginAccountText","loginAccountBorder$hover","gradients","barBg","loginScreenFooterBorderColor","loginScreenHeaderBorderColor","loginScreenMiddleBorderColor","titleBarBg","loginScreenMainBg","toolbarBg","taskbarBg","keyFrames","loadingKeyFrame","keyframes","colorChange","red","boxShadows","emptyDeck","task","windowButton$hover","windowButton$active","breakpoints","smallTablet","styledComponents","Button","styled","button","ClickableCursor","Screen","div","NormalCursor","SplashScreen","Main","main","Logo","img","Loader","Bars","Bar","Footer","footer","FooterLogo","Splash","src","WindowsXPLogo","width","height","alt","MicrosoftLogo","UserAccount","$isGuest","$isUsernameWritten","CanNotCursor","BeamCursor","Avatar","audios","deal","hint","opening","shutdown","win","getSounds","soundPlayFunctions","soundList","forEach","soundName","push","Audio","isGuest","useContext","usernameInputText","setUsernameInputText","openingSound","handleAccountClick","e","preventDefault","play","onClick","disabled","AccountImage","type","placeholder","stopPropagation","onChange","target","onKeyDown","key","LoginScreen","Header","header","MainLeft","section","MainRight","ShutdownButton","Login","shutdownSound","WindowsXPLogo2","WindowsXPShutdown","IntroductionScreen","Introduction","isOnSplash","setIsOnSplash","setTimeout","cardImages","cardNo","back","ace","two","three","four","five","siv","seven","eight","nine","ten","jack","queen","king","cardCounts","shuffle","array","copyArray","i","length","j","Math","floor","random","cardDecks","dealingCards","cannotDealSound","copyCardDecks","copyDealingDecks","Object","values","every","deck","cards","dealCards","pop","entries","shift","visibleCardCount","getRandomDecks","cardList","map","cardType","count","Array","fill","flat","shuffledCardList","deck1","slice","deck2","deck3","deck4","deck5","deck6","deck7","deck8","deck9","deck10","newGame","getIndexWhichNextCardsDraggable","nextCard","currentCard","visibleCardsStartingIndex","firstIndexOfOrderedCards","getHint","orderedCardLists","orderedCardListsFromDecks","startingIndex","getOrderedCardListsFromDecks","hints","sourceDeckNo","sourceDeck","subSourceDeckStartingIndex","destinationDeckNo","destinationDeck","at","sourceDeckId","destinationDeckId","sourceStartingIndex","destinationStartingIndex","GameContext","GameContextProvider","setCardDecks","dealingDecks","setDealingDecks","isAnyDragging","setIsAnyDragging","deckId","items","selectedCards","setSelectedCards","completedDeckCount","score","moves","gameStats","setGameStats","setHint","keys","cDecks","dDecks","DesktopContext","DesktopContextProvider","isGameRunning","setIsGameRunning","Window","isGameOverWindow","css","size","isGameFinished","TitleBar","CloseButton","CloseSVG","CloseHoverSVG","CloseActiveSVG","WindowBody","Menu","MenuItem","MenuButton","MenuContent","SubMenuButton","WindowMenu","dealSound","returnCardDecks","returnDealingDecks","title","SolitaireIcon","WinScreen","WindowContent","GameOver","setIsGameFinished","winSound","React","memo","DeckArea","Card","forwardRef","ref","isClose","cardId","className","draggable","Deck","deckLength","CardDeck","indexWhichNextCardsDraggable","mouseDownSound","handleMouseDownFromCard","getStyle","style","snapshot","dId","index","isDropAnimating","transitionDuration","isDragging","includes","display","transform","filter","transition","id","draggableId","isDragDisabled","provided","role","innerRef","draggableProps","dragHandleProps","onMouseDown","undefined","from","_","droppableId","droppableProps","Board","process","BottomArea","CompletedDeckArea","Children","toArray","HintArea","Hint","hintSound","noHintSound","previousGameStats","DealArea","SolitaireGame","onDragEnd","result","source","destination","sourceCardIndex","destinationCardIndex","selectedCardList","splice","isDragSuccessful","parentCardNo","isThereACompletedDeck","join","newCardDecks","moveCards","onDragStart","Taskbar","StartButton","TaskList","Task","getTimeAsAMPM","date","Date","hours","getHours","minutes","getMinutes","ampm","Toolbar","time","setTime","setInterval","MsnIcon","XpStartButton","Desktop","ProgramContainer","ProgramList","Program","handleProgramClick","onDoubleClick","onTouchStart","App","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAEaA,EAAcC,0BA+CZC,EA7Ca,SAACC,GAC3B,IAAQC,EAAaD,EAAbC,SAER,EAAwBC,mBAAS,CAC/BC,SAAU,KADZ,mBAAOC,EAAP,KAAaC,EAAb,KAIA,EAA4CH,oBAAS,GAArD,mBAAOI,EAAP,KAAuBC,EAAvB,KA6BA,OArBAC,qBAAU,WACR,IAAMC,EAAsBC,eAAeC,QAAQ,QAGjDF,GACiC,UAAjCA,EAAoBN,UAEpBE,EAAQO,KAAKC,MAAMJ,MAEpB,IAEHD,qBAAU,WACRE,eAAeI,QAAQ,OAAQF,KAAKG,UAAUX,MAC7C,CAACA,IASF,cAACP,EAAYmB,SAAb,CACEC,MAAO,CAAEb,OAAMC,UAASC,iBAAgBC,qBAD1C,SAGGN,K,OC5CQ,MAA0B,mCCA1B,MAA0B,sCCKnCiB,EAAS,CACbC,SAAU,2BACVC,MAAO,qBACPC,OAAQ,iBACRC,MAAO,aACPC,UAAW,oBACXC,KAAM,oBACNC,SAAU,oBACVC,SAAU,kBACVC,OAAQ,oBACRC,MAAO,qBACPC,KAAM,oBACNC,KAAM,mBACNC,YAAa,cACbC,MAAO,eACPC,YAAa,WAIFC,EAAQ,CAEnBhB,OAAQ,CACNiB,OAAQjB,EAAOM,KACfY,gBAAiBlB,EAAOE,MACxBiB,oBAAqBnB,EAAOQ,SAC5BY,sBAAuBpB,EAAOE,MAC9BmB,oBAAqBrB,EAAOQ,SAC5Bc,qBAAsBtB,EAAOE,MAC7BqB,SAAUvB,EAAOE,MACjBsB,WAAYxB,EAAOI,MACnBqB,WAAYzB,EAAOU,MACnBgB,aAAc1B,EAAOE,MACrByB,WAAY3B,EAAOc,MACnBc,aAAc5B,EAAOE,MACrB2B,kBAAmB7B,EAAOI,MAC1B0B,wBAAyB9B,EAAOE,MAChC6B,sBAAuB/B,EAAOO,SAC9ByB,eAAgBhC,EAAOI,MACvB6B,mBAAoBjC,EAAOO,SAC3B2B,qBAAsBlC,EAAOE,MAC7BiC,OAAQnC,EAAOU,MACf0B,UAAWpC,EAAOU,MAClB2B,YAAarC,EAAOE,MACpBoC,aAActC,EAAOK,UACrBkC,aAAcvC,EAAOE,MACrBsC,iBAAkBxC,EAAOE,MACzBuC,eAAgBzC,EAAOI,MACvBsC,sBAAuB1C,EAAOE,MAC9ByC,oBAAqB3C,EAAOa,YAC5B+B,iBAAkB5C,EAAOE,MACzB2C,yBAA0B7C,EAAOG,QAInC2C,UAAW,CACTC,MAAM,+NAcNC,6BAA6B,qDAAD,OAGtBhD,EAAOQ,SAHe,yBAItBR,EAAOS,OAJe,0BAKtBT,EAAOQ,SALe,wBAQ5ByC,6BAA6B,kOAU7BC,6BAA6B,kUAY7BC,WAAW,4UAaXC,kBAAkB,uKAQlBC,UAAU,qaAgBVC,UAAU,6hBAuBZC,UAAW,CACTC,gBAAiBC,YAAF,wJAQfC,YAAaD,YAAF,wSAEEzD,EAAO2D,IAGP3D,EAAOG,OAGPH,EAAOe,YAGPf,EAAOY,KAGPZ,EAAOQ,SAGPR,EAAOW,OAMtBiD,WAAY,CACVC,UAAU,mBAAD,OAAqB7D,EAAOE,OACrC4D,KAAK,GAAD,OAAK9D,EAAOI,MAAZ,yBAAkCJ,EAAOC,SAAzC,sBACJ8D,mBAAmB,GAAD,OAAK/D,EAAOS,OAAZ,0BAClBuD,oBAAoB,GAAD,OAAKhE,EAAOM,KAAZ,2BAIrB2D,YAAa,CACXC,YAAa,UAKJC,EAAmB,CAC9BC,OAAQC,IAAOC,OAAT,qJAMYC,GAGlBC,OAAQH,IAAOI,IAAT,oGAEUC,ICzNLC,EAAeN,YAAOF,EAAiBK,OAAxBH,CAAH,4GACH,SAACvF,GAAD,OAAWA,EAAMkC,MAAMhB,OAAOyC,kBAEzC,SAAC3D,GAAD,OAAWA,EAAMkC,MAAMhB,OAAOwC,oBAI5BoC,EAAOP,IAAOQ,KAAV,4NASJC,EAAOT,IAAOU,IAAV,yFAMJC,EAASX,IAAOI,IAAV,yJACG,SAAC3F,GAAD,OAAWA,EAAMkC,MAAMhB,OAAOuC,gBAQvC0C,EAAOZ,IAAOI,IAAV,+IAEF,SAAC3F,GAAD,OAAWA,EAAMkC,MAAMuC,UAAUC,mBAOnC0B,EAAMb,IAAOI,IAAV,iFACA,SAAC3F,GAAD,OAAWA,EAAMkC,MAAM8B,UAAUC,SAKpCoC,EAASd,IAAOe,OAAV,+IAQNC,EAAahB,IAAOU,IAAV,kGC3DR,MAA0B,wCCA1B,MAA0B,4CC4C1BO,EArCA,WAOb,OACE,eAAC,EAAD,WACE,eAAC,EAAD,WACE,cAAC,EAAD,CACEC,IAAKC,EACLC,MAAM,MACNC,OAAO,MACPC,IAAI,oBAEN,cAAC,EAAD,UACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,YAIN,eAAC,EAAD,WACE,wEACA,cAAC,EAAD,CACEJ,IAAKK,EACLH,MAAM,MACNC,OAAO,KACPC,IAAI,0B,OCrCC,MAA0B,2CCA1B,MAA0B,6CCA1B,MAA0B,iCCO5BE,EAAcxB,YAAOF,EAAiBC,OAAxBC,CAAH,sjBAYV,SAACvF,GAAD,OACPA,EAAMgH,WACNhH,EAAMiH,oBADP,cAEOC,EAFP,gBAccC,GAePC,EAAS7B,IAAOU,IAAV,+JCtCboB,EAAS,CACb,cCZa,IAA0B,wCDavCC,KEba,IAA0B,iCFcvCC,KGda,IAA0B,iCHevC,aIfa,IAA0B,uCJgBvC,WKhBa,IAA0B,qCLiBvC,UMjBa,IAA0B,oCNkBvCC,QOlBa,IAA0B,oCPmBvCC,SQnBa,IAA0B,qCRoBvCC,ISpBa,IAA0B,iCTuB1B,SAASC,IAAwB,IAC9C,IAAMC,EAAqB,GADmB,mBAAXC,EAAW,yBAAXA,EAAW,gBAO9C,OAJAA,EAAUC,SAAQ,SAACC,GACjBH,EAAmBI,KAAK,IAAIC,MAAMZ,EAAOU,QAGpCH,EUvBT,I,gGAkFeb,GAlFK,SAAC/G,GACnB,IAAQkI,EAAYlI,EAAZkI,QACR,EACEC,qBAAWtI,GADLO,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASE,EAAvB,EAAuBA,kBAEvB,EAAkDL,mBAChDE,EAAKD,UADP,mBAAOiI,EAAP,KAA0BC,EAA1B,KAGA,EAAuBV,EAAU,WAA1BW,EAAP,oBAQMC,EAAqB,SAACC,GAC1BA,EAAEC,iBAEFpI,EACE6H,EAAO,2BACE9H,GADF,IACQD,SAAU,UADlB,2BAEEC,GAFF,IAEQD,SAAUiI,KAG3B7H,GAAkB,GAClB+H,EAAaI,QAkBf,OACE,eAAC,EAAD,CACE1B,SAAUkB,EACVjB,mBACEmB,GAA2C,UAAtBA,EAEvBO,QAASJ,EACTK,UACGV,GACqB,UAAtBE,GACsB,KAAtBA,EATJ,UAYE,cAAC,EAAD,CACE3B,IAAKoC,EACLhC,IAAI,SACJF,MAAM,KACNC,OAAO,OAERsB,EACC,yCAEA,uBACEY,KAAK,OACLC,YAAY,yBACZ9H,MACwB,UAAtBmH,EAAgC,GAAKA,EAEvCO,QA1CiB,SAACH,GACxBA,EAAEQ,mBA0CIC,SAvCiB,SAACT,GACxBH,EAAqBG,EAAEU,OAAOjI,QAuCxBkI,UAAW,SAACX,GAAD,MACC,UAAVA,EAAEY,KAAmBb,EAAmBC,UC5EvCa,GAAc9D,YAAOF,EAAiBK,OAAxBH,CAAH,2CACb,SAACvF,GAAD,OAAWA,EAAMkC,MAAMhB,OAAOsB,wBAG5B8G,GAAS/D,IAAOgE,OAAV,2JACG,SAACvJ,GAAD,OAClBA,EAAMkC,MAAMhB,OAAOmB,uBAGE,SAACrC,GAAD,OACrBA,EAAMkC,MAAM8B,UAAUG,gCAIb2B,GAAOP,IAAOQ,KAAV,0UACD,SAAC/F,GAAD,OAAWA,EAAMkC,MAAM8B,UAAUM,qBAQ1B,SAACtE,GAAD,OACjBA,EAAMkC,MAAMiD,YAAYC,eAMjBoE,GAAWjE,IAAOkE,QAAV,waAQE,SAACzJ,GAAD,OACjBA,EAAMkC,MAAMiD,YAAYC,eAGH,SAACpF,GAAD,OACrBA,EAAMkC,MAAM8B,UAAUI,gCAcfsF,GAAYnE,IAAOkE,QAAV,qPAQC,SAACzJ,GAAD,OACjBA,EAAMkC,MAAMiD,YAAYC,eAMjBiB,GAASd,IAAOe,OAAV,oeAEG,SAACtG,GAAD,OAClBA,EAAMkC,MAAMhB,OAAOqB,uBAEE,SAACvC,GAAD,OACrBA,EAAMkC,MAAM8B,UAAUE,gCAcH,SAAClE,GAAD,OACjBA,EAAMkC,MAAMiD,YAAYC,eAQjBuE,GAAiBpE,YAAOF,EAAiBC,OAAxBC,CAAH,kLC1GZ,OAA0B,4CCA1B,OAA0B,yCC2D1BqE,GAjDD,WACZ,MAAwBjC,EAAU,YAA3BkC,EAAP,oBAQA,OACE,eAAC,GAAD,WACE,cAAC,GAAD,IACA,eAAC,GAAD,WACE,eAAC,GAAD,WACE,qBACEpD,IAAKqD,GACLjD,IAAI,kBACJF,MAAM,MACNC,OAAO,QAET,iEAEF,eAAC,GAAD,WACE,cAAC,GAAD,CAAasB,SAAO,IACpB,cAAC,GAAD,UAGJ,eAAC,GAAD,WACE,8BACE,eAAC,GAAD,CAAuBS,QAAS,kBAAMkB,EAAcnB,QAApD,UACE,qBACEjC,IAAKsD,GACLlD,IAAI,gBACJD,OAAO,KACPD,MAAM,OAER,0DAGJ,4MC5CKqD,GAAqBzE,YAAOF,EAAiBK,OAAxBH,CAAH,4BCgChB0E,GA7BM,WACnB,MAAoC/J,oBAAS,GAA7C,mBAAOgK,EAAP,KAAmBC,EAAnB,KAqBA,OAZA3J,qBAAU,WACR4J,YAAW,WACTD,GAAc,KACb,QACF,IASD,cAAC,GAAD,UACGD,EAAa,cAAC,EAAD,IAAa,cAAC,GAAD,O,iBCjBpBG,GAAa,CACxB,EChBa,IAA0B,uCDiBvC,EEjBa,IAA0B,+BFkBvC,EGlBa,IAA0B,+BHmBvC,EInBa,IAA0B,+BJoBvC,EKpBa,IAA0B,+BLqBvC,EMrBa,IAA0B,+BNsBvC,EOtBa,IAA0B,+BPuBvC,EQvBa,IAA0B,+BRwBvC,ESxBa,IAA0B,+BTyBvC,EUzBa,IAA0B,+BV0BvC,GW1Ba,IAA0B,gCX2BvC,GY3Ba,IAA0B,gCZ4BvC,Ga5Ba,IAA0B,gCb6BvC,Gc7Ba,IAA0B,iCdgCnCC,GAAS,CACbC,KAAM,EACNC,IAAK,EACLC,IAAK,EACLC,MAAO,EACPC,KAAM,EACNC,KAAM,EACNC,IAAK,EACLC,MAAO,EACPC,MAAO,EACPC,KAAM,EACNC,IAAK,GACLC,KAAM,GACNC,MAAO,GACPC,KAAM,IAGFC,GAAa,CACjBb,IAAK,EACLC,IAAK,EACLC,MAAO,EACPC,KAAM,EACNC,KAAM,EACNC,IAAK,EACLC,MAAO,EACPC,MAAO,EACPC,KAAM,EACNC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,KAAM,GAQKE,GAAU,SAACC,GAGtB,IAFA,IAAMC,EAAS,aAAOD,GAEbE,EAAID,EAAUE,OAAS,EAAGD,EAAI,EAAGA,GAAK,EAAG,CAChD,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADM,EAEjB,CAACD,EAAUG,GAAIH,EAAUC,IAAvDD,EAAUC,GAFqC,KAEjCD,EAAUG,GAFuB,KAIlD,OAAOH,GA+DIlE,GAAO,SAACyE,EAAWC,EAAcC,GAC5C,IAAMC,EAAa,eAAQH,GACrBI,EAAgB,aAAOH,GAM7B,GAJUI,OAAOC,OAAOH,GAAeI,OACrC,SAACC,GAAD,OAAUA,EAAKC,MAAMd,OAAS,KAGzB,CACL,IAAMe,EAAYN,EAAiBO,MAE/BD,GAEFL,OAAOO,QAAQT,GAAepE,SAAQ,YAAe,IAAXyE,EAAU,oBAClDA,EAAKC,MAAMxE,KAAKyE,EAAUG,SAC1BL,EAAKM,kBAAoB,UAK7BZ,EAAgBvD,OAGlB,MAAO,CAAC,eAAKwD,GAAN,aAA2BC,KAGvBW,GAAiB,WAC5B,IAAMC,EAAWX,OAAOO,QAAQtB,IAC7B2B,KAAI,mCAAEC,EAAF,KAAYC,EAAZ,YAAuBC,MAAMD,GAAOE,KAAK9C,GAAO2C,OACpDI,OAEGC,EAAmBhC,GAAQyB,GAEjC,MAAO,CACL,CACEQ,MAAO,CACLf,MAAOc,EAAiBE,MAAM,EAAG,GACjCX,iBAAkB,GAEpBY,MAAO,CACLjB,MAAOc,EAAiBE,MAAM,EAAG,IACjCX,iBAAkB,GAEpBa,MAAO,CACLlB,MAAOc,EAAiBE,MAAM,GAAI,IAClCX,iBAAkB,GAEpBc,MAAO,CACLnB,MAAOc,EAAiBE,MAAM,GAAI,IAClCX,iBAAkB,GAEpBe,MAAO,CACLpB,MAAOc,EAAiBE,MAAM,GAAI,IAClCX,iBAAkB,GAEpBgB,MAAO,CACLrB,MAAOc,EAAiBE,MAAM,GAAI,IAClCX,iBAAkB,GAEpBiB,MAAO,CACLtB,MAAOc,EAAiBE,MAAM,GAAI,IAClCX,iBAAkB,GAEpBkB,MAAO,CACLvB,MAAOc,EAAiBE,MAAM,GAAI,IAClCX,iBAAkB,GAEpBmB,MAAO,CACLxB,MAAOc,EAAiBE,MAAM,GAAI,IAClCX,iBAAkB,GAEpBoB,OAAQ,CACNzB,MAAOc,EAAiBE,MAAM,GAAI,IAClCX,iBAAkB,IAGtB,CACES,EAAiBE,MAAM,GAAI,IAC3BF,EAAiBE,MAAM,GAAI,IAC3BF,EAAiBE,MAAM,GAAI,IAC3BF,EAAiBE,MAAM,GAAI,IAC3BF,EAAiBE,MAAM,GAAI,QAKpBU,GAAU,WACrB,OAAOpB,MAGIqB,GAAkC,SAAC5B,GAY9C,IAPA,IAII6B,EACAC,EALEC,EACJ/B,EAAKC,MAAMd,OAASa,EAAKM,iBAEvB0B,EAA2BD,EAKzB7C,EAAI6C,EACR7C,EAAIc,EAAKC,MAAMd,OACfD,GAAK,EAEL4C,EAAc9B,EAAKC,MAAMf,IACzB2C,EAAW7B,EAAKC,MAAMf,EAAI,KAEV4C,EAAc,IAAMD,IAClCG,EAA2B9C,EAAI,GAInC,OAAO8C,GAgBIC,GAAU,SAACzC,GAItB,IAHA,IAAM0C,EAdoC,SAAC1C,GAC3C,IAAM2C,EAA4B,GASlC,OAPAtC,OAAOO,QAAQZ,GAAWjE,SAAQ,YAAe,IAAXyE,EAAU,oBAC9CmC,EAA0B1G,KAAK,CAC7B2G,cAAeR,GAAgC5B,GAC/CC,MAAOD,EAAKC,MAAMgB,MAAMW,GAAgC5B,SAIrDmC,EAIkBE,CAA6B7C,GAChD8C,EAAQ,GAGRC,EAAe,EACnBA,EAAeL,EAAiB/C,OAChCoD,GAAgB,EAIhB,IAFA,IAAMC,EAAaN,EAAiBK,GAG9BE,EAA6B,EACjCA,EAA6BD,EAAWvC,MAAMd,OAC9CsD,GAA8B,EAE9B,IACE,IAAIC,EAAoB,EACxBA,EAAoBR,EAAiB/C,OACrCuD,GAAqB,EACrB,CACA,IAAMC,EAAkBT,EAAiBQ,IAQtCF,EAAWvC,MACTgB,MAAMwB,GACNG,GAAG,KACJD,EAAgB1C,MAAM2C,IAAI,GAAK,GAC/BJ,EAAWvC,MAAM2C,GAAGH,EAA6B,KAC/CE,EAAgB1C,MAAM2C,IAAI,IAC7BJ,EAAWvC,MACTgB,MAAMwB,GACNG,GAAG,KACJD,EAAgB1C,MAAM2C,IAAI,GAAK,GAC/BD,EAAgB1C,MAAMd,OAASsD,IAEjCH,EAAM7G,KAAK,CACToH,aAAa,OAAD,OAASN,EAAe,GACpCO,kBAAkB,OAAD,OAASJ,EAAoB,GAC9CK,oBACEP,EAAWJ,cAAgBK,EAC7BO,yBAA0BL,EAAgBP,gBAOpD,OAAOrD,GAAQuD,GAAO,IejUXW,GAAc1P,0BAqEZ2P,GAnEa,SAACzP,GAC3B,IAAQC,EAAaD,EAAbC,SAER,EAAkCC,mBAAS,CACzCqN,MAAO,GACPE,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,OAAQ,KAVV,mBAAOlC,EAAP,KAAkB2D,EAAlB,KAaA,EAAwCxP,mBAAS,IAAjD,mBAAOyP,EAAP,KAAqBC,EAArB,KACA,EAA0C1P,oBAAS,GAAnD,mBAAO2P,EAAP,KAAsBC,EAAtB,KACA,EAA0C5P,mBAAS,CACjD6P,OAAQ,GACRC,MAAO,KAFT,mBAAOC,EAAP,KAAsBC,EAAtB,KAKA,EAAkChQ,mBAAS,CACzCiQ,mBAAoB,EACpBC,MAAO,IACPC,MAAO,IAHT,mBAAOC,EAAP,KAAkBC,EAAlB,KAMA,EAAwBrQ,mBAAS,IAAjC,mBAAOqH,EAAP,KAAaiJ,EAAb,KAgBA,OAdAhQ,qBAAU,WACJ4L,OAAOqE,KAAKlJ,GAAMmE,OAAS,GAC7BtB,YAAW,WACToG,EAAQ,MACP,QAEJ,CAACjJ,IAEJ/G,qBAAU,WACR,MAAyBsM,KAAzB,mBAAO4D,EAAP,KAAeC,EAAf,KACAjB,EAAagB,GACbd,EAAgBe,KACf,IAGD,cAACnB,GAAYxO,SAAb,CACEC,MAAO,CACL8K,YACA2D,eACAG,gBACAC,mBACAG,gBACAC,mBACAP,eACAC,kBACAU,YACAC,eACAhJ,OACAiJ,WAbJ,SAgBGvQ,KChEM2Q,GAAiB9Q,0BAsBf+Q,GApBgB,SAAC7Q,GAC9B,IAAQC,EAAaD,EAAbC,SAER,EAA0CC,oBAAS,GAAnD,mBAAO4Q,EAAP,KAAsBC,EAAtB,KAQA,OACE,cAACH,GAAe5P,SAAhB,CACEC,MAAO,CAAE6P,gBAAeC,oBAD1B,SAGG9Q,K,QCpBQ,OAA0B,kCCA1B,OAA0B,wCCA1B,OAA0B,yCCM5B+Q,GAASzL,IAAOI,IAAV,yKAMG,SAAC3F,GAAD,OAAWA,EAAMkC,MAAMhB,OAAOyB,cAEhD,SAAC3C,GAAD,OACAA,EAAMiR,kBACNC,YADA,iPAEYlR,QAFZ,IAEYA,OAFZ,EAEYA,EAAOmR,KAAKvK,OAFxB,OAGW5G,QAHX,IAGWA,OAHX,EAGWA,EAAOmR,KAAKxK,OAMT3G,EAAMoR,gBAAkB,WAK7BC,GAAW9L,IAAOI,IAAV,mNAEL,SAAC3F,GAAD,OAAWA,EAAMkC,MAAM8B,UAAUK,cAGtC,SAACrE,GAAD,OAAWA,EAAMkC,MAAMhB,OAAO0B,gBAS5B0O,GAAc/L,YAAOF,EAAiBC,OAAxBC,CAAH,8QAIEgM,GAIEC,GAIAC,IAIfC,GAAanM,IAAOI,IAAV,+CC3DR,OAA0B,4CCK5BgM,GAAOpM,IAAOI,IAAV,kGAMJiM,GAAWrM,IAAOI,IAAV,0OAkBRkM,GAAatM,YAAOF,EAAiBC,OAAxBC,CAAH,qIAUVuM,GAAcvM,IAAOI,IAAV,oOAaXoM,GAAgBxM,YAAOF,EAAiBC,OAAxBC,CAAH,6MCiBXyM,GA5DI,WACjB,MAMI7J,qBAAWqH,IALbzD,EADF,EACEA,UACA2D,EAFF,EAEEA,aACAC,EAHF,EAGEA,aACAC,EAJF,EAIEA,gBAIF,GARA,EAKEW,aAGmC5I,EACnC,cACA,SAFF,mBAAOsE,EAAP,KAAwBgG,EAAxB,KAgCA,OACE,eAAC,GAAD,WACE,eAAC,GAAD,WACE,cAAC,GAAD,mBACA,cAAC,GAAD,UACE,cAAC,GAAD,CAAsBtJ,QAfH,WACzBuF,MAcM,2BAKJ,cAAC,GAAD,UACE,cAAC,GAAD,CAAmBvF,QAhCD,WACtBsJ,EAAUvJ,OACV,MAA8CpB,GAC5CyE,EACA4D,EACA1D,GAHF,mBAAOiG,EAAP,KAAwBC,EAAxB,KAKAzC,EAAawC,GACbtC,EAAgBuC,IAwBZ,yBCzBOnB,GA9BA,SAAChR,GACd,IAAQC,EACND,EADMC,SAAUmS,EAChBpS,EADgBoS,MAAOnB,EACvBjR,EADuBiR,iBAAkBE,EACzCnR,EADyCmR,KAAMC,EAC/CpR,EAD+CoR,eAGzCL,EAAqB5I,qBAAWyI,IAAhCG,iBAMR,OACE,eAAC,GAAD,CACEI,KAAMA,EACNF,iBAAkBA,EAClBG,eAAgBA,EAHlB,UAKE,eAAC,GAAD,YACIH,GACA,qBAAKxK,IAAK4L,GAAexL,IAAI,mBAE/B,+BAAOuL,IACP,cAAC,GAAD,CAAoBzJ,QAfN,WAClBoI,GAAiB,UAgBbE,GAAoB,cAAC,GAAD,IAEtB,cAAC,GAAD,UAAoBhR,QC5BbqS,GAAY/M,IAAOI,IAAV,iQAMT,SAAC3F,GAAD,OAAaA,EAAMoR,eAA0B,OAAT,UAKlC,SAACpR,GAAD,OAAWA,EAAMkC,MAAMuC,UAAUG,eAInC2N,GAAgBhN,IAAOI,IAAV,sjBAGJ,SAAC3F,GAAD,OAAWA,EAAMkC,MAAMhB,OAAOyB,cAcvC,SAAC3C,GAAD,OAAWA,EAAMkC,MAAMhB,OAAOwB,cACnB,SAAC1C,GAAD,OAAWA,EAAMkC,MAAMhB,OAAOuB,YAQlC,SAACzC,GAAD,OACZA,EAAMkC,MAAM4C,WAAWG,sBAIX,SAACjF,GAAD,OACZA,EAAMkC,MAAM4C,WAAWI,uBCxCzBsN,GAAW,SAACxS,GAChB,IAAQ0P,EACN1P,EADM0P,aAAcE,EACpB5P,EADoB4P,gBAAiBU,EACrCtQ,EADqCsQ,UAAWC,EAChDvQ,EADgDuQ,aAE1CnQ,EAAS+H,qBAAWtI,GAApBO,KACR,EAA4CF,oBAAS,GAArD,mBAAOkR,EAAP,KAAuBqB,EAAvB,KACA,EAAmB9K,EAAU,OAAtB+K,EAAP,oBA+BA,OAXqC,IAAjCpC,EAAUH,qBACZuC,EAAShK,OACT+J,GAAkB,IAUlB,qCACE,cAAC,GAAD,CAAkBrB,eAAgBA,EAAlC,SACE,8CAEF,cAAC,GAAD,CACEgB,MAAM,YACNnB,kBAAgB,EAChBE,KAAM,CAAEvK,OAAQ,QAASD,MAAO,SAChCyK,eAAgBA,EAJlB,SAME,eAAC,GAAD,WACE,iDACmBhR,EAAKD,SADxB,IACkC,uBADlC,gBACsD,IACnDmQ,EAAUF,MAFb,cAE+BE,EAAUD,MAFzC,aAIA,oEACA,wBAAQvH,KAAK,SAASH,QAxCH,WACzB8J,GAAkB,GAClB,MAAyBvE,KAAzB,mBAAOwC,EAAP,KAAeC,EAAf,KACAjB,EAAagB,GACbd,EAAgBe,GAChBJ,EAAa,CACXJ,mBAAoB,EACpBC,MAAO,IACPC,MAAO,KAgCH,0BASKsC,OAAMC,KAAKJ,ICtEbK,GAAWtN,IAAOI,IAAV,2YCCfmN,GAAOH,IAAMI,YAAW,SAAC/S,EAAOgT,GACpC,IAAQC,EAAoBjT,EAApBiT,QAASC,EAAWlT,EAAXkT,OAEjB,OACE,qBAAKC,UAAU,OAAOH,IAAKA,EAA3B,SACE,qBACEI,WAAW,EACX3M,IAAKwM,EAAU5I,GAAW,GAAKA,GAAW6I,GAC1CrM,IAAI,cAMG8L,OAAMC,KAAKE,ICfbO,GAAO9N,IAAOI,IAAV,weAuBT,SAAC3F,GAAD,OAAWA,EAAMsT,WAAa,KCqGvBC,GAnHEZ,IAAMI,YAAW,SAAC/S,EAAOgT,GACxC,IA4DIQ,EA5DIzD,EAAiB/P,EAAjB+P,OAAQxD,EAASvM,EAATuM,KAChB,EAAgCpE,qBAAWqH,IAAnCS,EAAR,EAAQA,cAAe1I,EAAvB,EAAuBA,KAEvB,EAAyBI,EAAU,cAA5B8L,EAAP,oBAEMC,EAA0B,SAAClL,GAC/BA,EAAEC,iBACFgL,EAAe/K,QAGjB,SAASiL,EAASC,EAAOC,EAAUC,EAAKC,GAMtC,OAAIF,EAASG,gBACJ,2BACFJ,GADL,IAGEK,mBAAoB,WAIpBJ,EAASK,WAEJN,EAIP3D,EAAcF,SAAW+D,GACzB7D,EAAcD,MAAMmE,SAASJ,GAEtB,2BACFH,GADL,IAEEQ,QAAS,OAETC,UAAW,SAIR,2BACFT,GADL,IAGES,UAAW,OACXC,OACG/M,EAAK6H,eAAiB0E,GACrBvM,EAAK+H,qBAAuByE,GAC7BxM,EAAK8H,oBAAsByE,GAC1BvM,EAAKgI,0BAA4BwE,EAC/B,eACA,GACNQ,WACEhN,EAAK8H,oBAAsByE,GAC3BvM,EAAKgI,0BAA4BwE,EAC7B,qBACA,KAUV,MALI,UAAWxH,IACbiH,EACErF,GAAgC5B,IAIlC,UAAWA,GACT,eAAC,GAAD,CAAayG,IAAKA,EAAKM,WAAY/G,EAAKC,MAAMd,OAA9C,UACE,qBAAKyH,UAAU,iBACd5G,EAAKC,MAAMQ,KAAI,SAACwH,EAAIT,GAAL,OACd,cAAC,KAAD,CAEEU,YAAW,cAAS1E,GAAT,OAAkBgE,GAC7BA,MAAOA,EACPW,eAAgBX,EAAQP,EAJ1B,SAMG,SAACmB,EAAUd,GACV,OACE,yDACEe,KAAK,OACL5B,IAAK2B,EAASE,UACVF,EAASG,gBACTH,EAASI,iBAJf,IAKEnB,MAAOD,EACLgB,EAASG,eAAelB,MACxBC,EAFa,cAGN9D,GACPgE,GAEFiB,YACEjB,GAASP,EACLE,OACAuB,EAdR,SAiBE,cAAC,GAAD,CACElF,OAAQA,EACRmD,OAAQsB,EACRvB,QACEc,EACAxH,EAAKC,MAAMd,OAASa,EAAKM,wBA9BrC,cACckD,GADd,OACuBgE,aC/E3BlB,GAAW,SAAC7S,GAChB,IAAQ+L,EAAc/L,EAAd+L,UAER,OACE,cAAC,GAAD,UACGoB,MAAM+H,KAAK,CAAExJ,OAAQ,KAAM,SAACyJ,EAAG1J,GAAJ,OAAUA,EAAI,KAAGuB,KAAI,SAACwH,GAAD,OAC/C,cAAC,KAAD,CAA6BY,YAAW,cAASZ,GAAjD,SACG,SAACG,GAAD,OACC,8CACE3B,IAAK2B,EAASE,UACVF,EAASU,gBAFf,IAGEzB,MAAO,CAAEhN,OAAQ,eAHnB,UAKE,cAAC,GAAD,CAAUmJ,OAAQyE,EAAIjI,KAAMR,EAAU,OAAD,OAAQyI,MAC5CG,EAAS5L,kBARhB,cAAuByL,UAiBhB7B,OAAMC,KAAKC,ICxBbyC,GAAQ/P,IAAOI,IAAV,iTAIW4P,oBAJX,+BAeLC,GAAajQ,IAAOI,IAAV,sMChBV8P,GAAoBlQ,IAAOI,IAAV,4RCIxB8P,GAAoB,SAACzV,GACzB,IAAQmQ,EAAuBnQ,EAAvBmQ,mBAQR,OACE,cAAC,GAAD,UACGwC,IAAM+C,SAASC,QACdxI,MAAMgD,GAAoB/C,KAAK,cAAC,GAAD,CAAM8F,OAAQ,SAMtCP,OAAMC,KAAK6C,ICrBbG,GAAWrQ,IAAOI,IAAV,waAcLF,GAQHoQ,GAAOtQ,IAAOI,IAAV,mOClBXiQ,GAAW,SAAC5V,GAChB,IAAQwQ,EAAgDxQ,EAAhDwQ,QAASzE,EAAuC/L,EAAvC+L,UAAWuE,EAA4BtQ,EAA5BsQ,UAAWC,EAAiBvQ,EAAjBuQ,aAEvC,EAAiC5I,EAAU,OAAQ,WAAnD,mBAAOmO,EAAP,KAAkBC,EAAlB,KAmCA,OACE,eAAC,GAAD,CAAiBpN,QA5BK,WACtB,IAAMpB,EAAOiH,GAAQzC,GAErB,GAAIxE,EAAM,CACRuO,EAAUpN,OACV8H,EAAQ,CACNpB,aAAc7H,EAAK6H,aACnBE,oBAAqB/H,EAAK+H,oBAC1BD,kBAAmB9H,EAAK8H,kBACxBE,yBAA0BhI,EAAKgI,2BAGjC,IAAMyG,EAAiB,eAAQ1F,GAC/B0F,EAAkB5F,OAAS,GAE3BG,EAAayF,QAEbD,EAAYrN,QAWd,UACE,eAAC,GAAD,WACE,0CACA,+BAAO4H,EAAUF,WAEnB,eAAC,GAAD,WACE,0CACA,+BAAOE,EAAUD,eAMVsC,OAAMC,KAAKgD,ICvDbK,GAAW1Q,IAAOI,IAAV,wVAKLF,GCAVwQ,GAAW,SAACjW,GAChB,IAAQ0P,EAA4B1P,EAA5B0P,aAAc3D,EAAc/L,EAAd+L,UACtB,EAAqCpE,EACnC,cACA,QAFF,mBAAOsE,EAAP,KAAwBgG,EAAxB,KAIA,EAA0C9J,qBAAWqH,IAA7CG,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,gBA0BtB,OACE,cAAC,GAAD,CACEjH,QAASgH,EAAajE,OArBF,WACtBuG,EAAUvJ,OAEV,MAA8CpB,GAC5CyE,EACA4D,EACA1D,GAHF,mBAAOiG,EAAP,KAAwBC,EAAxB,KAMAzC,EAAawC,GACbtC,EAAgBuC,SAWmC8C,EADnD,SAGGtC,IAAM+C,SAASC,QACdxI,MAAMwC,EAAajE,QAAQ0B,KAAK,cAAC,GAAD,CAAM6F,SAAO,SAMtCN,OAAMC,KAAKqD,IC2EXC,GAjHO,WACpB,MAQI/N,qBAAWqH,IAPbzD,EADF,EACEA,UACA2D,EAFF,EAEEA,aACAQ,EAHF,EAGEA,iBACAN,EAJF,EAIEA,gBACAU,EALF,EAKEA,UACAC,EANF,EAMEA,aACAC,EAPF,EAOEA,QAsEF,OACE,cAAC,GAAD,CAAQ4B,MAAM,mBAAd,SACE,cAAC,KAAD,CACE+D,UAhEkB,SAACC,GACvB,IAAQC,EAAwBD,EAAxBC,OAAQC,EAAgBF,EAAhBE,YAOhB,IALApG,EAAiB,CACfH,OAAQ,GACRC,MAAO,KAGJsG,IAIgBD,EAAOjB,cACFkB,EAAYlB,YAEtC,CAIA,MvCkCqB,SAACrJ,EAAWsK,EAAQC,GAAiB,IAAD,EAoB3C,EAUT,EA7BDC,EAAkBF,EAAOtC,MACzB3E,EAAeiH,EAAOjB,YACtBrG,EAAU,eAAQhD,EAAUqD,IAE5BoH,EAAuBF,EAAYvC,MACnC1E,EAAoBiH,EAAYlB,YAChClG,EAAe,eAAQnD,EAAUsD,IAEjCoH,EAAmB1H,EAAWvC,MAAMkK,OAAOH,GAE7CI,GAAmB,EAEjBC,EACJ1H,EAAgB1C,MAAMgK,EAAuB,GAGpB,IAAzBA,GACAC,EAAiB,KAAOG,EAAe,IAGvC,EAAA1H,EAAgB1C,OAAMxE,KAAtB,qBAA8ByO,IAC9BE,GAAmB,EAEf5H,EAAWlC,mBAAqB4J,EAAiB/K,OACnDqD,EAAWlC,iBAAmB,EAE9BkC,EAAWlC,kBAAoB4J,EAAiB/K,OAElDwD,EAAgBrC,kBAAoB4J,EAAiB/K,SAErD,EAAAqD,EAAWvC,OAAMxE,KAAjB,qBAAyByO,IAG3B,IAAMI,EACJ3H,EAAgB1C,MAtCLsK,OAAO3C,SADE,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IACnB2C,QA+C3C,OANID,IACF3H,EAAgB1C,MAAMkK,QAAQ,IAC9BxH,EAAgBrC,kBACuB,KAArCqC,EAAgBrC,iBAA0B,GAAK,IAG5C,CACLkK,aAAa,2BACRhL,GADO,wBAETqD,EAAeL,GAFN,eAGTM,EAAoBH,GAHX,IAKZ2H,wBACAF,oBuCpFEK,CAAUjL,EAAWsK,EAAQC,GADvBS,EAAR,EAAQA,aAAcF,EAAtB,EAAsBA,sBAGtB,GAHA,EAA6CF,iBAGvB,CACpB,IAAMX,EAAiB,eAAQ1F,GAC/B0F,EAAkB3F,OAAS,EAC3B2F,EAAkB5F,OAAS,EAEvByG,IACFb,EAAkB7F,oBAAsB,EACxC6F,EAAkB5F,OAAS,KAG7BG,EAAayF,GACbtG,EAAaqH,MAgCXE,YA5BoB,SAACb,GACzB,IAAQC,EAAWD,EAAXC,OAEFE,EAAkBF,EAAOtC,MACzB3E,EAAeiH,EAAOjB,YACtBrG,EAAU,eAAQhD,EAAUqD,IAElCc,EAAiB,CACfH,OAAQX,EACRY,MAAO7C,MAAM+H,KACX,CACExJ,OAAQqD,EAAWvC,MAAMd,OAAS6K,IAEpC,SAACpB,EAAG1J,GAAJ,OAAUA,EAAI8K,QAahB,SAIE,eAAC,GAAD,WACE,cAAC,GAAD,CAAUxK,UAAWA,IACrB,eAAC,GAAD,WACE,cAAC,GAAD,CACEoE,mBAAoBG,EAAUH,qBAEhC,cAAC,GAAD,CACEK,QAASA,EACTzE,UAAWA,EACXuE,UAAWA,EACXC,aAAcA,IAEhB,cAAC,GAAD,CACEb,aAAcA,EACd3D,UAAWA,OAGf,cAAC,GAAD,CACE2D,aAAcA,EACdE,gBAAiBA,EACjBU,UAAWA,EACXC,aAAcA,YCnHb2G,GAAU3R,IAAOkE,QAAV,0GACJ,SAACzJ,GAAD,OAAWA,EAAMkC,MAAM8B,UAAUQ,aAMpC2S,GAAc5R,YAAOF,EAAiBC,OAAxBC,CAAH,gHASX6R,GAAW7R,IAAOI,IAAV,kJASR0R,GAAO9R,YAAOF,EAAiBC,OAAxBC,CAAH,2bAEK,SAACvF,GAAD,OAAWA,EAAMkC,MAAMhB,OAAOiB,UAEpC,SAACnC,GAAD,OAAWA,EAAMkC,MAAM4C,WAAWE,QAU1B,SAAChF,GAAD,OAAWA,EAAMkC,MAAMhB,OAAOsC,gBC5CvC,OAA0B,gDCA1B,SAAS8T,KACtB,IAAMC,EAAO,IAAIC,KACbC,EAAQF,EAAKG,WACbC,EAAUJ,EAAKK,aACbC,EAAOJ,GAAS,GAAK,KAAO,KAKlC,OAHAA,GADAA,GAAS,KACQ,GACjBE,EAAUA,EAAU,GAAV,WAAmBA,GAAYA,EAC5B,UAAMF,EAAN,YAAeE,EAAf,YAA0BE,GCLlC,I,YAAMC,GAAUvS,IAAOI,IAAV,kQAEJ,SAAC3F,GAAD,OAAWA,EAAMkC,MAAM8B,UAAUO,aAEtC,SAACvE,GAAD,OAAWA,EAAMkC,MAAMhB,OAAOqC,eCP1B,OAA0B,sCCmC1BuU,GA3BC,WACd,MAAwB5X,mBAASoX,MAAjC,mBAAOS,EAAP,KAAaC,EAAb,KAkBA,OAVAxX,qBAAU,WACRyX,aAAY,kBAAMD,EAAQV,QAAkB,OAC3C,IASD,eAAC,GAAD,WACE,qBAAK7Q,IAAKyR,GAASrR,IAAI,WAAWF,MAAM,KAAKC,OAAO,OACpD,+BAAOmR,QCiBEb,GArCC,WACd,IAAQpG,EAAkB3I,qBAAWyI,IAA7BE,cAQR,OACE,eAAC,GAAD,WACE,cAAC,GAAD,UACE,qBACErK,IAAK0R,GACLtR,IAAI,eACJD,OAAO,KACPD,MAAM,UAGV,cAAC,GAAD,UACGmK,GACC,eAAC,GAAD,WACE,qBACErK,IAAK4L,GACLxL,IAAI,iBACJF,MAAM,KACNC,OAAO,OAET,yDAIN,cAAC,GAAD,QCxCOwR,GAAU7S,IAAOI,IAAV,kJACS4P,oBADT,2BAOP8C,GAAmB9S,IAAOQ,KAAV,4DAIhBuS,GAAc/S,IAAOQ,KAAV,+HCVXwS,GAAUhT,YAAOF,EAAiBC,OAAxBC,CAAH,qMC4BLgT,GAxBC,WACd,IAAQxH,EAAqB5I,qBAAWyI,IAAhCG,iBAQFyH,EAAqB,WACzBzH,GAAiB,IAGnB,OACE,eAAC,GAAD,CACE0H,cAAeD,EACfE,aAAcF,EAFhB,UAIE,qBAAK/R,IAAK4L,GAAexL,IAAI,GAAGF,MAAM,KAAKC,OAAO,OAClD,wDCYSwR,GA3BC,WACd,IAAQtH,EAAkB3I,qBAAWyI,IAA7BE,cAQR,OACE,eAAC,GAAD,WACE,cAAC,GAAD,UACIA,EAKA,cAAC,GAAD,UACE,cAAC,GAAD,MALF,cAAC,GAAD,UACE,cAAC,GAAD,QAQN,cAAC,GAAD,QCHS6H,OAtBf,WACE,IAAQrY,EAAmB6H,qBAAWtI,GAA9BS,eAQR,OACE,qBAAKkU,GAAG,MAAR,SACGlU,EACC,cAAC,GAAD,UACE,cAAC,GAAD,MAGF,cAAC,GAAD,O,MCZRsY,QAAQC,IACN,oIACA,mDAIFC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,IAAD,CAAe9W,MAAOA,EAAtB,SACE,cAAC,GAAD,UAIN+W,SAASC,eAAe,W","file":"static/js/main.0b2ae791.chunk.js","sourcesContent":["import React, { useState, useEffect, createContext } from 'react';\n\nexport const UserContext = createContext();\n\nconst UserContextProvider = (props) => {\n  const { children } = props;\n\n  const [user, setUser] = useState({\n    username: '',\n  });\n\n  const [isUserSelected, setIsUserSelected] = useState(false);\n\n  /*\n  ====================================================\n  ================== USE EFFECT ======================\n  ====================================================\n  */\n\n  useEffect(() => {\n    const sessionStoragedUser = sessionStorage.getItem('user');\n\n    if (\n      sessionStoragedUser &&\n      sessionStoragedUser.username !== 'Guest'\n    ) {\n      setUser(JSON.parse(sessionStoragedUser));\n    }\n  }, []);\n\n  useEffect(() => {\n    sessionStorage.setItem('user', JSON.stringify(user));\n  }, [user]);\n\n  /*\n  ====================================================\n  ==================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <UserContext.Provider\n      value={{ user, setUser, isUserSelected, setIsUserSelected }}\n    >\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport default UserContextProvider;\n","export default __webpack_public_path__ + \"static/media/normal.85d4fca4.cur\";","export default __webpack_public_path__ + \"static/media/clickable.8631aaab.cur\";","import styled, { keyframes } from 'styled-components';\nimport NormalCursor from './assets/cursors/normal.cur';\nimport ClickableCursor from './assets/cursors/clickable.cur';\n\n// COLOR CODES\nconst colors = {\n  whiteA03: 'rgba(255, 255, 255, 0.3)',\n  white: 'rgb(255, 255, 255)',\n  yellow: 'rgb(255,255,0)',\n  black: 'rgb(0,0,0)',\n  lightBlue: 'rgb(83, 163, 255)',\n  blue: 'rgb(80, 143, 217)',\n  darkBlue: 'rgb(49, 106, 197)',\n  navyBlue: 'rgb(0, 77, 163)',\n  orange: 'rgb(240, 150, 68)',\n  beige: 'rgb(236, 233, 216)',\n  pink: 'rgb(255, 38, 231)',\n  aqua: 'rgb(0, 171, 246)',\n  transparent: 'transparent',\n  green: 'rgb(0,128,0)',\n  brightGreen: '#00DB02',\n};\n\n// THEME\nexport const theme = {\n  // COLORS\n  colors: {\n    taskBg: colors.blue,\n    loginScreenText: colors.white,\n    loginScreenHeaderBg: colors.navyBlue,\n    loginScreenFooterText: colors.white,\n    loginScreenFooterBg: colors.navyBlue,\n    loginScreenTextColor: colors.white,\n    buttonBg: colors.white,\n    buttonText: colors.black,\n    xpWindowBg: colors.beige,\n    titleBarText: colors.white,\n    hintAreaBg: colors.green,\n    hintAreaText: colors.white,\n    subMenuButtonText: colors.black,\n    subMenuButtonText$hover: colors.white,\n    subMenuButtonBg$hover: colors.darkBlue,\n    menuButtonText: colors.black,\n    menuButtonBg$hover: colors.darkBlue,\n    menuButtonText$hover: colors.white,\n    menuBg: colors.beige,\n    menuBarBg: colors.beige,\n    toolbarText: colors.white,\n    taskBg$hover: colors.lightBlue,\n    loaderBorder: colors.white,\n    splashScreenText: colors.white,\n    splashScreenBg: colors.black,\n    loginAccountInputText: colors.white,\n    loginAccountInputBg: colors.transparent,\n    loginAccountText: colors.white,\n    loginAccountBorder$hover: colors.yellow,\n  },\n\n  // GRADIENTS\n  gradients: {\n    barBg: `\n      linear-gradient(\n        to bottom,\n        #222e9d,\n        #3043d5,\n        #5f80fc,\n        #6f8dfd,\n        #859ffe,\n        #8da6ff,\n        #5b7af9,\n        #3346d7,\n        #2d3ed2\n      )\n    `,\n    loginScreenFooterBorderColor: `\n      linear-gradient(\n        90deg,\n        ${colors.navyBlue} 0%,\n        ${colors.orange} 50%,\n        ${colors.navyBlue} 100%\n      )\n    `,\n    loginScreenHeaderBorderColor: `\n      linear-gradient(\n        90deg,\n        transparent 0%,\n        rgba(255, 255, 255, 0.8) 30%,\n        rgba(255, 255, 255, 0.9) 50%,\n        rgba(255, 255, 255, 0.8) 70%,\n        transparent 100%\n      )\n    `,\n    loginScreenMiddleBorderColor: `\n      linear-gradient(\n        180deg,\n        rgba(255, 255, 255, 0) 0%,\n        rgba(255, 255, 255, 0) 5%,\n        rgba(255, 255, 255, 0.5) 15%,\n        rgba(255, 255, 255, 0.5) 50%,\n        rgba(255, 255, 255, 0.5) 85%,\n        rgba(255, 255, 255, 0) 95%,\n        rgba(255, 255, 255, 0) 100%\n      )\n    `,\n    titleBarBg: `\n      linear-gradient(\n        180deg,\n        rgba(9, 151, 255, 1) 0%,\n        rgba(0, 83, 238, 1) 8%,\n        rgba(0, 80, 238, 1) 40%,\n        rgba(0, 102, 255, 1) 88%,\n        rgba(0, 102, 255, 1) 93%,\n        rgba(0, 91, 255, 1) 95%,\n        rgba(0, 61, 215, 1) 96%,\n        rgba(0, 61, 215, 1) 100%\n      )\n    `,\n    loginScreenMainBg: `\n      linear-gradient(\n        130deg,\n        rgba(221, 221, 221, 1) 0%,\n        rgba(80, 143, 217, 1) 35%,\n        rgba(80, 143, 217, 1) 100%\n      )\n    `,\n    toolbarBg: `\n      linear-gradient(\n        rgb(12, 89, 185) 1%,\n        rgb(19, 158, 233) 6%,\n        rgb(24, 181, 242) 10%,\n        rgb(19, 155, 235) 14%,\n        rgb(18, 144, 232) 19%,\n        rgb(13, 141, 234) 63%,\n        rgb(13, 159, 241) 81%,\n        rgb(15, 158, 237) 88%,\n        rgb(17, 155, 233) 91%,\n        rgb(19, 146, 226) 94%,\n        rgb(19, 126, 215) 97%,\n        rgb(9, 91, 201) 100%\n      )\n    `,\n    taskbarBg: `\n      linear-gradient(\n        rgb(31, 47, 134) 0px,\n        rgb(49, 101, 196) 3%,\n        rgb(54, 130, 229) 6%,\n        rgb(68, 144, 230) 10%,\n        rgb(56, 131, 229) 12%,\n        rgb(43, 113, 224) 15%,\n        rgb(38, 99, 218) 18%,\n        rgb(35, 91, 214) 20%,\n        rgb(34, 88, 213) 23%,\n        rgb(33, 87, 214) 38%,\n        rgb(36, 93, 219) 54%,\n        rgb(37, 98, 223) 86%,\n        rgb(36, 95, 220) 89%,\n        rgb(33, 88, 212) 92%,\n        rgb(29, 78, 192) 95%,\n        rgb(25, 65, 165) 98%\n      )\n    `,\n  },\n\n  // KEY FRAMES\n  keyFrames: {\n    loadingKeyFrame: keyframes`\n      0% {\n        transform: translate(-40px);\n      }\n      100% {\n        transform: translate(200px);\n      }\n    `,\n    colorChange: keyframes`\n      0% {\n        color: ${colors.red};\n      }\n      20% {\n        color: ${colors.yellow};\n      }\n      40% { \n        color: ${colors.brightGreen};\n      }\n      60% { \n        color: ${colors.aqua}; \n      }\n      80% { \n        color: ${colors.navyBlue}; \n      }\n      100% { \n        color: ${colors.pink}; \n      }\n    `,\n  },\n\n  // BOX SHADOWS\n  boxShadows: {\n    emptyDeck: `inset 0 0 0 2px ${colors.white}`,\n    task: `${colors.black} 1px 0px 1px, ${colors.whiteA03} 1px 1px 1px inset`,\n    windowButton$hover: `${colors.orange} 0px 0px 0px 1px inset`,\n    windowButton$active: `${colors.blue} 0px 0px 0px 1px inset`,\n  },\n\n  // SCREEN BREAKPOINTS\n  breakpoints: {\n    smallTablet: '600px',\n  },\n};\n\n// GLOBAL STYLED COMPONENTS\nexport const styledComponents = {\n  Button: styled.button`\n    background: transparent;\n    border: 0;\n    color: white;\n\n    &:hover {\n      cursor: url(${ClickableCursor}), auto;\n    }\n  `,\n  Screen: styled.div`\n    height: 100%;\n    cursor: url(${NormalCursor}), auto;\n    overflow: hidden;\n  `,\n};\n","// Libraries\nimport styled from 'styled-components';\n// Assets\nimport { styledComponents } from '../../../globalStyles';\n\nexport const SplashScreen = styled(styledComponents.Screen)`\n  background-color: ${(props) => props.theme.colors.splashScreenBg};\n  padding: 7px 33px;\n  color: ${(props) => props.theme.colors.splashScreenText};\n  cursor: none;\n`;\n\nexport const Main = styled.main`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  // main = fullHeight - footer - top and bottom padding\n  height: calc(100% - 60px - 14px);\n  justify-content: center;\n`;\n\nexport const Logo = styled.img`\n  margin-bottom: 70px;\n  max-width: 300px;\n  width: 50vw;\n`;\n\nexport const Loader = styled.div`\n  border: 1px solid ${(props) => props.theme.colors.loaderBorder};\n  border-radius: 5px;\n  height: 20px;\n  overflow: hidden;\n  padding: 2px 1px;\n  width: 200px;\n`;\n\nexport const Bars = styled.div`\n  align-items: center;\n  animation: ${(props) => props.theme.keyFrames.loadingKeyFrame} 2s\n    linear infinite;\n  display: flex;\n  gap: 3px;\n  height: 100%;\n`;\n\nexport const Bar = styled.div`\n  background: ${(props) => props.theme.gradients.barBg};\n  height: 100%;\n  width: 10px;\n`;\n\nexport const Footer = styled.footer`\n  align-items: center;\n  display: flex;\n  font-size: 0.7em;\n  height: 60px;\n  justify-content: space-between;\n`;\n\nexport const FooterLogo = styled.img`\n  filter: invert(100%); // black logo -> white logo\n  height: 60px;\n`;\n","export default __webpack_public_path__ + \"static/media/winxp-logo.9dee7f33.webp\";","export default __webpack_public_path__ + \"static/media/microsoft-logo.63a04c35.webp\";","// Libraries\nimport React from 'react';\n// Assets\nimport * as Styled from './styles';\nimport WindowsXPLogo from '../../../assets/images/winxp-logo.webp';\nimport MicrosoftLogo from '../../../assets/images/microsoft-logo.webp';\n\nconst Splash = () => {\n  /*\n  ====================================================\n  ==================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <Styled.SplashScreen>\n      <Styled.Main>\n        <Styled.Logo\n          src={WindowsXPLogo}\n          width=\"300\"\n          height=\"205\"\n          alt=\"windows xp logo\"\n        />\n        <Styled.Loader>\n          <Styled.Bars>\n            <Styled.Bar />\n            <Styled.Bar />\n            <Styled.Bar />\n          </Styled.Bars>\n        </Styled.Loader>\n      </Styled.Main>\n      <Styled.Footer>\n        <span>Copyright © Microsoft Corporation</span>\n        <Styled.FooterLogo\n          src={MicrosoftLogo}\n          width=\"120\"\n          height=\"60\"\n          alt=\"microsoft logo\"\n        />\n      </Styled.Footer>\n    </Styled.SplashScreen>\n  );\n};\n\nexport default Splash;\n","export default __webpack_public_path__ + \"static/media/account-image.b872599f.webp\";","export default __webpack_public_path__ + \"static/media/cannot-clickable.82628c61.cur\";","export default __webpack_public_path__ + \"static/media/beam.80b9bea2.cur\";","// Libraries\nimport styled from 'styled-components';\n// Assets\nimport { styledComponents } from '../../../globalStyles';\nimport CanNotCursor from '../../../assets/cursors/cannot-clickable.cur';\nimport BeamCursor from '../../../assets/cursors/beam.cur';\n\nexport const UserAccount = styled(styledComponents.Button)`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  opacity: 0.6;\n  color: white;\n  font-size: 1.3rem;\n\n  &:hover {\n    opacity: 1;\n    transition: opacity 400ms;\n\n    cursor: ${(props) =>\n      !props.$isGuest &&\n      !props.$isUsernameWritten &&\n      `url(${CanNotCursor}), pointer`};\n  }\n\n  input {\n    background: transparent;\n    border: 0;\n    height: 30px;\n    outline: 0;\n    font-size: 1.3rem;\n    color: white;\n\n    &:hover {\n      cursor: url(${BeamCursor}), pointer;\n    }\n  }\n\n  &:nth-child(2) {\n    display: none;\n  }\n\n  @media (min-width: 600px) {\n    &:nth-child(2) {\n      display: flex;\n    }\n  }\n`;\n\nexport const Avatar = styled.img`\n  height: 60px;\n  width: 60px;\n  border: 2px solid white;\n  border-radius: 5px;\n\n  &:hover {\n    border-color: yellow;\n  }\n`;\n","// Assets\nimport CannotDealSound from '../assets/audios/cannot-deal.ogg';\nimport DealSound from '../assets/audios/deal.ogg';\nimport HintSound from '../assets/audios/hint.ogg';\nimport MouseDownSound from '../assets/audios/mouse-down.ogg';\nimport MouseUpSound from '../assets/audios/mouse-up.ogg';\nimport NoHintSound from '../assets/audios/no-hint.ogg';\nimport OpeningSound from '../assets/audios/opening.ogg';\nimport ShutdownSound from '../assets/audios/shutdown.ogg';\nimport WinSound from '../assets/audios/win.ogg';\n\nconst audios = {\n  'cannot-deal': CannotDealSound,\n  deal: DealSound,\n  hint: HintSound,\n  'mouse-down': MouseDownSound,\n  'mouse-up': MouseUpSound,\n  'no-hint': NoHintSound,\n  opening: OpeningSound,\n  shutdown: ShutdownSound,\n  win: WinSound,\n};\n\nexport default function getSounds(...soundList) {\n  const soundPlayFunctions = [];\n\n  soundList.forEach((soundName) => {\n    soundPlayFunctions.push(new Audio(audios[soundName]));\n  });\n\n  return soundPlayFunctions;\n}\n","export default __webpack_public_path__ + \"static/media/cannot-deal.c73ea08a.ogg\";","export default __webpack_public_path__ + \"static/media/deal.55b04c16.ogg\";","export default __webpack_public_path__ + \"static/media/hint.a3cb1791.ogg\";","export default __webpack_public_path__ + \"static/media/mouse-down.76ee1488.ogg\";","export default __webpack_public_path__ + \"static/media/mouse-up.f3d8384f.ogg\";","export default __webpack_public_path__ + \"static/media/no-hint.08835341.ogg\";","export default __webpack_public_path__ + \"static/media/opening.06e92163.ogg\";","export default __webpack_public_path__ + \"static/media/shutdown.dddbce6a.ogg\";","export default __webpack_public_path__ + \"static/media/win.6c8a4ec5.ogg\";","import React, { useState, useContext } from 'react';\n\nimport AccountImage from '../../../assets/images/account-image.webp';\nimport * as Styled from './styles';\nimport { UserContext } from '../../../contexts/UserContext';\nimport getSounds from '../../../utils/soundUtils';\n\nconst UserAccount = (props) => {\n  const { isGuest } = props;\n  const { user, setUser, setIsUserSelected } =\n    useContext(UserContext);\n  const [usernameInputText, setUsernameInputText] = useState(\n    user.username\n  );\n  const [openingSound] = getSounds('opening');\n\n  /*\n  ====================================================\n  =================== HANDLER ========================\n  ====================================================\n  */\n\n  const handleAccountClick = (e) => {\n    e.preventDefault();\n\n    setUser(\n      isGuest\n        ? { ...user, username: 'Guest' }\n        : { ...user, username: usernameInputText }\n    );\n\n    setIsUserSelected(true);\n    openingSound.play();\n  };\n\n  // For the button not to be clicked when I click the input\n  const handleInputClick = (e) => {\n    e.stopPropagation();\n  };\n\n  const handleTextChange = (e) => {\n    setUsernameInputText(e.target.value);\n  };\n\n  /*\n  ====================================================\n  ==================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <Styled.UserAccount\n      $isGuest={isGuest}\n      $isUsernameWritten={\n        usernameInputText && usernameInputText !== 'Guest'\n      }\n      onClick={handleAccountClick}\n      disabled={\n        !isGuest &&\n        usernameInputText === 'Guest' &&\n        usernameInputText !== ''\n      }\n    >\n      <Styled.Avatar\n        src={AccountImage}\n        alt=\"avatar\"\n        width=\"60\"\n        height=\"60\"\n      />\n      {isGuest ? (\n        <span>Guest</span>\n      ) : (\n        <input\n          type=\"text\"\n          placeholder=\"Or write your username\"\n          value={\n            usernameInputText === 'Guest' ? '' : usernameInputText\n          }\n          onClick={handleInputClick}\n          onChange={handleTextChange}\n          onKeyDown={(e) =>\n            e.key === 'Enter' && handleAccountClick(e)\n          }\n        />\n      )}\n    </Styled.UserAccount>\n  );\n};\n\nexport default UserAccount;\n","// Libraries\nimport styled from 'styled-components';\n// Assets\nimport { styledComponents } from '../../../globalStyles';\n\nexport const LoginScreen = styled(styledComponents.Screen)`\n  color: ${(props) => props.theme.colors.loginScreenTextColor};\n`;\n\nexport const Header = styled.header`\n  background-color: ${(props) =>\n    props.theme.colors.loginScreenHeaderBg};\n  border-bottom: 3px solid;\n  border-image-slice: 1;\n  border-image-source: ${(props) =>\n    props.theme.gradients.loginScreenHeaderBorderColor};\n  height: 90px;\n`;\n\nexport const Main = styled.main`\n  background: ${(props) => props.theme.gradients.loginScreenMainBg};\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 2fr 1fr;\n  // main = fullHeight - header - footer\n  height: calc(100% - 90px - 130px);\n  padding: 20px;\n\n  @media (min-width: ${(props) =>\n      props.theme.breakpoints.smallTablet}) {\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 1fr;\n  }\n`;\n\nexport const MainLeft = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 30px;\n  font-size: 1.9rem;\n\n  @media (min-width: ${(props) =>\n      props.theme.breakpoints.smallTablet}) {\n    padding-right: 60px;\n    border-right: 1px solid;\n    border-image-source: ${(props) =>\n      props.theme.gradients.loginScreenMiddleBorderColor};\n    border-image-slice: 0 1 0 0;\n    align-items: flex-end;\n  }\n\n  img {\n    width: 200px;\n  }\n\n  span {\n    font-size: 1.3rem;\n  }\n`;\n\nexport const MainRight = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 20px;\n  width: minmax(70vw, 90vw);\n  margin: 0 auto;\n\n  @media (min-width: ${(props) =>\n      props.theme.breakpoints.smallTablet}) {\n    padding-left: 30px;\n    width: 100%;\n  }\n`;\n\nexport const Footer = styled.footer`\n  align-items: center;\n  background-color: ${(props) =>\n    props.theme.colors.loginScreenFooterBg};\n  border-image-slice: 1;\n  border-image-source: ${(props) =>\n    props.theme.gradients.loginScreenFooterBorderColor};\n  border-top: 3px solid;\n  display: flex;\n  flex-direction: column;\n  font-size: 0.7rem;\n  gap: 10px;\n  height: 130px;\n  padding: 20px 50px;\n  text-align: center;\n\n  p {\n    max-width: 450px;\n  }\n\n  @media (min-width: ${(props) =>\n      props.theme.breakpoints.smallTablet}) {\n    flex-direction: row;\n    gap: 30px;\n    justify-content: space-between;\n    text-align: initial;\n  }\n`;\n\nexport const ShutdownButton = styled(styledComponents.Button)`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n\n  img {\n    width: 25px;\n    height: 25px;\n  }\n\n  span {\n    font-size: 1rem;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/winxp-shutdown.5a2ac0c4.webp\";","export default __webpack_public_path__ + \"static/media/winxp-logo2.928167b6.webp\";","// Libraries\nimport React from 'react';\n// Components | Utils\nimport UserAccount from '../UserAccount';\nimport getSounds from '../../../utils/soundUtils';\n// Assets\nimport * as Styled from './styles';\nimport WindowsXPShutdown from '../../../assets/images/winxp-shutdown.webp';\nimport WindowsXPLogo2 from '../../../assets/images/winxp-logo2.webp';\n\nconst Login = () => {\n  const [shutdownSound] = getSounds('shutdown');\n\n  /*\n  ====================================================\n  ==================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <Styled.LoginScreen>\n      <Styled.Header />\n      <Styled.Main>\n        <Styled.MainLeft>\n          <img\n            src={WindowsXPLogo2}\n            alt=\"windows xp logo\"\n            width=\"200\"\n            height=\"118\"\n          />\n          <span>To begin, select your user</span>\n        </Styled.MainLeft>\n        <Styled.MainRight>\n          <UserAccount isGuest />\n          <UserAccount />\n        </Styled.MainRight>\n      </Styled.Main>\n      <Styled.Footer>\n        <div>\n          <Styled.ShutdownButton onClick={() => shutdownSound.play()}>\n            <img\n              src={WindowsXPShutdown}\n              alt=\"shutdown icon\"\n              height=\"25\"\n              width=\"25\"\n            />\n            <span>Turn off computer</span>\n          </Styled.ShutdownButton>\n        </div>\n        <p>\n          This XP cannot be turned off. After all these years we have\n          been away, we wouldnt want to close, would we? But out of\n          respect for you, I will play a shutdown sound.\n        </p>\n      </Styled.Footer>\n    </Styled.LoginScreen>\n  );\n};\n\nexport default Login;\n","// Libraries\nimport styled from 'styled-components';\n// Components | Utils\nimport { styledComponents } from '../../globalStyles';\n\nexport const IntroductionScreen = styled(styledComponents.Screen)``;\n","// Libraries\nimport React, { useEffect, useState } from 'react';\n// Components | Utils\nimport Splash from '../../components/PreGame/Splash';\nimport Login from '../../components/PreGame/Login';\n// Assets\nimport * as Styled from './styles';\n\nconst Introduction = () => {\n  const [isOnSplash, setIsOnSplash] = useState(true);\n\n  /*\n  ====================================================\n  ================== USE EFFECT ======================\n  ====================================================\n  */\n\n  // Adds fake loading scene\n  useEffect(() => {\n    setTimeout(() => {\n      setIsOnSplash(false);\n    }, 2500);\n  }, []);\n\n  /*\n  ====================================================\n  ==================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <Styled.IntroductionScreen>\n      {isOnSplash ? <Splash /> : <Login />}\n    </Styled.IntroductionScreen>\n  );\n};\n\nexport default Introduction;\n","import CardBackImage from '../assets/images/cards/card-back.webp';\nimport CardImage1 from '../assets/images/cards/1.webp';\nimport CardImage2 from '../assets/images/cards/2.webp';\nimport CardImage3 from '../assets/images/cards/3.webp';\nimport CardImage4 from '../assets/images/cards/4.webp';\nimport CardImage5 from '../assets/images/cards/5.webp';\nimport CardImage6 from '../assets/images/cards/6.webp';\nimport CardImage7 from '../assets/images/cards/7.webp';\nimport CardImage8 from '../assets/images/cards/8.webp';\nimport CardImage9 from '../assets/images/cards/9.webp';\nimport CardImage10 from '../assets/images/cards/10.webp';\nimport CardImage11 from '../assets/images/cards/11.webp';\nimport CardImage12 from '../assets/images/cards/12.webp';\nimport CardImage13 from '../assets/images/cards/13.webp';\n\nexport const cardImages = {\n  0: CardBackImage,\n  1: CardImage1,\n  2: CardImage2,\n  3: CardImage3,\n  4: CardImage4,\n  5: CardImage5,\n  6: CardImage6,\n  7: CardImage7,\n  8: CardImage8,\n  9: CardImage9,\n  10: CardImage10,\n  11: CardImage11,\n  12: CardImage12,\n  13: CardImage13,\n};\n\nconst cardNo = {\n  back: 0,\n  ace: 1,\n  two: 2,\n  three: 3,\n  four: 4,\n  five: 5,\n  siv: 6,\n  seven: 7,\n  eight: 8,\n  nine: 9,\n  ten: 10,\n  jack: 11,\n  queen: 12,\n  king: 13,\n};\n\nconst cardCounts = {\n  ace: 8,\n  two: 8,\n  three: 8,\n  four: 8,\n  five: 8,\n  siv: 8,\n  seven: 8,\n  eight: 8,\n  nine: 8,\n  ten: 8,\n  jack: 8,\n  queen: 8,\n  king: 8,\n};\n\nexport const getCardNo = (type) => {\n  return cardNo[type];\n};\n\n// Fisher-Yates algorithm\nexport const shuffle = (array) => {\n  const copyArray = [...array];\n\n  for (let i = copyArray.length - 1; i > 0; i -= 1) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [copyArray[i], copyArray[j]] = [copyArray[j], copyArray[i]];\n  }\n  return copyArray;\n};\n\nconst checkCompletedDeck = (cards) => {\n  const completedDeck = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n  return cards.join().includes(completedDeck.join());\n};\n\nexport const moveCards = (cardDecks, source, destination) => {\n  const sourceCardIndex = source.index;\n  const sourceDeckId = source.droppableId;\n  const sourceDeck = { ...cardDecks[sourceDeckId] };\n\n  const destinationCardIndex = destination.index;\n  const destinationDeckId = destination.droppableId;\n  const destinationDeck = { ...cardDecks[destinationDeckId] };\n\n  const selectedCardList = sourceDeck.cards.splice(sourceCardIndex);\n\n  let isDragSuccessful = false;\n\n  const parentCardNo =\n    destinationDeck.cards[destinationCardIndex - 1];\n\n  const isNextCard =\n    destinationCardIndex === 0 ||\n    selectedCardList[0] === parentCardNo + 1;\n\n  if (isNextCard) {\n    destinationDeck.cards.push(...selectedCardList);\n    isDragSuccessful = true;\n\n    if (sourceDeck.visibleCardCount === selectedCardList.length) {\n      sourceDeck.visibleCardCount = 1;\n    } else {\n      sourceDeck.visibleCardCount -= selectedCardList.length;\n    }\n    destinationDeck.visibleCardCount += selectedCardList.length;\n  } else {\n    sourceDeck.cards.push(...selectedCardList);\n  }\n\n  const isThereACompletedDeck = checkCompletedDeck(\n    destinationDeck.cards\n  );\n\n  if (isThereACompletedDeck) {\n    destinationDeck.cards.splice(-13);\n    destinationDeck.visibleCardCount -=\n      destinationDeck.visibleCardCount === 13 ? 12 : 13;\n  }\n\n  return {\n    newCardDecks: {\n      ...cardDecks,\n      [sourceDeckId]: sourceDeck,\n      [destinationDeckId]: destinationDeck,\n    },\n    isThereACompletedDeck,\n    isDragSuccessful,\n  };\n};\n\nexport const deal = (cardDecks, dealingCards, cannotDealSound) => {\n  const copyCardDecks = { ...cardDecks };\n  const copyDealingDecks = [...dealingCards];\n\n  const a = Object.values(copyCardDecks).every(\n    (deck) => deck.cards.length > 0\n  );\n\n  if (a) {\n    const dealCards = copyDealingDecks.pop();\n\n    if (dealCards) {\n      /* eslint-disable no-param-reassign */\n      Object.entries(copyCardDecks).forEach(([, deck]) => {\n        deck.cards.push(dealCards.shift());\n        deck.visibleCardCount += 1;\n      });\n      /* eslint-enable no-param-reassign */\n    }\n  } else {\n    cannotDealSound.play();\n  }\n\n  return [{ ...copyCardDecks }, [...copyDealingDecks]];\n};\n\nexport const getRandomDecks = () => {\n  const cardList = Object.entries(cardCounts)\n    .map(([cardType, count]) => Array(count).fill(cardNo[cardType]))\n    .flat();\n\n  const shuffledCardList = shuffle(cardList);\n\n  return [\n    {\n      deck1: {\n        cards: shuffledCardList.slice(0, 6),\n        visibleCardCount: 1,\n      },\n      deck2: {\n        cards: shuffledCardList.slice(6, 12),\n        visibleCardCount: 1,\n      },\n      deck3: {\n        cards: shuffledCardList.slice(12, 18),\n        visibleCardCount: 1,\n      },\n      deck4: {\n        cards: shuffledCardList.slice(18, 24),\n        visibleCardCount: 1,\n      },\n      deck5: {\n        cards: shuffledCardList.slice(24, 29),\n        visibleCardCount: 1,\n      },\n      deck6: {\n        cards: shuffledCardList.slice(29, 34),\n        visibleCardCount: 1,\n      },\n      deck7: {\n        cards: shuffledCardList.slice(34, 39),\n        visibleCardCount: 1,\n      },\n      deck8: {\n        cards: shuffledCardList.slice(39, 44),\n        visibleCardCount: 1,\n      },\n      deck9: {\n        cards: shuffledCardList.slice(44, 49),\n        visibleCardCount: 1,\n      },\n      deck10: {\n        cards: shuffledCardList.slice(49, 54),\n        visibleCardCount: 1,\n      },\n    },\n    [\n      shuffledCardList.slice(54, 64),\n      shuffledCardList.slice(64, 74),\n      shuffledCardList.slice(74, 84),\n      shuffledCardList.slice(84, 94),\n      shuffledCardList.slice(94, 104),\n    ],\n  ];\n};\n\nexport const newGame = () => {\n  return getRandomDecks();\n};\n\nexport const getIndexWhichNextCardsDraggable = (deck) => {\n  // Deck: X X X 4 5 6 1 2\n  // Visible Cards Starting Index: 3 => X X X [4] 5 6 1 2\n\n  // EXAMPLE: X X X X X 5 10 Q K 8 9 10 J Q K\n  const visibleCardsStartingIndex =\n    deck.cards.length - deck.visibleCardCount;\n\n  let firstIndexOfOrderedCards = visibleCardsStartingIndex;\n  let nextCard;\n  let currentCard;\n\n  for (\n    let i = visibleCardsStartingIndex;\n    i < deck.cards.length;\n    i += 1\n  ) {\n    currentCard = deck.cards[i];\n    nextCard = deck.cards[i + 1];\n\n    if (nextCard && currentCard + 1 !== nextCard) {\n      firstIndexOfOrderedCards = i + 1;\n    }\n  }\n\n  return firstIndexOfOrderedCards;\n};\n\nexport const getOrderedCardListsFromDecks = (cardDecks) => {\n  const orderedCardListsFromDecks = [];\n\n  Object.entries(cardDecks).forEach(([, deck]) => {\n    orderedCardListsFromDecks.push({\n      startingIndex: getIndexWhichNextCardsDraggable(deck),\n      cards: deck.cards.slice(getIndexWhichNextCardsDraggable(deck)),\n    });\n  });\n\n  return orderedCardListsFromDecks;\n};\n\nexport const getHint = (cardDecks) => {\n  const orderedCardLists = getOrderedCardListsFromDecks(cardDecks);\n  const hints = [];\n\n  for (\n    let sourceDeckNo = 0;\n    sourceDeckNo < orderedCardLists.length;\n    sourceDeckNo += 1\n  ) {\n    const sourceDeck = orderedCardLists[sourceDeckNo];\n\n    for (\n      let subSourceDeckStartingIndex = 0;\n      subSourceDeckStartingIndex < sourceDeck.cards.length;\n      subSourceDeckStartingIndex += 1\n    ) {\n      for (\n        let destinationDeckNo = 0;\n        destinationDeckNo < orderedCardLists.length;\n        destinationDeckNo += 1\n      ) {\n        const destinationDeck = orderedCardLists[destinationDeckNo];\n\n        // (a && b && c) || (a && b') = (a && b') || (a && c)\n        // a : the first card of the deck to be dragged must match the last card of destination\n        // b : the parent of the child deck to be dragged must be the same as the parent of the destination\n        // c : the deck containing the sub-deck to be dragged must be shorter than the destination deck\n\n        if (\n          (sourceDeck.cards\n            .slice(subSourceDeckStartingIndex)\n            .at(0) ===\n            destinationDeck.cards.at(-1) + 1 &&\n            sourceDeck.cards.at(subSourceDeckStartingIndex - 1) !==\n              destinationDeck.cards.at(-1)) ||\n          (sourceDeck.cards\n            .slice(subSourceDeckStartingIndex)\n            .at(0) ===\n            destinationDeck.cards.at(-1) + 1 &&\n            destinationDeck.cards.length > subSourceDeckStartingIndex)\n        ) {\n          hints.push({\n            sourceDeckId: `deck${sourceDeckNo + 1}`,\n            destinationDeckId: `deck${destinationDeckNo + 1}`,\n            sourceStartingIndex:\n              sourceDeck.startingIndex + subSourceDeckStartingIndex,\n            destinationStartingIndex: destinationDeck.startingIndex,\n          });\n        }\n      }\n    }\n  }\n\n  return shuffle(hints)[0];\n};\n","export default __webpack_public_path__ + \"static/media/card-back.205fe8c2.webp\";","export default __webpack_public_path__ + \"static/media/1.9ff91e18.webp\";","export default __webpack_public_path__ + \"static/media/2.b1c765e0.webp\";","export default __webpack_public_path__ + \"static/media/3.2321343a.webp\";","export default __webpack_public_path__ + \"static/media/4.5244efb4.webp\";","export default __webpack_public_path__ + \"static/media/5.ddd891be.webp\";","export default __webpack_public_path__ + \"static/media/6.c0c31eb5.webp\";","export default __webpack_public_path__ + \"static/media/7.d4d42486.webp\";","export default __webpack_public_path__ + \"static/media/8.8e0ab8b0.webp\";","export default __webpack_public_path__ + \"static/media/9.4258b064.webp\";","export default __webpack_public_path__ + \"static/media/10.4f33b091.webp\";","export default __webpack_public_path__ + \"static/media/11.4aaeca48.webp\";","export default __webpack_public_path__ + \"static/media/12.a1614c7e.webp\";","export default __webpack_public_path__ + \"static/media/13.69318912.webp\";","import React, { useState, useEffect, createContext } from 'react';\nimport { getRandomDecks } from '../utils/cardUtils';\n\nexport const GameContext = createContext();\n\nconst GameContextProvider = (props) => {\n  const { children } = props;\n\n  const [cardDecks, setCardDecks] = useState({\n    deck1: {},\n    deck2: {},\n    deck3: {},\n    deck4: {},\n    deck5: {},\n    deck6: {},\n    deck7: {},\n    deck8: {},\n    deck9: {},\n    deck10: {},\n  });\n\n  const [dealingDecks, setDealingDecks] = useState([]);\n  const [isAnyDragging, setIsAnyDragging] = useState(false);\n  const [selectedCards, setSelectedCards] = useState({\n    deckId: '',\n    items: [],\n  });\n\n  const [gameStats, setGameStats] = useState({\n    completedDeckCount: 0,\n    score: 500,\n    moves: 0,\n  });\n\n  const [hint, setHint] = useState({});\n\n  useEffect(() => {\n    if (Object.keys(hint).length > 0) {\n      setTimeout(() => {\n        setHint({});\n      }, 1500);\n    }\n  }, [hint]);\n\n  useEffect(() => {\n    const [cDecks, dDecks] = getRandomDecks();\n    setCardDecks(cDecks);\n    setDealingDecks(dDecks);\n  }, []);\n\n  return (\n    <GameContext.Provider\n      value={{\n        cardDecks,\n        setCardDecks,\n        isAnyDragging,\n        setIsAnyDragging,\n        selectedCards,\n        setSelectedCards,\n        dealingDecks,\n        setDealingDecks,\n        gameStats,\n        setGameStats,\n        hint,\n        setHint,\n      }}\n    >\n      {children}\n    </GameContext.Provider>\n  );\n};\n\nexport default GameContextProvider;\n","// Libraries\nimport React, { useState, createContext } from 'react';\n\nexport const DesktopContext = createContext();\n\nconst DesktopContextProvider = (props) => {\n  const { children } = props;\n\n  const [isGameRunning, setIsGameRunning] = useState(false);\n\n  /*\n  ====================================================\n  ==================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <DesktopContext.Provider\n      value={{ isGameRunning, setIsGameRunning }}\n    >\n      {children}\n    </DesktopContext.Provider>\n  );\n};\n\nexport default DesktopContextProvider;\n","export default __webpack_public_path__ + \"static/media/close.b5796a71.svg\";","export default __webpack_public_path__ + \"static/media/close-hover.ac0a6081.svg\";","export default __webpack_public_path__ + \"static/media/close-active.4f1a7f52.svg\";","import styled, { css } from 'styled-components';\nimport CloseSVG from '../../../assets/images/close.svg';\nimport CloseHoverSVG from '../../../assets/images/close-hover.svg';\nimport CloseActiveSVG from '../../../assets/images/close-active.svg';\nimport { styledComponents } from '../../../globalStyles';\n\nexport const Window = styled.div`\n  height: 100%;\n  width: 100%;\n  display: grid;\n  grid-template-rows: 30px 20px 1fr;\n  z-index: 2;\n  background-color: ${(props) => props.theme.colors.xpWindowBg};\n\n  ${(props) =>\n    props.isGameOverWindow &&\n    css`\n      height: ${props?.size.height};\n      width: ${props?.size.width};\n      left: 0;\n      right: 0;\n      bottom: 10px;\n      position: absolute;\n      margin: 0 auto;\n      display: ${!props.isGameFinished && 'none'};\n      grid-template-rows: 30px 1fr;\n    `}\n`;\n\nexport const TitleBar = styled.div`\n  font-family: 'Trebuchet MS';\n  background: ${(props) => props.theme.gradients.titleBarBg};\n  font-size: 13px;\n  padding: 6px;\n  color: ${(props) => props.theme.colors.titleBarText};\n  display: flex;\n  align-items: center;\n\n  img {\n    height: 100%;\n  }\n`;\n\nexport const CloseButton = styled(styledComponents.Button)`\n  margin-left: auto;\n  width: 23px;\n  height: 23px;\n  background-image: url(${CloseSVG});\n  background-repeat: no-repeat;\n\n  &:hover {\n    background-image: url(${CloseHoverSVG});\n  }\n\n  &:not(:disabled):active {\n    background-image: url(${CloseActiveSVG});\n  }\n`;\n\nexport const WindowBody = styled.div`\n  height: 100%;\n`;\n","export default __webpack_public_path__ + \"static/media/solitaire-icon.949145f2.webp\";","// Library\nimport styled from 'styled-components';\n// Assets\nimport { styledComponents } from '../../../globalStyles';\n\nexport const Menu = styled.div`\n  background-color: #ece9d8;\n  display: flex;\n  font-size: 11px;\n`;\n\nexport const MenuItem = styled.div`\n  padding: 3px 5px;\n  display: flex;\n  position: relative;\n\n  &:hover {\n    background-color: #316ac5;\n\n    & > button {\n      color: white;\n    }\n\n    div {\n      display: flex;\n    }\n  }\n`;\n\nexport const MenuButton = styled(styledComponents.Button)`\n  font-size: 11px;\n  text-align: left;\n  color: black;\n\n  :hover + div {\n    display: flex;\n  }\n`;\n\nexport const MenuContent = styled.div`\n  display: none;\n  position: absolute;\n  z-index: 5;\n  top: 20px;\n  left: 0;\n  background-color: white;\n  border: 1px solid gray;\n  width: 200px;\n  padding: 1px;\n  flex-direction: column;\n`;\n\nexport const SubMenuButton = styled(styledComponents.Button)`\n  color: black;\n  padding: 2px 2px 4px 12px;\n  font-size: 11px;\n  width: 100%;\n  text-align: left;\n\n  &:hover {\n    background-color: #316ac5;\n    color: white;\n  }\n`;\n","// Libraries\nimport React, { useContext } from 'react';\n// Components | Utils\nimport { GameContext } from '../../../contexts/GameContext';\nimport getSounds from '../../../utils/soundUtils';\nimport { deal, newGame } from '../../../utils/cardUtils';\n// Assets\nimport * as Styled from './styles';\n\nconst WindowMenu = () => {\n  const {\n    cardDecks,\n    setCardDecks,\n    dealingDecks,\n    setDealingDecks,\n    setGameStats,\n  } = useContext(GameContext);\n\n  const [cannotDealSound, dealSound] = getSounds(\n    'cannot-deal',\n    'deal'\n  );\n\n  /*\n  ====================================================\n  =================== HANDLER ========================\n  ====================================================\n  */\n\n  const handleDealClick = () => {\n    dealSound.play();\n    const [returnCardDecks, returnDealingDecks] = deal(\n      cardDecks,\n      dealingDecks,\n      cannotDealSound\n    );\n    setCardDecks(returnCardDecks);\n    setDealingDecks(returnDealingDecks);\n  };\n\n  const handleClickNewGame = () => {\n    newGame(setCardDecks, setDealingDecks, setGameStats);\n  };\n\n  /*\n  ====================================================\n  ==================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <Styled.Menu>\n      <Styled.MenuItem>\n        <Styled.MenuButton>Game</Styled.MenuButton>\n        <Styled.MenuContent>\n          <Styled.SubMenuButton onClick={handleClickNewGame}>\n            New Game\n          </Styled.SubMenuButton>\n        </Styled.MenuContent>\n      </Styled.MenuItem>\n      <Styled.MenuItem>\n        <Styled.MenuButton onClick={handleDealClick}>\n          Deal!\n        </Styled.MenuButton>\n      </Styled.MenuItem>\n    </Styled.Menu>\n  );\n};\n\nexport default WindowMenu;\n","import React, { useContext } from 'react';\nimport * as Styled from './styles';\nimport SolitaireIcon from '../../../assets/images/solitaire-icon.webp';\nimport WindowMenu from '../WindowMenu';\nimport { DesktopContext } from '../../../contexts/DesktopContext';\n\nconst Window = (props) => {\n  const { children, title, isGameOverWindow, size, isGameFinished } =\n    props;\n\n  const { setIsGameRunning } = useContext(DesktopContext);\n\n  const handleClose = () => {\n    setIsGameRunning(false);\n  };\n\n  return (\n    <Styled.Window\n      size={size}\n      isGameOverWindow={isGameOverWindow}\n      isGameFinished={isGameFinished}\n    >\n      <Styled.TitleBar>\n        {!isGameOverWindow && (\n          <img src={SolitaireIcon} alt=\"solitaire icon\" />\n        )}\n        <span>{title}</span>\n        <Styled.CloseButton onClick={handleClose} />\n      </Styled.TitleBar>\n      {!isGameOverWindow && <WindowMenu />}\n\n      <Styled.WindowBody>{children}</Styled.WindowBody>\n    </Styled.Window>\n  );\n};\n\nexport default Window;\n","// Libraries\nimport styled from 'styled-components';\n\nexport const WinScreen = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: ${(props) => (!props.isGameFinished ? 'none' : 'flex')};\n  align-items: center;\n  justify-content: center;\n  font-size: 4rem;\n  font-weight: bold;\n  animation: ${(props) => props.theme.keyFrames.colorChange} 10s\n    infinite;\n`;\n\nexport const WindowContent = styled.div`\n  padding-left: 10px;\n  padding-right: 10px;\n  background-color: ${(props) => props.theme.colors.xpWindowBg};\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  font-size: 0.6rem;\n  text-align: center;\n  margin-top: 10px;\n\n  p {\n    line-height: 0.9rem;\n  }\n\n  button {\n    font-size: 0.55rem;\n    color: ${(props) => props.theme.colors.buttonText};\n    background-color: ${(props) => props.theme.colors.buttonBg};\n    width: 60px;\n    height: 20px;\n    border: 1px solid black;\n    border-radius: 3px;\n    margin: 0 auto;\n\n    &:hover {\n      box-shadow: ${(props) =>\n        props.theme.boxShadows.windowButton$hover};\n    }\n\n    &:active {\n      box-shadow: ${(props) =>\n        props.theme.boxShadows.windowButton$active};\n    }\n  }\n`;\n","// Libraries\nimport React, { useState, useContext } from 'react';\n// Components | Utils\nimport { UserContext } from '../../../contexts/UserContext';\nimport Window from '../../PreGame/Window';\nimport { newGame } from '../../../utils/cardUtils';\nimport getSounds from '../../../utils/soundUtils';\n// Assets\nimport * as Styled from './styles';\n\nconst GameOver = (props) => {\n  const { setCardDecks, setDealingDecks, gameStats, setGameStats } =\n    props;\n  const { user } = useContext(UserContext);\n  const [isGameFinished, setIsGameFinished] = useState(false);\n  const [winSound] = getSounds('win');\n\n  /*\n  ====================================================\n  =================== HANDLER ========================\n  ====================================================\n  */\n\n  const handleNewGameClick = () => {\n    setIsGameFinished(false);\n    const [cDecks, dDecks] = newGame();\n    setCardDecks(cDecks);\n    setDealingDecks(dDecks);\n    setGameStats({\n      completedDeckCount: 0,\n      score: 500,\n      moves: 0,\n    });\n  };\n\n  if (gameStats.completedDeckCount === 8) {\n    winSound.play();\n    setIsGameFinished(true);\n  }\n\n  /*\n  ====================================================\n  =================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <>\n      <Styled.WinScreen isGameFinished={isGameFinished}>\n        <span>You Won!</span>\n      </Styled.WinScreen>\n      <Window\n        title=\"Game Over\"\n        isGameOverWindow\n        size={{ height: '140px', width: '320px' }}\n        isGameFinished={isGameFinished}\n      >\n        <Styled.WindowContent>\n          <p>\n            Congratulations {user.username},<br /> you won with{' '}\n            {gameStats.score} points in {gameStats.moves} moves!\n          </p>\n          <p> Do you want to start another game?</p>\n          <button type=\"button\" onClick={handleNewGameClick}>\n            Yes\n          </button>\n        </Styled.WindowContent>\n      </Window>\n    </>\n  );\n};\n\nexport default React.memo(GameOver);\n","import styled from 'styled-components';\n\nexport const DeckArea = styled.div`\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n\n  justify-content: space-evenly;\n  gap: 1px;\n\n  .card {\n    height: 100%;\n    width: auto;\n\n    img {\n      height: auto;\n      width: 100%;\n    }\n  }\n\n  @media (min-width: 500px) {\n    grid-template-columns: repeat(10, min(9%, 71px));\n    grid-template-rows: 1fr;\n    gap: 10px;\n  }\n`;\n","import React from 'react';\nimport { cardImages } from '../../../utils/cardUtils';\n\nconst Card = React.forwardRef((props, ref) => {\n  const { isClose, cardId } = props;\n\n  return (\n    <div className=\"card\" ref={ref}>\n      <img\n        draggable={false} // Removes the preview created by dragging and holding the image.\n        src={isClose ? cardImages[0] : cardImages[cardId]}\n        alt=\"card\"\n      />\n    </div>\n  );\n});\n\nexport default React.memo(Card);\n","import styled from 'styled-components';\n\nexport const Deck = styled.div`\n  display: grid;\n  grid-template-rows: repeat(27, min(16px, 2.5vw));\n  max-width: 71px;\n  position: relative;\n\n  .empty-border {\n    position: absolute;\n    box-shadow: inset 0 0 0 2px white;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 6.3vw;\n    z-index: 0;\n    border-radius: 4px;\n  }\n\n  div {\n    z-index: 1;\n  }\n\n  @media (min-width: 500px) {\n    grid-template-rows: repeat(\n      ${(props) => props.deckLength + 5},\n      min(17px, 3vh)\n    );\n  }\n`;\n\n/* \nimport styled from 'styled-components';\n\nexport const Deck = styled.div`\n  display: flex;\n  flex-direction: column;\n  box-shadow: inset 0 0 0 2px white;\n  max-width: 71px;\n  min-height: 42.05px;\n  height: 12.5vw;\n  max-height: 96px;\n  border-radius: 4px;\n  box-shadow: inset 0 0 0 2px white;\n`;\n\n/*\nimport styled from 'styled-components';\n\nexport const Deck = styled.div`\n  display: grid;\n  grid-template-rows: repeat(15, min(16px, 2.5vw));\n  max-width: 71px;\n\n  @media (min-width: 500px) {\n    grid-template-rows: repeat(27, min(16px, 1vw));\n  }\n`;\n\n*/\n","// Libraries\nimport React, { useContext } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\n// Components | Utils\nimport { GameContext } from '../../../contexts/GameContext';\nimport Card from '../Card';\nimport { getIndexWhichNextCardsDraggable } from '../../../utils/cardUtils';\nimport getSounds from '../../../utils/soundUtils';\n// Assets\nimport * as Styled from './styles';\n\nconst CardDeck = React.forwardRef((props, ref) => {\n  const { deckId, deck } = props;\n  const { selectedCards, hint } = useContext(GameContext);\n\n  const [mouseDownSound] = getSounds('mouse-down');\n\n  const handleMouseDownFromCard = (e) => {\n    e.preventDefault();\n    mouseDownSound.play();\n  };\n\n  function getStyle(style, snapshot, dId, index) {\n    /* \n    This function overrides the default gliding behavior of the react-beautiful-dnd \n    package when the drag is above the other draggable object.\n    */\n\n    if (snapshot.isDropAnimating) {\n      return {\n        ...style,\n        // cannot be 0, but make it super tiny\n        transitionDuration: '0.001s',\n      };\n    }\n\n    if (snapshot.isDragging) {\n      // We do not apply it to the being dragged object so that the drag behavior can continue.\n      return style;\n    }\n\n    if (\n      selectedCards.deckId === dId &&\n      selectedCards.items.includes(index)\n    ) {\n      return {\n        ...style,\n        display: 'none',\n        // We ovveride the \"translate(... px)\" that performs the sliding behavior as \"none\".\n        transform: 'none',\n      };\n    }\n\n    return {\n      ...style,\n      // We ovveride the \"translate(... px)\" that performs the sliding behavior as \"none\".\n      transform: 'none',\n      filter:\n        (hint.sourceDeckId === dId &&\n          hint.sourceStartingIndex <= index) ||\n        (hint.destinationDeckId === dId &&\n          hint.destinationStartingIndex <= index)\n          ? 'invert(100%)'\n          : '',\n      transition:\n        hint.destinationDeckId === dId &&\n        hint.destinationStartingIndex <= index\n          ? 'filter 150ms 150ms'\n          : '',\n    };\n  }\n\n  let indexWhichNextCardsDraggable;\n  if ('cards' in deck) {\n    indexWhichNextCardsDraggable =\n      getIndexWhichNextCardsDraggable(deck);\n  }\n\n  return (\n    'cards' in deck && (\n      <Styled.Deck ref={ref} deckLength={deck.cards.length}>\n        <div className=\"empty-border\" />\n        {deck.cards.map((id, index) => (\n          <Draggable\n            key={`deck${deckId}${index}`}\n            draggableId={`deck${deckId}${index}`}\n            index={index}\n            isDragDisabled={index < indexWhichNextCardsDraggable}\n          >\n            {(provided, snapshot) => {\n              return (\n                <div\n                  role=\"none\"\n                  ref={provided.innerRef}\n                  {...provided.draggableProps}\n                  {...provided.dragHandleProps}\n                  style={getStyle(\n                    provided.draggableProps.style,\n                    snapshot,\n                    `deck${deckId}`,\n                    index\n                  )}\n                  onMouseDown={\n                    index >= indexWhichNextCardsDraggable\n                      ? handleMouseDownFromCard\n                      : undefined\n                  }\n                >\n                  <Card\n                    deckId={deckId}\n                    cardId={id}\n                    isClose={\n                      index <\n                      deck.cards.length - deck.visibleCardCount\n                    }\n                  />\n                </div>\n              );\n            }}\n          </Draggable>\n        ))}\n      </Styled.Deck>\n    )\n  );\n});\n\nexport default CardDeck;\n","import React from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport * as Styled from './styles';\nimport CardDeck from '../CardDeck';\n\nconst DeckArea = (props) => {\n  const { cardDecks } = props;\n\n  return (\n    <Styled.DeckArea>\n      {Array.from({ length: 10 }, (_, i) => i + 1).map((id) => (\n        <Droppable key={`deck${id}`} droppableId={`deck${id}`}>\n          {(provided) => (\n            <div\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n              style={{ height: 'fit-content' }}\n            >\n              <CardDeck deckId={id} deck={cardDecks[`deck${id}`]} />\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      ))}\n    </Styled.DeckArea>\n  );\n};\n\nexport default React.memo(DeckArea);\n","// Libraries\nimport styled from 'styled-components';\n// Assets\n\nexport const Board = styled.div`\n  position: relative;\n  height: 100%;\n  padding: 10px;\n  background-image: url(${`${process.env.PUBLIC_URL}/solitaire-background.webp`});\n  background-size: cover;\n  display: grid;\n  grid-template-rows: 1fr 50px;\n\n  @media (min-width: 500px) {\n    padding: 20px 30px;\n    grid-template-rows: 1fr 100px;\n  }\n`;\n\nexport const BottomArea = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  height: 50px;\n\n  @media (min-width: 500px) {\n    height: 100px;\n  }\n`;\n","// Libraries\nimport styled from 'styled-components';\n\nexport const CompletedDeckArea = styled.div`\n  width: 110px;\n  height: 100%;\n  display: inline-flex;\n\n  .card {\n    &:not(:first-child) {\n      margin-left: -30px;\n\n      @media (min-width: 500px) {\n        margin-left: -62px;\n      }\n    }\n\n    img {\n      height: 100%;\n    }\n  }\n`;\n","// Libraries\nimport React from 'react';\n// Components | Utils\nimport Card from '../Card';\n// Assets\nimport * as Styled from './styles';\n\nconst CompletedDeckArea = (props) => {\n  const { completedDeckCount } = props;\n\n  /*\n  ====================================================\n  ==================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <Styled.CompletedDeckArea>\n      {React.Children.toArray(\n        Array(completedDeckCount).fill(<Card cardId={1} />)\n      )}\n    </Styled.CompletedDeckArea>\n  );\n};\n\nexport default React.memo(CompletedDeckArea);\n","// Libraries\nimport styled from 'styled-components';\nimport ClickableCursor from '../../../assets/cursors/clickable.cur';\n\nexport const HintArea = styled.div`\n  padding: 7px;\n  height: 100%;\n  margin: 0 10px;\n  flex-grow: 1;\n  max-width: 130px;\n  min-width: 100px;\n  background-color: green;\n  border: 1px solid black;\n  color: white;\n  font-size: 0.5rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  cursor: url(${ClickableCursor}), pointer;\n\n  @media (min-width: 500px) {\n    font-size: 0.8rem;\n    max-width: 180px;\n  }\n`;\n\nexport const Hint = styled.div`\n  padding: 2px;\n  background-color: green;\n  display: flex;\n  gap: 10px;\n\n  span {\n    display: inline-block;\n    width: 50%;\n\n    &:first-of-type {\n      text-align: right;\n    }\n  }\n`;\n","// Libraries\nimport React from 'react';\n// Components | Utils\nimport { getHint } from '../../../utils/cardUtils';\nimport getSounds from '../../../utils/soundUtils';\n// Assets\nimport * as Styled from './styles';\n\nconst HintArea = (props) => {\n  const { setHint, cardDecks, gameStats, setGameStats } = props;\n\n  const [hintSound, noHintSound] = getSounds('hint', 'no-hint');\n\n  /*\n  ====================================================\n  =================== HANDLER ========================\n  ====================================================\n  */\n\n  const handleClickHint = () => {\n    const hint = getHint(cardDecks);\n\n    if (hint) {\n      hintSound.play();\n      setHint({\n        sourceDeckId: hint.sourceDeckId,\n        sourceStartingIndex: hint.sourceStartingIndex,\n        destinationDeckId: hint.destinationDeckId,\n        destinationStartingIndex: hint.destinationStartingIndex,\n      });\n\n      const previousGameStats = { ...gameStats };\n      previousGameStats.score -= 10;\n\n      setGameStats(previousGameStats);\n    } else {\n      noHintSound.play();\n    }\n  };\n\n  /*\n  ====================================================\n  =================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <Styled.HintArea onClick={handleClickHint}>\n      <Styled.Hint>\n        <span>Score:</span>\n        <span>{gameStats.score}</span>\n      </Styled.Hint>\n      <Styled.Hint>\n        <span>Moves:</span>\n        <span>{gameStats.moves}</span>\n      </Styled.Hint>\n    </Styled.HintArea>\n  );\n};\n\nexport default React.memo(HintArea);\n","// Libraries\nimport styled from 'styled-components';\n// Assets\nimport ClickableCursor from '../../../assets/cursors/clickable.cur';\n\nexport const DealArea = styled.div`\n  width: 110px;\n  height: 100%;\n  display: inline-flex;\n  flex-direction: row-reverse;\n  cursor: url(${ClickableCursor}), pointer;\n\n  .card {\n    &:not(:last-child) {\n      margin-left: -30px;\n\n      @media (min-width: 500px) {\n        margin-left: -62px;\n      }\n    }\n\n    img {\n      height: 100%;\n    }\n  }\n`;\n","// Libraries\nimport React, { useContext } from 'react';\n// Components | Utils\nimport Card from '../Card';\nimport { deal } from '../../../utils/cardUtils';\nimport getSounds from '../../../utils/soundUtils';\n// Assets\nimport * as Styled from './styles';\nimport { GameContext } from '../../../contexts/GameContext';\n\nconst DealArea = (props) => {\n  const { setCardDecks, cardDecks } = props;\n  const [cannotDealSound, dealSound] = getSounds(\n    'cannot-deal',\n    'deal'\n  );\n  const { dealingDecks, setDealingDecks } = useContext(GameContext);\n  /*\n  ====================================================\n  =================== HANDLER ========================\n  ====================================================\n  */\n\n  const handleDealClick = () => {\n    dealSound.play();\n\n    const [returnCardDecks, returnDealingDecks] = deal(\n      cardDecks,\n      dealingDecks,\n      cannotDealSound\n    );\n\n    setCardDecks(returnCardDecks);\n    setDealingDecks(returnDealingDecks);\n  };\n\n  /*\n  ====================================================\n  =================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <Styled.DealArea\n      onClick={dealingDecks.length ? handleDealClick : undefined}\n    >\n      {React.Children.toArray(\n        Array(dealingDecks.length).fill(<Card isClose />)\n      )}\n    </Styled.DealArea>\n  );\n};\n\nexport default React.memo(DealArea);\n","// Libraries\nimport React, { useContext } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\n// Components | Utils\nimport { GameContext } from '../../contexts/GameContext';\nimport Window from '../../components/PreGame/Window';\nimport GameOver from '../../components/Game/GameOver';\nimport DeckArea from '../../components/Game/DeckArea';\nimport { moveCards } from '../../utils/cardUtils';\n// Assets\nimport * as Styled from './styles';\nimport CompletedDeckArea from '../../components/Game/CompletedArea';\nimport HintArea from '../../components/Game/HintArea';\nimport DealArea from '../../components/Game/DealArea';\n\nconst SolitaireGame = () => {\n  const {\n    cardDecks,\n    setCardDecks,\n    setSelectedCards,\n    setDealingDecks,\n    gameStats,\n    setGameStats,\n    setHint,\n  } = useContext(GameContext);\n\n  /*\n  ====================================================\n  =================== HANDLER ========================\n  ====================================================\n  */\n\n  const handleOnDragEnd = (result) => {\n    const { source, destination } = result;\n\n    setSelectedCards({\n      deckId: '',\n      items: [],\n    });\n\n    if (!destination) {\n      return;\n    }\n\n    const sourceDeckId = source.droppableId;\n    const destinationDeckId = destination.droppableId;\n\n    if (sourceDeckId === destinationDeckId) {\n      return;\n    }\n\n    const { newCardDecks, isThereACompletedDeck, isDragSuccessful } =\n      moveCards(cardDecks, source, destination);\n\n    if (isDragSuccessful) {\n      const previousGameStats = { ...gameStats };\n      previousGameStats.moves += 1;\n      previousGameStats.score -= 1;\n\n      if (isThereACompletedDeck) {\n        previousGameStats.completedDeckCount += 1;\n        previousGameStats.score += 100;\n      }\n\n      setGameStats(previousGameStats);\n      setCardDecks(newCardDecks);\n    }\n  };\n\n  const handleOnDragStart = (result) => {\n    const { source } = result;\n\n    const sourceCardIndex = source.index;\n    const sourceDeckId = source.droppableId;\n    const sourceDeck = { ...cardDecks[sourceDeckId] };\n\n    setSelectedCards({\n      deckId: sourceDeckId,\n      items: Array.from(\n        {\n          length: sourceDeck.cards.length - sourceCardIndex,\n        },\n        (_, i) => i + sourceCardIndex\n      ),\n    });\n  };\n\n  /*\n  ====================================================\n  =================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <Window title=\"Spider Solitaire\">\n      <DragDropContext\n        onDragEnd={handleOnDragEnd}\n        onDragStart={handleOnDragStart}\n      >\n        <Styled.Board>\n          <DeckArea cardDecks={cardDecks} />\n          <Styled.BottomArea>\n            <CompletedDeckArea\n              completedDeckCount={gameStats.completedDeckCount}\n            />\n            <HintArea\n              setHint={setHint}\n              cardDecks={cardDecks}\n              gameStats={gameStats}\n              setGameStats={setGameStats}\n            />\n            <DealArea\n              setCardDecks={setCardDecks}\n              cardDecks={cardDecks}\n            />\n          </Styled.BottomArea>\n          <GameOver\n            setCardDecks={setCardDecks}\n            setDealingDecks={setDealingDecks}\n            gameStats={gameStats}\n            setGameStats={setGameStats}\n          />\n        </Styled.Board>\n      </DragDropContext>\n    </Window>\n  );\n};\n\nexport default SolitaireGame;\n","// Library\nimport styled from 'styled-components';\n// Assets\nimport { styledComponents } from '../../../globalStyles';\n\nexport const Taskbar = styled.section`\n  background: ${(props) => props.theme.gradients.taskbarBg};\n  display: flex;\n  height: 35px;\n  overflow: hidden;\n`;\n\nexport const StartButton = styled(styledComponents.Button)`\n  &:hover {\n    filter: brightness(105%);\n  }\n  img {\n    height: 100%;\n  }\n`;\n\nexport const TaskList = styled.div`\n  align-items: center;\n  display: flex;\n  flex-grow: 1;\n  gap: 1px;\n  padding-left: 20px;\n  padding-top: 4px;\n`;\n\nexport const Task = styled(styledComponents.Button)`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.taskBg};\n  border-radius: 2px;\n  box-shadow: ${(props) => props.theme.boxShadows.task};\n  display: flex;\n  gap: 3px;\n  height: 65%;\n  max-width: 120px;\n  min-width: 100px;\n  padding: 4px 8px;\n  width: 40%;\n\n  &:hover {\n    background-color: ${(props) => props.theme.colors.taskBg$hover};\n  }\n\n  span {\n    font-size: 0.55rem;\n    line-height: 0.6rem;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/winxp-start-button.5316ea67.webp\";","export default function getTimeAsAMPM() {\n  const date = new Date();\n  let hours = date.getHours();\n  let minutes = date.getMinutes();\n  const ampm = hours >= 12 ? 'PM' : 'AM';\n  hours %= 12;\n  hours = hours || 12;\n  minutes = minutes < 10 ? `0${minutes}` : minutes;\n  const strTime = `${hours}:${minutes} ${ampm}`;\n  return strTime;\n}\n","// Library\nimport styled from 'styled-components';\n\nexport const Toolbar = styled.div`\n  align-items: center;\n  background: ${(props) => props.theme.gradients.toolbarBg};\n  border-left: 3px solid rgb(16, 66, 175);\n  color: ${(props) => props.theme.colors.toolbarText};\n  display: flex;\n  font-size: 0.65rem;\n  gap: 5px;\n  height: 100%;\n  padding: 4px 15px 3px 10px;\n  width: fit-content;\n`;\n","export default __webpack_public_path__ + \"static/media/msn-icon.81c25df4.webp\";","// Libraries\nimport React, { useState, useEffect } from 'react';\n// Components | Utils\nimport getTimeAsAMPM from '../../../utils/dateUtils';\n// Assets\nimport * as Styled from './styles';\nimport MsnIcon from '../../../assets/images/msn-icon.webp';\n\nconst Toolbar = () => {\n  const [time, setTime] = useState(getTimeAsAMPM());\n\n  /*\n  ====================================================\n  ================== USE EFFECT ======================\n  ====================================================\n  */\n\n  useEffect(() => {\n    setInterval(() => setTime(getTimeAsAMPM()), 30000);\n  }, []);\n\n  /*\n  ====================================================\n  ==================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <Styled.Toolbar>\n      <img src={MsnIcon} alt=\"msn icon\" width=\"32\" height=\"21\" />\n      <span>{time}</span>\n    </Styled.Toolbar>\n  );\n};\n\nexport default Toolbar;\n","// Libraries\nimport React, { useContext } from 'react';\n// Components | Utils\nimport { DesktopContext } from '../../../contexts/DesktopContext';\n// Assets\nimport * as Styled from './styles';\nimport XpStartButton from '../../../assets/images/winxp-start-button.webp';\nimport SolitaireIcon from '../../../assets/images/solitaire-icon.webp';\nimport Toolbar from '../Toolbar';\n\nconst Taskbar = () => {\n  const { isGameRunning } = useContext(DesktopContext);\n\n  /*\n  ====================================================\n  ==================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <Styled.Taskbar>\n      <Styled.StartButton>\n        <img\n          src={XpStartButton}\n          alt=\"win xp start\"\n          height=\"35\"\n          width=\"110\"\n        />\n      </Styled.StartButton>\n      <Styled.TaskList>\n        {isGameRunning && (\n          <Styled.Task>\n            <img\n              src={SolitaireIcon}\n              alt=\"solitaire icon\"\n              width=\"15\"\n              height=\"15\"\n            />\n            <span>Spider Solitaire</span>\n          </Styled.Task>\n        )}\n      </Styled.TaskList>\n      <Toolbar />\n    </Styled.Taskbar>\n  );\n};\n\nexport default Taskbar;\n","import styled from 'styled-components';\n\nexport const Desktop = styled.div`\n  background-image: url(${`${process.env.PUBLIC_URL}/winxp-background.webp`});\n  background-repeat: no-repeat;\n  background-size: auto;\n  height: 100%;\n`;\n\nexport const ProgramContainer = styled.main`\n  height: calc(100% - 35px);\n`;\n\nexport const ProgramList = styled.main`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  gap: 15px;\n  padding: 40px;\n`;\n","import styled from 'styled-components';\nimport { styledComponents } from '../../../globalStyles';\n\nexport const Program = styled(styledComponents.Button)`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  font-size: 0.7rem;\n  gap: 5px;\n  line-height: 0.8rem;\n  text-align: center;\n  width: 70px;\n`;\n","// Libraries\nimport React, { useContext } from 'react';\n// Assets\nimport * as Styled from './styles';\nimport SolitaireIcon from '../../../assets/images/solitaire-icon.webp';\nimport { DesktopContext } from '../../../contexts/DesktopContext';\n\nconst Program = () => {\n  const { setIsGameRunning } = useContext(DesktopContext);\n\n  /*\n  ====================================================\n  =================== HANDLER ========================\n  ====================================================\n  */\n\n  const handleProgramClick = () => {\n    setIsGameRunning(true);\n  };\n\n  return (\n    <Styled.Program\n      onDoubleClick={handleProgramClick}\n      onTouchStart={handleProgramClick}\n    >\n      <img src={SolitaireIcon} alt=\"\" width=\"40\" height=\"40\" />\n      <span>Spider Solitaire</span>\n    </Styled.Program>\n  );\n};\n\nexport default Program;\n","// Libraries\nimport React, { useContext } from 'react';\n// Components | Utils\nimport GameContextProvider from '../../contexts/GameContext';\nimport { DesktopContext } from '../../contexts/DesktopContext';\nimport SolitaireGame from '../SolitaireGame';\nimport Taskbar from '../../components/PreGame/Taskbar';\n// Assets\nimport * as Styled from './styles';\nimport Program from '../../components/PreGame/Program/index';\n\nconst Desktop = () => {\n  const { isGameRunning } = useContext(DesktopContext);\n\n  /*\n  ====================================================\n  ==================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <Styled.Desktop>\n      <Styled.ProgramContainer>\n        {!isGameRunning ? (\n          <Styled.ProgramList>\n            <Program />\n          </Styled.ProgramList>\n        ) : (\n          <GameContextProvider>\n            <SolitaireGame />\n          </GameContextProvider>\n        )}\n      </Styled.ProgramContainer>\n      <Taskbar />\n    </Styled.Desktop>\n  );\n};\n\nexport default Desktop;\n","// Libraries\nimport React, { useContext } from 'react';\n// Components | Utils\nimport Introduction from './views/Introduction';\nimport Desktop from './views/Desktop';\nimport { UserContext } from './contexts/UserContext';\nimport DesktopContextProvider from './contexts/DesktopContext';\n\nfunction App() {\n  const { isUserSelected } = useContext(UserContext);\n\n  /*\n  ====================================================\n  ==================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <div id=\"app\">\n      {isUserSelected ? (\n        <DesktopContextProvider>\n          <Desktop />\n        </DesktopContextProvider>\n      ) : (\n        <Introduction />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// Libraries\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\n// Components | Utils\nimport UserContextProvider from './contexts/UserContext';\nimport App from './App';\n// Assets\nimport './index.scss';\nimport { theme } from './globalStyles';\n\n/* eslint-disable no-console */\nconsole.log(\n  \"%cHi, I'm Enes. Welcome to my project. You can find more at https://enesbaspinar.me. Oh by the way, feel free to look at my CV :)\",\n  'background: #222; color: #bada55; padding: 4px;'\n);\n/* eslint-enable no-console */\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserContextProvider>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </UserContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}