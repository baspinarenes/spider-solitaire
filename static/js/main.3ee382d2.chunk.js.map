{"version":3,"sources":["contexts/UserContext.js","assets/cursors/normal.cur","assets/cursors/clickable.cur","globalStyles.js","components/PreGame/Splash/styles.js","assets/images/winxp-logo.webp","assets/images/microsoft-logo.webp","components/PreGame/Splash/index.js","utils/soundUtils.js","assets/audios/cannot-deal.ogg","assets/audios/deal.ogg","assets/audios/hint.ogg","assets/audios/mouse-down.ogg","assets/audios/mouse-up.ogg","assets/audios/no-hint.ogg","assets/audios/opening.ogg","assets/audios/shutdown.ogg","assets/audios/win.ogg","assets/cursors/cannot-clickable.cur","assets/cursors/beam.cur","components/PreGame/UserAccount/styles.js","assets/images/account-image.webp","components/PreGame/UserAccount/index.js","components/PreGame/Login/styles.js","assets/images/winxp-shutdown.webp","assets/images/winxp-logo2.webp","components/PreGame/Login/index.js","views/Introduction/styles.js","views/Introduction/index.js","utils/cardUtils.js","assets/images/cards/card-back.webp","assets/images/cards/1.webp","assets/images/cards/2.webp","assets/images/cards/3.webp","assets/images/cards/4.webp","assets/images/cards/5.webp","assets/images/cards/6.webp","assets/images/cards/7.webp","assets/images/cards/8.webp","assets/images/cards/9.webp","assets/images/cards/10.webp","assets/images/cards/11.webp","assets/images/cards/12.webp","assets/images/cards/13.webp","contexts/GameContext.js","contexts/DesktopContext.js","contexts/HintContext.js","contexts/DraggingContext.js","components/PreGame/WindowMenu/styles.js","components/PreGame/WindowMenu/index.js","assets/images/close.svg","assets/images/close-hover.svg","assets/images/close-active.svg","components/PreGame/Window/styles.js","assets/images/solitaire-icon.webp","components/PreGame/Window/index.js","components/Game/GameOver/styles.js","components/Game/GameOver/index.js","components/Game/Card/styles.js","components/Game/Card/index.js","components/Game/Deck/styles.js","components/Game/Deck/index.js","components/Game/DeckArea/styles.js","components/Game/DeckArea/index.js","components/Game/CompletedArea/styles.js","components/Game/CompletedArea/index.js","components/Game/HintArea/styles.js","components/Game/HintArea/index.js","components/Game/DealArea/styles.js","components/Game/DealArea/index.js","views/SolitaireGame/styles.js","views/SolitaireGame/index.js","components/PreGame/Program/styles.js","components/PreGame/Program/index.js","utils/dateUtils.js","components/PreGame/Toolbar/styles.js","assets/images/msn-icon.webp","components/PreGame/Toolbar/index.js","components/PreGame/Taskbar/styles.js","assets/images/winxp-start-button.webp","components/PreGame/Taskbar/index.js","views/Desktop/styles.js","views/Desktop/index.js","App.js","index.js"],"names":["UserContext","createContext","UserContextProvider","props","children","useState","username","user","setUser","isUserSelected","setIsUserSelected","useEffect","sessionStoragedUser","sessionStorage","getItem","JSON","parse","setItem","stringify","Provider","value","colors","whiteA03","white","yellow","black","lightBlue","blue","darkBlue","navyBlue","orange","beige","pink","aqua","transparent","green","brightGreen","theme","taskBg","loginScreenText","loginScreenHeaderBg","loginScreenFooterText","loginScreenFooterBg","loginScreenTextColor","buttonBg","buttonText","xpWindowBg","titleBarText","hintAreaBg","hintAreaText","subMenuButtonText","subMenuButtonText$hover","subMenuButtonBg$hover","menuButtonText","menuButtonBg$hover","menuButtonText$hover","menuBg","menuBarBg","toolbarText","taskBg$hover","loaderBorder","splashScreenText","splashScreenBg","loginAccountInputText","loginAccountInputBg","loginAccountText","loginAccountBorder$hover","windowBorder","gradients","barBg","loginScreenFooterBorderColor","loginScreenHeaderBorderColor","loginScreenMiddleBorderColor","titleBarBg","loginScreenMainBg","toolbarBg","taskbarBg","keyFrames","loadingKeyFrame","keyframes","colorChange","red","boxShadows","emptyDeck","task","windowButton$hover","windowButton$active","breakpoints","smallTablet","styledComponents","Button","styled","button","ClickableCursor","Screen","div","NormalCursor","SplashScreen","Main","main","Logo","img","Loader","Bars","Bar","Footer","footer","FooterLogo","Splash","src","WindowsXPLogo","width","height","alt","MicrosoftLogo","audios","deal","hint","opening","shutdown","win","getSounds","soundPlayFunctions","soundList","forEach","soundName","push","Audio","UserAccount","$isGuest","$isUsernameWritten","CanNotCursor","BeamCursor","Avatar","isGuest","useContext","usernameInputText","setUsernameInputText","openingSound","handleAccountClick","e","preventDefault","play","onClick","disabled","AccountImage","type","placeholder","stopPropagation","onChange","target","onKeyDown","key","LoginScreen","Header","header","MainLeft","section","MainRight","ShutdownButton","Login","shutdownSound","WindowsXPLogo2","WindowsXPShutdown","IntroductionScreen","Introduction","isOnSplash","setIsOnSplash","splashTimeout","setTimeout","clearTimeout","cardImages","cardNo","back","ace","two","three","four","five","siv","seven","eight","nine","ten","jack","queen","king","cardCounts","shuffle","array","copyArray","i","length","j","Math","floor","random","cardDecks","dealingCards","cannotDealSound","copyDealingDecks","Object","values","every","deck","cards","dealCards","pop","entries","shift","visibleCardCount","getRandomDecks","cardList","map","cardType","count","Array","fill","flat","shuffledCardList","deck1","slice","deck2","deck3","deck4","deck5","deck6","deck7","deck8","deck9","deck10","newGame","getIndexWhichNextCardsDraggable","nextCard","currentCard","visibleCardsStartingIndex","firstIndexOfOrderedCards","getHint","orderedCardLists","orderedCardListsFromDecks","startingIndex","getOrderedCardListsFromDecks","hints","sourceDeckNo","sourceDeck","subSourceDeckStartingIndex","destinationDeckNo","destinationDeck","at","sourceDeckId","destinationDeckId","sourceStartingIndex","destinationStartingIndex","GameContext","GameContextProvider","setCardDecks","dealingDecks","setDealingDecks","isAnyDragging","setIsAnyDragging","completedDeckCount","score","moves","gameStats","setGameStats","cDecks","dDecks","DesktopContext","DesktopContextProvider","isGameRunning","setIsGameRunning","HintContext","HintContextProvider","setHint","timeout","keys","DraggingContext","DraggingContextProvider","deckId","items","indicesOfSelectedCards","setIndicesOfSelectedCards","Menu","MenuItem","MenuButton","MenuContent","SubMenuButton","WindowMenu","dealSound","returnedCardDecks","returnDealingDecks","Window","TitleBar","CloseButton","CloseSVG","CloseHoverSVG","CloseActiveSVG","WindowBody","title","SolitaireIcon","WinScreen","YesButton","GameOver","winSound","React","memo","CardContainer","Card","index","deckNo","isClose","isDragDisabled","isInSelectedCards","isSourceInHint","isDestinationInHint","mouseDownSound","handleMouseDownFromCard","getStyle","style","snapshot","isDropAnimating","transitionDuration","isDragging","display","transform","filter","transition","draggableId","provided","ref","innerRef","draggableProps","dragHandleProps","onMouseDown","undefined","className","draggable","Deck","deckLength","Placeholder","indexWhichNextCardsDraggable","droppableId","droppableProps","viewBox","includes","DeckArea","onDragEnd","result","source","destination","sourceCardIndex","destinationCardIndex","selectedCardList","splice","parentCardNo","isDragSuccessful","isThereACompletedDeck","join","newCardDecks","moveCards","previousGameStats","onDragStart","from","_","no","CompletedDeckArea","Children","toArray","HintArea","Hint","hintSound","noHintSound","DealArea","returnCardDecks","Board","process","BottomArea","SolitaireGame","Program","handleProgramClick","onDoubleClick","onTouchStart","getTimeAsAMPM","date","Date","hours","getHours","minutes","getMinutes","ampm","Toolbar","time","setTime","timeInterval","setInterval","clearInterval","MsnIcon","Taskbar","StartButton","TaskList","Task","XpStartButton","Desktop","ProgramContainer","ProgramList","App","id","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ee382d2.chunk.js","sourcesContent":["// Libraries\nimport React, { useState, useEffect, createContext } from 'react';\n\nexport const UserContext = createContext();\n\nconst UserContextProvider = (props) => {\n  const { children } = props;\n\n  const [user, setUser] = useState({\n    username: '',\n  });\n  const [isUserSelected, setIsUserSelected] = useState(false);\n\n  /*\n  ====================================================\n  ================== USE EFFECT ======================\n  ====================================================\n  */\n\n  useEffect(() => {\n    const sessionStoragedUser = sessionStorage.getItem('user');\n\n    if (\n      sessionStoragedUser &&\n      sessionStoragedUser.username !== 'Guest'\n    ) {\n      setUser(JSON.parse(sessionStoragedUser));\n    }\n  }, []);\n\n  useEffect(() => {\n    sessionStorage.setItem('user', JSON.stringify(user));\n  }, [user]);\n\n  /*\n  ====================================================\n  ==================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <UserContext.Provider\n      value={{ user, setUser, isUserSelected, setIsUserSelected }}\n    >\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport default UserContextProvider;\n","export default __webpack_public_path__ + \"static/media/normal.85d4fca4.cur\";","export default __webpack_public_path__ + \"static/media/clickable.8631aaab.cur\";","import styled, { keyframes } from 'styled-components';\nimport NormalCursor from './assets/cursors/normal.cur';\nimport ClickableCursor from './assets/cursors/clickable.cur';\n\n// COLOR CODES\nconst colors = {\n  whiteA03: 'rgba(255, 255, 255, 0.3)',\n  white: 'rgb(255, 255, 255)',\n  yellow: 'rgb(255,255,0)',\n  black: 'rgb(0,0,0)',\n  lightBlue: 'rgb(83, 163, 255)',\n  blue: 'rgb(80, 143, 217)',\n  darkBlue: 'rgb(49, 106, 197)',\n  navyBlue: 'rgb(0, 77, 163)',\n  orange: 'rgb(240, 150, 68)',\n  beige: 'rgb(236, 233, 216)',\n  pink: 'rgb(255, 38, 231)',\n  aqua: 'rgb(0, 171, 246)',\n  transparent: 'transparent',\n  green: 'rgb(0,128,0)',\n  brightGreen: '#00DB02',\n};\n\n// THEME\nexport const theme = {\n  // COLORS\n  colors: {\n    taskBg: colors.blue,\n    loginScreenText: colors.white,\n    loginScreenHeaderBg: colors.navyBlue,\n    loginScreenFooterText: colors.white,\n    loginScreenFooterBg: colors.navyBlue,\n    loginScreenTextColor: colors.white,\n    buttonBg: colors.white,\n    buttonText: colors.black,\n    xpWindowBg: colors.beige,\n    titleBarText: colors.white,\n    hintAreaBg: colors.green,\n    hintAreaText: colors.white,\n    subMenuButtonText: colors.black,\n    subMenuButtonText$hover: colors.white,\n    subMenuButtonBg$hover: colors.darkBlue,\n    menuButtonText: colors.black,\n    menuButtonBg$hover: colors.darkBlue,\n    menuButtonText$hover: colors.white,\n    menuBg: colors.beige,\n    menuBarBg: colors.beige,\n    toolbarText: colors.white,\n    taskBg$hover: colors.lightBlue,\n    loaderBorder: colors.white,\n    splashScreenText: colors.white,\n    splashScreenBg: colors.black,\n    loginAccountInputText: colors.white,\n    loginAccountInputBg: colors.transparent,\n    loginAccountText: colors.white,\n    loginAccountBorder$hover: colors.yellow,\n    windowBorder: colors.blue,\n  },\n\n  // GRADIENTS\n  gradients: {\n    barBg: `\n      linear-gradient(\n        to bottom,\n        #222e9d,\n        #3043d5,\n        #5f80fc,\n        #6f8dfd,\n        #859ffe,\n        #8da6ff,\n        #5b7af9,\n        #3346d7,\n        #2d3ed2\n      )\n    `,\n    loginScreenFooterBorderColor: `\n      linear-gradient(\n        90deg,\n        ${colors.navyBlue} 0%,\n        ${colors.orange} 50%,\n        ${colors.navyBlue} 100%\n      )\n    `,\n    loginScreenHeaderBorderColor: `\n      linear-gradient(\n        90deg,\n        transparent 0%,\n        rgba(255, 255, 255, 0.8) 30%,\n        rgba(255, 255, 255, 0.9) 50%,\n        rgba(255, 255, 255, 0.8) 70%,\n        transparent 100%\n      )\n    `,\n    loginScreenMiddleBorderColor: `\n      linear-gradient(\n        180deg,\n        rgba(255, 255, 255, 0) 0%,\n        rgba(255, 255, 255, 0) 5%,\n        rgba(255, 255, 255, 0.5) 15%,\n        rgba(255, 255, 255, 0.5) 50%,\n        rgba(255, 255, 255, 0.5) 85%,\n        rgba(255, 255, 255, 0) 95%,\n        rgba(255, 255, 255, 0) 100%\n      )\n    `,\n    titleBarBg: `\n      linear-gradient(\n        180deg,\n        rgba(9, 151, 255, 1) 0%,\n        rgba(0, 83, 238, 1) 8%,\n        rgba(0, 80, 238, 1) 40%,\n        rgba(0, 102, 255, 1) 88%,\n        rgba(0, 102, 255, 1) 93%,\n        rgba(0, 91, 255, 1) 95%,\n        rgba(0, 61, 215, 1) 96%,\n        rgba(0, 61, 215, 1) 100%\n      )\n    `,\n    loginScreenMainBg: `\n      linear-gradient(\n        130deg,\n        rgba(221, 221, 221, 1) 0%,\n        rgba(80, 143, 217, 1) 35%,\n        rgba(80, 143, 217, 1) 100%\n      )\n    `,\n    toolbarBg: `\n      linear-gradient(\n        rgb(12, 89, 185) 1%,\n        rgb(19, 158, 233) 6%,\n        rgb(24, 181, 242) 10%,\n        rgb(19, 155, 235) 14%,\n        rgb(18, 144, 232) 19%,\n        rgb(13, 141, 234) 63%,\n        rgb(13, 159, 241) 81%,\n        rgb(15, 158, 237) 88%,\n        rgb(17, 155, 233) 91%,\n        rgb(19, 146, 226) 94%,\n        rgb(19, 126, 215) 97%,\n        rgb(9, 91, 201) 100%\n      )\n    `,\n    taskbarBg: `\n      linear-gradient(\n        rgb(31, 47, 134) 0px,\n        rgb(49, 101, 196) 3%,\n        rgb(54, 130, 229) 6%,\n        rgb(68, 144, 230) 10%,\n        rgb(56, 131, 229) 12%,\n        rgb(43, 113, 224) 15%,\n        rgb(38, 99, 218) 18%,\n        rgb(35, 91, 214) 20%,\n        rgb(34, 88, 213) 23%,\n        rgb(33, 87, 214) 38%,\n        rgb(36, 93, 219) 54%,\n        rgb(37, 98, 223) 86%,\n        rgb(36, 95, 220) 89%,\n        rgb(33, 88, 212) 92%,\n        rgb(29, 78, 192) 95%,\n        rgb(25, 65, 165) 98%\n      )\n    `,\n  },\n\n  // KEY FRAMES\n  keyFrames: {\n    loadingKeyFrame: keyframes`\n      0% {\n        transform: translate(-40px);\n      }\n      100% {\n        transform: translate(200px);\n      }\n    `,\n    colorChange: keyframes`\n      0% {\n        color: ${colors.red};\n      }\n      20% {\n        color: ${colors.yellow};\n      }\n      40% { \n        color: ${colors.brightGreen};\n      }\n      60% { \n        color: ${colors.aqua}; \n      }\n      80% { \n        color: ${colors.navyBlue}; \n      }\n      100% { \n        color: ${colors.pink}; \n      }\n    `,\n  },\n\n  // BOX SHADOWS\n  boxShadows: {\n    emptyDeck: `inset 0 0 0 2px ${colors.white}`,\n    task: `${colors.black} 1px 0px 1px, ${colors.whiteA03} 1px 1px 1px inset`,\n    windowButton$hover: `${colors.orange} 0px 0px 0px 1px inset`,\n    windowButton$active: `${colors.blue} 0px 0px 0px 1px inset`,\n  },\n\n  // SCREEN BREAKPOINTS\n  breakpoints: {\n    smallTablet: '600px',\n  },\n};\n\n// GLOBAL STYLED COMPONENTS\nexport const styledComponents = {\n  Button: styled.button`\n    background: transparent;\n    border: 0;\n    color: white;\n\n    &:hover {\n      cursor: url(${ClickableCursor}), auto;\n    }\n  `,\n  Screen: styled.div`\n    height: 100%;\n    cursor: url(${NormalCursor}), auto;\n    overflow: hidden;\n  `,\n};\n","// Libraries\nimport styled from 'styled-components';\n// Components | Utils\nimport { styledComponents } from '../../../globalStyles';\n\nexport const SplashScreen = styled(styledComponents.Screen)`\n  background-color: ${(props) => props.theme.colors.splashScreenBg};\n  padding: 7px 33px;\n  color: ${(props) => props.theme.colors.splashScreenText};\n  cursor: none;\n`;\n\nexport const Main = styled.main`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  // main = fullHeight - footer - top and bottom padding\n  height: calc(100% - 60px - 14px);\n  justify-content: center;\n`;\n\nexport const Logo = styled.img`\n  margin-bottom: 70px;\n  max-width: 300px;\n  width: 50vw;\n  height: auto;\n`;\n\nexport const Loader = styled.div`\n  border: 1px solid ${(props) => props.theme.colors.loaderBorder};\n  border-radius: 5px;\n  height: 20px;\n  overflow: hidden;\n  padding: 2px 1px;\n  width: 200px;\n`;\n\nexport const Bars = styled.div`\n  align-items: center;\n  animation: ${(props) => props.theme.keyFrames.loadingKeyFrame} 2s\n    linear infinite;\n  display: flex;\n  gap: 3px;\n  height: 100%;\n`;\n\nexport const Bar = styled.div`\n  background: ${(props) => props.theme.gradients.barBg};\n  height: 100%;\n  width: 10px;\n`;\n\nexport const Footer = styled.footer`\n  align-items: center;\n  display: flex;\n  font-size: 0.7em;\n  height: 60px;\n  justify-content: space-between;\n`;\n\nexport const FooterLogo = styled.img`\n  filter: invert(100%); // black logo -> white logo\n  height: 60px;\n`;\n","export default __webpack_public_path__ + \"static/media/winxp-logo.9dee7f33.webp\";","export default __webpack_public_path__ + \"static/media/microsoft-logo.63a04c35.webp\";","// Libraries\nimport React from 'react';\n// Assets\nimport * as Styled from './styles';\nimport WindowsXPLogo from '../../../assets/images/winxp-logo.webp';\nimport MicrosoftLogo from '../../../assets/images/microsoft-logo.webp';\n\nconst Splash = () => {\n  /*\n  ====================================================\n  ==================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <Styled.SplashScreen>\n      <Styled.Main>\n        <Styled.Logo\n          src={WindowsXPLogo}\n          width=\"300\"\n          height=\"205\"\n          alt=\"windows xp logo\"\n        />\n        <Styled.Loader>\n          <Styled.Bars>\n            <Styled.Bar />\n            <Styled.Bar />\n            <Styled.Bar />\n          </Styled.Bars>\n        </Styled.Loader>\n      </Styled.Main>\n      <Styled.Footer>\n        <span>Copyright © Microsoft Corporation</span>\n        <Styled.FooterLogo\n          src={MicrosoftLogo}\n          width=\"120\"\n          height=\"60\"\n          alt=\"microsoft logo\"\n        />\n      </Styled.Footer>\n    </Styled.SplashScreen>\n  );\n};\n\nexport default Splash;\n","// Assets\nimport CannotDealSound from '../assets/audios/cannot-deal.ogg';\nimport DealSound from '../assets/audios/deal.ogg';\nimport HintSound from '../assets/audios/hint.ogg';\nimport MouseDownSound from '../assets/audios/mouse-down.ogg';\nimport MouseUpSound from '../assets/audios/mouse-up.ogg';\nimport NoHintSound from '../assets/audios/no-hint.ogg';\nimport OpeningSound from '../assets/audios/opening.ogg';\nimport ShutdownSound from '../assets/audios/shutdown.ogg';\nimport WinSound from '../assets/audios/win.ogg';\n\nconst audios = {\n  'cannot-deal': CannotDealSound,\n  deal: DealSound,\n  hint: HintSound,\n  'mouse-down': MouseDownSound,\n  'mouse-up': MouseUpSound,\n  'no-hint': NoHintSound,\n  opening: OpeningSound,\n  shutdown: ShutdownSound,\n  win: WinSound,\n};\n\n/*\n  ====================================================\n  Returns playable Audio objects of the given sound\n  Return value: Array\n  ====================================================\n*/\n\nexport default function getSounds(...soundList) {\n  const soundPlayFunctions = [];\n\n  soundList.forEach((soundName) => {\n    soundPlayFunctions.push(new Audio(audios[soundName]));\n  });\n\n  return soundPlayFunctions;\n}\n","export default __webpack_public_path__ + \"static/media/cannot-deal.c73ea08a.ogg\";","export default __webpack_public_path__ + \"static/media/deal.55b04c16.ogg\";","export default __webpack_public_path__ + \"static/media/hint.a3cb1791.ogg\";","export default __webpack_public_path__ + \"static/media/mouse-down.76ee1488.ogg\";","export default __webpack_public_path__ + \"static/media/mouse-up.f3d8384f.ogg\";","export default __webpack_public_path__ + \"static/media/no-hint.08835341.ogg\";","export default __webpack_public_path__ + \"static/media/opening.06e92163.ogg\";","export default __webpack_public_path__ + \"static/media/shutdown.dddbce6a.ogg\";","export default __webpack_public_path__ + \"static/media/win.6c8a4ec5.ogg\";","export default __webpack_public_path__ + \"static/media/cannot-clickable.82628c61.cur\";","export default __webpack_public_path__ + \"static/media/beam.80b9bea2.cur\";","// Libraries\nimport styled from 'styled-components';\n// Components | Utils\nimport { styledComponents } from '../../../globalStyles';\n// Assets\nimport CanNotCursor from '../../../assets/cursors/cannot-clickable.cur';\nimport BeamCursor from '../../../assets/cursors/beam.cur';\n\nexport const UserAccount = styled(styledComponents.Button)`\n  align-items: center;\n  color: white;\n  display: flex;\n  font-size: 1.3rem;\n  gap: 10px;\n  opacity: 0.6;\n\n  &:hover {\n    cursor: ${(props) =>\n      !props.$isGuest &&\n      !props.$isUsernameWritten &&\n      `url(${CanNotCursor}), pointer`};\n    opacity: 1;\n    transition: opacity 400ms;\n  }\n\n  input {\n    background: transparent;\n    border: 0;\n    color: white;\n    font-size: 1.3rem;\n    height: 30px;\n    outline: 0;\n\n    &:hover {\n      cursor: url(${BeamCursor}), pointer;\n    }\n  }\n\n  &:nth-child(2) {\n    display: none;\n  }\n\n  @media (min-width: ${(props) =>\n      props.theme.breakpoints.smallTablet}) {\n    &:nth-child(2) {\n      display: flex;\n    }\n  }\n`;\n\nexport const Avatar = styled.img`\n  border: 2px solid white;\n  border-radius: 5px;\n  height: 60px;\n  width: 60px;\n\n  &:hover {\n    border-color: yellow;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/account-image.b872599f.webp\";","// Libraries\nimport React, { useState, useContext } from 'react';\n// Components | Utils\nimport { UserContext } from '../../../contexts/UserContext';\nimport getSounds from '../../../utils/soundUtils';\n// Assets\nimport * as Styled from './styles';\nimport AccountImage from '../../../assets/images/account-image.webp';\n\nconst UserAccount = (props) => {\n  const { isGuest } = props;\n\n  const { user, setUser, setIsUserSelected } =\n    useContext(UserContext);\n  const [usernameInputText, setUsernameInputText] = useState(\n    user.username\n  );\n\n  const [openingSound] = getSounds('opening');\n\n  /*\n  ====================================================\n  =================== HANDLER ========================\n  ====================================================\n  */\n\n  const handleAccountClick = (e) => {\n    e.preventDefault();\n\n    setUser(\n      isGuest\n        ? { ...user, username: 'Guest' }\n        : { ...user, username: usernameInputText }\n    );\n\n    setIsUserSelected(true);\n    openingSound.play();\n  };\n\n  // For the button not to be clicked when I click the input\n  const handleInputClick = (e) => {\n    e.stopPropagation();\n  };\n\n  const handleTextChange = (e) => {\n    setUsernameInputText(e.target.value);\n  };\n\n  /*\n  ====================================================\n  ==================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <Styled.UserAccount\n      $isGuest={isGuest}\n      $isUsernameWritten={\n        usernameInputText && usernameInputText !== 'Guest'\n      }\n      onClick={handleAccountClick}\n      disabled={\n        !isGuest &&\n        usernameInputText === 'Guest' &&\n        usernameInputText !== ''\n      }\n    >\n      <Styled.Avatar\n        src={AccountImage}\n        alt=\"avatar\"\n        width=\"60\"\n        height=\"60\"\n      />\n      {isGuest ? (\n        <span>Guest</span>\n      ) : (\n        <input\n          type=\"text\"\n          placeholder=\"Or write your username\"\n          value={\n            usernameInputText === 'Guest' ? '' : usernameInputText\n          }\n          onClick={handleInputClick}\n          onChange={handleTextChange}\n          onKeyDown={(e) =>\n            e.key === 'Enter' && handleAccountClick(e)\n          }\n        />\n      )}\n    </Styled.UserAccount>\n  );\n};\n\nexport default UserAccount;\n","// Libraries\nimport styled from 'styled-components';\n// Components | Utils\nimport { styledComponents } from '../../../globalStyles';\n\nexport const LoginScreen = styled(styledComponents.Screen)`\n  color: ${(props) => props.theme.colors.loginScreenTextColor};\n`;\n\nexport const Header = styled.header`\n  background-color: ${(props) =>\n    props.theme.colors.loginScreenHeaderBg};\n  border-bottom: 3px solid;\n  border-image-slice: 1;\n  border-image-source: ${(props) =>\n    props.theme.gradients.loginScreenHeaderBorderColor};\n  height: 90px;\n`;\n\nexport const Main = styled.main`\n  background: ${(props) => props.theme.gradients.loginScreenMainBg};\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 2fr 1fr;\n  // main = fullHeight - header - footer\n  height: calc(100% - 90px - 130px);\n  padding: 20px;\n\n  @media (min-width: ${(props) =>\n      props.theme.breakpoints.smallTablet}) {\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 1fr;\n  }\n`;\n\nexport const MainLeft = styled.section`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  font-size: 1.9rem;\n  gap: 30px;\n  justify-content: center;\n\n  @media (min-width: ${(props) =>\n      props.theme.breakpoints.smallTablet}) {\n    align-items: flex-end;\n    border-image-slice: 0 1 0 0;\n    border-image-source: ${(props) =>\n      props.theme.gradients.loginScreenMiddleBorderColor};\n    border-right: 1px solid;\n    padding-right: 60px;\n  }\n\n  img {\n    width: 200px;\n  }\n\n  span {\n    font-size: 1.3rem;\n  }\n`;\n\nexport const MainRight = styled.section`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  justify-content: center;\n  margin: 0 auto;\n  width: minmax(70vw, 90vw);\n\n  @media (min-width: ${(props) =>\n      props.theme.breakpoints.smallTablet}) {\n    padding-left: 30px;\n    width: 100%;\n  }\n`;\n\nexport const Footer = styled.footer`\n  align-items: center;\n  background-color: ${(props) =>\n    props.theme.colors.loginScreenFooterBg};\n  border-image-slice: 1;\n  border-image-source: ${(props) =>\n    props.theme.gradients.loginScreenFooterBorderColor};\n  border-top: 3px solid;\n  display: flex;\n  flex-direction: column;\n  font-size: 0.7rem;\n  gap: 10px;\n  height: 130px;\n  padding: 20px 50px;\n  text-align: center;\n\n  p {\n    max-width: 450px;\n  }\n\n  @media (min-width: ${(props) =>\n      props.theme.breakpoints.smallTablet}) {\n    flex-direction: row;\n    gap: 30px;\n    justify-content: space-between;\n    text-align: initial;\n  }\n`;\n\nexport const ShutdownButton = styled(styledComponents.Button)`\n  align-items: center;\n  display: flex;\n  gap: 10px;\n\n  img {\n    height: 25px;\n    width: 25px;\n  }\n\n  span {\n    font-size: 1rem;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/winxp-shutdown.5a2ac0c4.webp\";","export default __webpack_public_path__ + \"static/media/winxp-logo2.928167b6.webp\";","// Libraries\nimport React from 'react';\n// Components | Utils\nimport UserAccount from '../UserAccount';\nimport getSounds from '../../../utils/soundUtils';\n// Assets\nimport * as Styled from './styles';\nimport WindowsXPShutdown from '../../../assets/images/winxp-shutdown.webp';\nimport WindowsXPLogo2 from '../../../assets/images/winxp-logo2.webp';\n\nconst Login = () => {\n  const [shutdownSound] = getSounds('shutdown');\n\n  /*\n  ====================================================\n  ==================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <Styled.LoginScreen>\n      <Styled.Header />\n      <Styled.Main>\n        <Styled.MainLeft>\n          <img\n            src={WindowsXPLogo2}\n            alt=\"windows xp logo\"\n            width=\"200\"\n            height=\"118\"\n          />\n          <span>To begin, select your user</span>\n        </Styled.MainLeft>\n        <Styled.MainRight>\n          <UserAccount isGuest />\n          <UserAccount />\n        </Styled.MainRight>\n      </Styled.Main>\n      <Styled.Footer>\n        <div>\n          <Styled.ShutdownButton onClick={() => shutdownSound.play()}>\n            <img\n              src={WindowsXPShutdown}\n              alt=\"shutdown icon\"\n              height=\"25\"\n              width=\"25\"\n            />\n            <span>Turn off computer</span>\n          </Styled.ShutdownButton>\n        </div>\n        <p>\n          This XP cannot be turned off. After all these years we have\n          been away, we wouldnt want to close, would we? But out of\n          respect for you, I will play a shutdown sound.\n        </p>\n      </Styled.Footer>\n    </Styled.LoginScreen>\n  );\n};\n\nexport default Login;\n","// Libraries\nimport styled from 'styled-components';\n// Components | Utils\nimport { styledComponents } from '../../globalStyles';\n\nexport const IntroductionScreen = styled(styledComponents.Screen)``;\n","// Libraries\nimport React, { useEffect, useState } from 'react';\n// Components | Utils\nimport Splash from '../../components/PreGame/Splash';\nimport Login from '../../components/PreGame/Login';\n// Assets\nimport * as Styled from './styles';\n\nconst Introduction = () => {\n  const [isOnSplash, setIsOnSplash] = useState(true);\n\n  /*\n  ====================================================\n  ================== USE EFFECT ======================\n  ====================================================\n  */\n\n  // Adds fake loading scene\n  useEffect(() => {\n    const splashTimeout = setTimeout(() => {\n      setIsOnSplash(false);\n    }, 2500);\n\n    return () => {\n      clearTimeout(splashTimeout);\n    };\n  }, []);\n\n  /*\n  ====================================================\n  ==================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <Styled.IntroductionScreen>\n      {isOnSplash ? <Splash /> : <Login />}\n    </Styled.IntroductionScreen>\n  );\n};\n\nexport default Introduction;\n","import CardBackImage from '../assets/images/cards/card-back.webp';\nimport CardImage1 from '../assets/images/cards/1.webp';\nimport CardImage2 from '../assets/images/cards/2.webp';\nimport CardImage3 from '../assets/images/cards/3.webp';\nimport CardImage4 from '../assets/images/cards/4.webp';\nimport CardImage5 from '../assets/images/cards/5.webp';\nimport CardImage6 from '../assets/images/cards/6.webp';\nimport CardImage7 from '../assets/images/cards/7.webp';\nimport CardImage8 from '../assets/images/cards/8.webp';\nimport CardImage9 from '../assets/images/cards/9.webp';\nimport CardImage10 from '../assets/images/cards/10.webp';\nimport CardImage11 from '../assets/images/cards/11.webp';\nimport CardImage12 from '../assets/images/cards/12.webp';\nimport CardImage13 from '../assets/images/cards/13.webp';\n\n/*\n  ====================================================\n  Paths of images of cards\n  ====================================================\n*/\n\nexport const cardImages = {\n  0: CardBackImage,\n  1: CardImage1,\n  2: CardImage2,\n  3: CardImage3,\n  4: CardImage4,\n  5: CardImage5,\n  6: CardImage6,\n  7: CardImage7,\n  8: CardImage8,\n  9: CardImage9,\n  10: CardImage10,\n  11: CardImage11,\n  12: CardImage12,\n  13: CardImage13,\n};\n\nconst cardNo = {\n  back: 0,\n  ace: 1,\n  two: 2,\n  three: 3,\n  four: 4,\n  five: 5,\n  siv: 6,\n  seven: 7,\n  eight: 8,\n  nine: 9,\n  ten: 10,\n  jack: 11,\n  queen: 12,\n  king: 13,\n};\n\nconst cardCounts = {\n  ace: 8,\n  two: 8,\n  three: 8,\n  four: 8,\n  five: 8,\n  siv: 8,\n  seven: 8,\n  eight: 8,\n  nine: 8,\n  ten: 8,\n  jack: 8,\n  queen: 8,\n  king: 8,\n};\n\n/*\n  ====================================================\n  Get index by card name\n  Return value: Integer\n  ====================================================\n*/\n\nexport const getCardNo = (type) => {\n  return cardNo[type];\n};\n\n/*\n  ====================================================\n  Shuffle the deck with the Fisher algorithm.\n  Return value: Array\n  ====================================================\n*/\n\nexport const shuffle = (array) => {\n  const copyArray = [...array];\n\n  for (let i = copyArray.length - 1; i > 0; i -= 1) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [copyArray[i], copyArray[j]] = [copyArray[j], copyArray[i]];\n  }\n  return copyArray;\n};\n\n/*\n  ====================================================\n  Checks if there is a completed card sequence in the deck.\n  Return value: Boolean\n  ====================================================\n*/\n\nconst checkCompletedDeck = (cards) => {\n  const completedDeck = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n  return cards.join().includes(completedDeck.join());\n};\n\n/*\n  ====================================================\n  Moves cards from one deck to another.\n  Return value: Object\n  ====================================================\n*/\n\nexport const moveCards = (cardDecks, source, destination) => {\n  // Information of source deck.\n  const sourceCardIndex = source.index;\n  const sourceDeckId = source.droppableId;\n  const sourceDeck = { ...cardDecks[sourceDeckId] };\n\n  // Information of destination deck.\n  const destinationCardIndex = destination.index;\n  const destinationDeckId = destination.droppableId;\n  const destinationDeck = { ...cardDecks[destinationDeckId] };\n\n  // The drag card and the cards below it.\n  const selectedCardList = sourceDeck.cards.splice(sourceCardIndex);\n\n  // The card above the dragged card.\n  const parentCardNo =\n    destinationDeck.cards[destinationCardIndex - 1];\n\n  // Is the cards a continuation of the card from which it was carried?\n  const isNextCard =\n    destinationCardIndex === 0 ||\n    selectedCardList[0] === parentCardNo + 1;\n\n  let isDragSuccessful = false;\n\n  if (isNextCard) {\n    destinationDeck.cards.push(...selectedCardList);\n    isDragSuccessful = true;\n\n    // Subtract the number of cards moved from the number of visible cards in the deck.\n    // If the entire deck is being moved, open the last card.\n    if (sourceDeck.visibleCardCount === selectedCardList.length) {\n      sourceDeck.visibleCardCount = 1;\n    } else {\n      sourceDeck.visibleCardCount -= selectedCardList.length;\n    }\n    destinationDeck.visibleCardCount += selectedCardList.length;\n  } else {\n    // If the drag fails, put the cards back.\n    sourceDeck.cards.push(...selectedCardList);\n  }\n\n  // Check if there is a completed deck as a result of drag.\n  const isThereACompletedDeck = checkCompletedDeck(\n    destinationDeck.cards\n  );\n\n  if (isThereACompletedDeck) {\n    destinationDeck.cards.splice(-13);\n    destinationDeck.visibleCardCount -=\n      destinationDeck.visibleCardCount === 13 ? 12 : 13;\n  }\n\n  return {\n    newCardDecks: {\n      ...cardDecks,\n      [sourceDeckId]: sourceDeck,\n      [destinationDeckId]: destinationDeck,\n    },\n    isThereACompletedDeck,\n    isDragSuccessful,\n  };\n};\n\n/*\n  ====================================================\n  Deals one new card to 10 decks.\n  Return value: Array\n  ====================================================\n*/\n\nexport const deal = (cardDecks, dealingCards, cannotDealSound) => {\n  const copyDealingDecks = [...dealingCards];\n\n  const a = Object.values(cardDecks).every(\n    (deck) => deck.cards.length > 0\n  );\n\n  if (a) {\n    const dealCards = copyDealingDecks.pop();\n\n    if (dealCards) {\n      /* eslint-disable no-param-reassign */\n      Object.entries(cardDecks).forEach(([, deck]) => {\n        deck.cards.push(dealCards.shift());\n        deck.visibleCardCount += 1;\n      });\n      /* eslint-enable no-param-reassign */\n    }\n  } else {\n    cannotDealSound.play();\n  }\n\n  return [{ ...cardDecks }, [...copyDealingDecks]];\n};\n\n/*\n  ====================================================\n  Set up decks for game start.\n  Return value: Array\n  ====================================================\n*/\n\nexport const getRandomDecks = () => {\n  const cardList = Object.entries(cardCounts)\n    .map(([cardType, count]) => Array(count).fill(cardNo[cardType]))\n    .flat();\n\n  const shuffledCardList = shuffle(cardList);\n\n  return [\n    {\n      deck1: {\n        cards: shuffledCardList.slice(0, 6),\n        visibleCardCount: 1,\n      },\n      deck2: {\n        cards: shuffledCardList.slice(6, 12),\n        visibleCardCount: 1,\n      },\n      deck3: {\n        cards: shuffledCardList.slice(12, 18),\n        visibleCardCount: 1,\n      },\n      deck4: {\n        cards: shuffledCardList.slice(18, 24),\n        visibleCardCount: 1,\n      },\n      deck5: {\n        cards: shuffledCardList.slice(24, 29),\n        visibleCardCount: 1,\n      },\n      deck6: {\n        cards: shuffledCardList.slice(29, 34),\n        visibleCardCount: 1,\n      },\n      deck7: {\n        cards: shuffledCardList.slice(34, 39),\n        visibleCardCount: 1,\n      },\n      deck8: {\n        cards: shuffledCardList.slice(39, 44),\n        visibleCardCount: 1,\n      },\n      deck9: {\n        cards: shuffledCardList.slice(44, 49),\n        visibleCardCount: 1,\n      },\n      deck10: {\n        cards: shuffledCardList.slice(49, 54),\n        visibleCardCount: 1,\n      },\n    },\n    // Deal decks.\n    [\n      shuffledCardList.slice(54, 64),\n      shuffledCardList.slice(64, 74),\n      shuffledCardList.slice(74, 84),\n      shuffledCardList.slice(84, 94),\n      shuffledCardList.slice(94, 104),\n    ],\n  ];\n};\n\n/*\n  ====================================================\n  Set up new game.\n  Return value: Array\n  ====================================================\n*/\n\nexport const newGame = () => {\n  return getRandomDecks();\n};\n\n/*\n  ====================================================\n  Set up new game.\n  Return value: Array\n  ====================================================\n*/\n\nexport const getIndexWhichNextCardsDraggable = (deck) => {\n  // Returns the starting index of draggable sequential cards.\n  // Deck: X X X 4 5 6 1 2\n  // Visible Cards Starting Index: 3 => X X X [4] 5 6 1 2\n  const visibleCardsStartingIndex =\n    deck.cards.length - deck.visibleCardCount;\n\n  let firstIndexOfOrderedCards = visibleCardsStartingIndex;\n  let nextCard;\n  let currentCard;\n\n  for (\n    let i = visibleCardsStartingIndex;\n    i < deck.cards.length;\n    i += 1\n  ) {\n    currentCard = deck.cards[i];\n    nextCard = deck.cards[i + 1];\n\n    if (nextCard && currentCard + 1 !== nextCard) {\n      firstIndexOfOrderedCards = i + 1;\n    }\n  }\n\n  return firstIndexOfOrderedCards;\n};\n\n/*\n  ====================================================\n  Returns the starting index of the draggable cards of all decks.\n  Return value: Array\n  ====================================================\n*/\n\nexport const getOrderedCardListsFromDecks = (cardDecks) => {\n  const orderedCardListsFromDecks = [];\n\n  Object.entries(cardDecks).forEach(([, deck]) => {\n    orderedCardListsFromDecks.push({\n      startingIndex: getIndexWhichNextCardsDraggable(deck),\n      cards: deck.cards.slice(getIndexWhichNextCardsDraggable(deck)),\n    });\n  });\n\n  return orderedCardListsFromDecks;\n};\n\n/*\n  ====================================================\n  Shows hints of cards that can be played.\n  Return value: Array\n  ====================================================\n*/\n\nexport const getHint = (cardDecks) => {\n  const orderedCardLists = getOrderedCardListsFromDecks(cardDecks);\n  const hints = [];\n\n  // For draggable cards of the 10 source decks.\n  for (\n    let sourceDeckNo = 0;\n    sourceDeckNo < orderedCardLists.length;\n    sourceDeckNo += 1\n  ) {\n    const sourceDeck = orderedCardLists[sourceDeckNo];\n\n    // For sub draggable cards.\n    for (\n      let subSourceDeckStartingIndex = 0;\n      subSourceDeckStartingIndex < sourceDeck.cards.length;\n      subSourceDeckStartingIndex += 1\n    ) {\n      // For destination decks.\n      for (\n        let destinationDeckNo = 0;\n        destinationDeckNo < orderedCardLists.length;\n        destinationDeckNo += 1\n      ) {\n        const destinationDeck = orderedCardLists[destinationDeckNo];\n\n        // (a && b && c) || (a && b') = (a && b') || (a && c)\n        // a : the first card of the deck to be dragged must match the last card of destination\n        // b : the parent of the child deck to be dragged must be the same as the parent of the destination\n        // c : the deck containing the sub-deck to be dragged must be shorter than the destination deck\n        if (\n          (sourceDeck.cards\n            .slice(subSourceDeckStartingIndex)\n            .at(0) ===\n            destinationDeck.cards.at(-1) + 1 &&\n            sourceDeck.cards.at(subSourceDeckStartingIndex - 1) !==\n              destinationDeck.cards.at(-1)) ||\n          (sourceDeck.cards\n            .slice(subSourceDeckStartingIndex)\n            .at(0) ===\n            destinationDeck.cards.at(-1) + 1 &&\n            destinationDeck.cards.length > subSourceDeckStartingIndex)\n        ) {\n          hints.push({\n            sourceDeckId: `deck${sourceDeckNo + 1}`,\n            destinationDeckId: `deck${destinationDeckNo + 1}`,\n            sourceStartingIndex:\n              sourceDeck.startingIndex + subSourceDeckStartingIndex,\n            destinationStartingIndex: destinationDeck.startingIndex,\n          });\n        }\n      }\n    }\n  }\n\n  // Mixes hints and randomly picks one\n  return shuffle(hints)[0];\n};\n","export default __webpack_public_path__ + \"static/media/card-back.205fe8c2.webp\";","export default __webpack_public_path__ + \"static/media/1.9ff91e18.webp\";","export default __webpack_public_path__ + \"static/media/2.b1c765e0.webp\";","export default __webpack_public_path__ + \"static/media/3.2321343a.webp\";","export default __webpack_public_path__ + \"static/media/4.5244efb4.webp\";","export default __webpack_public_path__ + \"static/media/5.ddd891be.webp\";","export default __webpack_public_path__ + \"static/media/6.c0c31eb5.webp\";","export default __webpack_public_path__ + \"static/media/7.d4d42486.webp\";","export default __webpack_public_path__ + \"static/media/8.8e0ab8b0.webp\";","export default __webpack_public_path__ + \"static/media/9.4258b064.webp\";","export default __webpack_public_path__ + \"static/media/10.4f33b091.webp\";","export default __webpack_public_path__ + \"static/media/11.4aaeca48.webp\";","export default __webpack_public_path__ + \"static/media/12.a1614c7e.webp\";","export default __webpack_public_path__ + \"static/media/13.69318912.webp\";","// Libraries\nimport React, { useState, useEffect, createContext } from 'react';\n// Components | Utils\nimport { getRandomDecks } from '../utils/cardUtils';\n\nexport const GameContext = createContext();\n\nconst GameContextProvider = (props) => {\n  const { children } = props;\n\n  const [cardDecks, setCardDecks] = useState({\n    deck1: {},\n    deck2: {},\n    deck3: {},\n    deck4: {},\n    deck5: {},\n    deck6: {},\n    deck7: {},\n    deck8: {},\n    deck9: {},\n    deck10: {},\n  });\n  const [dealingDecks, setDealingDecks] = useState([]);\n  const [isAnyDragging, setIsAnyDragging] = useState(false);\n  const [gameStats, setGameStats] = useState({\n    completedDeckCount: 0,\n    score: 500,\n    moves: 0,\n  });\n\n  /*\n  ====================================================\n  ================== USE EFFECT ======================\n  ====================================================\n  */\n\n  useEffect(() => {\n    const [cDecks, dDecks] = getRandomDecks();\n    setCardDecks(cDecks);\n    setDealingDecks(dDecks);\n  }, []);\n\n  /*\n  ====================================================\n  ==================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <GameContext.Provider\n      value={{\n        cardDecks,\n        setCardDecks,\n        isAnyDragging,\n        setIsAnyDragging,\n        dealingDecks,\n        setDealingDecks,\n        gameStats,\n        setGameStats,\n      }}\n    >\n      {children}\n    </GameContext.Provider>\n  );\n};\n\nexport default GameContextProvider;\n","// Libraries\nimport React, { useState, createContext } from 'react';\n\nexport const DesktopContext = createContext();\n\nconst DesktopContextProvider = (props) => {\n  const { children } = props;\n\n  const [isGameRunning, setIsGameRunning] = useState(false);\n\n  /*\n  ====================================================\n  ==================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <DesktopContext.Provider\n      value={{ isGameRunning, setIsGameRunning }}\n    >\n      {children}\n    </DesktopContext.Provider>\n  );\n};\n\nexport default DesktopContextProvider;\n","// Libraries\nimport React, { useState, useEffect, createContext } from 'react';\n\nexport const HintContext = createContext();\n\nconst HintContextProvider = (props) => {\n  const { children } = props;\n\n  const [hint, setHint] = useState({});\n\n  /*\n  ====================================================\n  ================== USE EFFECT ======================\n  ====================================================\n  */\n\n  useEffect(() => {\n    let timeout;\n    if (Object.keys(hint).length > 0) {\n      timeout = setTimeout(() => {\n        setHint({});\n      }, 1000);\n    }\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [hint]);\n\n  /*\n  ====================================================\n  ==================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <HintContext.Provider\n      value={{\n        hint,\n        setHint,\n      }}\n    >\n      {children}\n    </HintContext.Provider>\n  );\n};\n\nexport default HintContextProvider;\n","// Libraries\nimport React, { useState, createContext } from 'react';\n\nexport const DraggingContext = createContext();\n\nconst DraggingContextProvider = (props) => {\n  const { children } = props;\n\n  const [indicesOfSelectedCards, setIndicesOfSelectedCards] =\n    useState({\n      deckId: '',\n      items: [],\n    });\n\n  /*\n  ====================================================\n  ==================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <DraggingContext.Provider\n      value={{\n        indicesOfSelectedCards,\n        setIndicesOfSelectedCards,\n      }}\n    >\n      {children}\n    </DraggingContext.Provider>\n  );\n};\n\nexport default DraggingContextProvider;\n","// Libraries\nimport styled from 'styled-components';\n// Assets\nimport { styledComponents } from '../../../globalStyles';\n\nexport const Menu = styled.div`\n  background-color: #ece9d8;\n  display: flex;\n  font-size: 11px;\n`;\n\nexport const MenuItem = styled.div`\n  display: flex;\n  padding: 3px 5px;\n  position: relative;\n\n  &:hover {\n    background-color: #316ac5;\n\n    & > button {\n      color: white;\n    }\n\n    div {\n      display: flex;\n    }\n  }\n`;\n\nexport const MenuButton = styled(styledComponents.Button)`\n  color: black;\n  font-size: 11px;\n  text-align: left;\n\n  :hover + div {\n    display: flex;\n  }\n`;\n\nexport const MenuContent = styled.div`\n  background-color: white;\n  border: 1px solid gray;\n  display: none;\n  flex-direction: column;\n  left: 0;\n  padding: 1px;\n  position: absolute;\n  top: 20px;\n  width: 200px;\n  z-index: 5;\n`;\n\nexport const SubMenuButton = styled(styledComponents.Button)`\n  color: black;\n  font-size: 11px;\n  padding: 2px 2px 4px 12px;\n  text-align: left;\n  width: 100%;\n\n  &:hover {\n    background-color: #316ac5;\n    color: white;\n  }\n`;\n","// Libraries\nimport React, { useContext } from 'react';\n// Components | Utils\nimport { GameContext } from '../../../contexts/GameContext';\nimport getSounds from '../../../utils/soundUtils';\nimport { deal, newGame } from '../../../utils/cardUtils';\n// Assets\nimport * as Styled from './styles';\n\nconst WindowMenu = () => {\n  const {\n    cardDecks,\n    setCardDecks,\n    dealingDecks,\n    setDealingDecks,\n    setGameStats,\n  } = useContext(GameContext);\n\n  const [cannotDealSound, dealSound] = getSounds(\n    'cannot-deal',\n    'deal'\n  );\n\n  /*\n  ====================================================\n  =================== HANDLER ========================\n  ====================================================\n  */\n\n  const handleDealClick = () => {\n    dealSound.play();\n    const [returnedCardDecks, returnDealingDecks] = deal(\n      cardDecks,\n      dealingDecks,\n      cannotDealSound\n    );\n    setCardDecks(returnedCardDecks);\n    setDealingDecks(returnDealingDecks);\n  };\n\n  const handleNewGameClick = () => {\n    const [cDecks, dDecks] = newGame();\n    setCardDecks(cDecks);\n    setDealingDecks(dDecks);\n    setGameStats({\n      completedDeckCount: 0,\n      score: 500,\n      moves: 0,\n    });\n  };\n\n  /*\n  ====================================================\n  ==================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <Styled.Menu>\n      <Styled.MenuItem>\n        <Styled.MenuButton>Game</Styled.MenuButton>\n        <Styled.MenuContent>\n          <Styled.SubMenuButton onClick={handleNewGameClick}>\n            New Game\n          </Styled.SubMenuButton>\n        </Styled.MenuContent>\n      </Styled.MenuItem>\n      <Styled.MenuItem>\n        <Styled.MenuButton onClick={handleDealClick}>\n          Deal!\n        </Styled.MenuButton>\n      </Styled.MenuItem>\n    </Styled.Menu>\n  );\n};\n\nexport default WindowMenu;\n","export default __webpack_public_path__ + \"static/media/close.b5796a71.svg\";","export default __webpack_public_path__ + \"static/media/close-hover.ac0a6081.svg\";","export default __webpack_public_path__ + \"static/media/close-active.4f1a7f52.svg\";","// Libraries\nimport styled from 'styled-components';\n// Components | Utils\nimport { styledComponents } from '../../../globalStyles';\n// Assets\nimport CloseSVG from '../../../assets/images/close.svg';\nimport CloseHoverSVG from '../../../assets/images/close-hover.svg';\nimport CloseActiveSVG from '../../../assets/images/close-active.svg';\n\nexport const Window = styled.div`\n  background-color: ${(props) => props.theme.colors.xpWindowBg};\n  display: grid;\n  grid-template-rows: 30px 20px 1fr;\n  height: 100%;\n  width: 100%;\n  z-index: 2;\n`;\n\nexport const TitleBar = styled.div`\n  align-items: center;\n  background: ${(props) => props.theme.gradients.titleBarBg};\n  color: ${(props) => props.theme.colors.titleBarText};\n  display: flex;\n  font-family: 'Trebuchet MS';\n  font-size: 13px;\n  padding: 6px;\n\n  img {\n    height: 100%;\n  }\n`;\n\nexport const CloseButton = styled(styledComponents.Button)`\n  background-image: url(${CloseSVG});\n  background-repeat: no-repeat;\n  height: 23px;\n  margin-left: auto;\n  width: 23px;\n\n  &:hover {\n    background-image: url(${CloseHoverSVG});\n  }\n\n  &:not(:disabled):active {\n    background-image: url(${CloseActiveSVG});\n  }\n`;\n\nexport const WindowBody = styled.div`\n  height: 100%;\n`;\n","export default __webpack_public_path__ + \"static/media/solitaire-icon.949145f2.webp\";","// Libraries\nimport React, { useContext } from 'react';\n// Components | Utils\nimport { DesktopContext } from '../../../contexts/DesktopContext';\nimport WindowMenu from '../WindowMenu';\n// Assets\nimport * as Styled from './styles';\nimport SolitaireIcon from '../../../assets/images/solitaire-icon.webp';\n\nconst Window = (props) => {\n  const { children, title } = props;\n\n  const { setIsGameRunning } = useContext(DesktopContext);\n\n  /*\n  ====================================================\n  =================== HANDLER ========================\n  ====================================================\n  */\n\n  const handleCloseClick = () => {\n    setIsGameRunning(false);\n  };\n\n  /*\n  ====================================================\n  ==================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <Styled.Window>\n      <Styled.TitleBar>\n        <img src={SolitaireIcon} alt=\"solitaire icon\" />\n        <span>{title}</span>\n        <Styled.CloseButton onClick={handleCloseClick} />\n      </Styled.TitleBar>\n      <WindowMenu />\n      <Styled.WindowBody>{children}</Styled.WindowBody>\n    </Styled.Window>\n  );\n};\n\nexport default Window;\n","// Libraries\nimport styled from 'styled-components';\n// Components | Utils\nimport { styledComponents } from '../../../globalStyles';\n// Assets\nimport CloseSVG from '../../../assets/images/close.svg';\nimport CloseHoverSVG from '../../../assets/images/close-hover.svg';\nimport CloseActiveSVG from '../../../assets/images/close-active.svg';\n\nexport const WinScreen = styled.div`\n  animation: ${(props) => props.theme.keyFrames.colorChange} 10s\n    infinite;\n  align-items: center;\n  display: flex;\n  font-size: 4rem;\n  font-weight: bold;\n  height: 100%;\n  justify-content: center;\n  left: 0;\n  position: absolute;\n  top: 0;\n  width: 100%;\n`;\n\nexport const Window = styled.div`\n  background-color: ${(props) => props.theme.colors.xpWindowBg};\n  bottom: 10px;\n  border-top-left-radius: 13px;\n  border-top-right-radius: 13px;\n  box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n  display: grid;\n  grid-template-rows: 30px 1fr;\n  height: 150px;\n  left: 0;\n  margin: 0 auto;\n  overflow: hidden;\n  position: absolute;\n  right: 0;\n  width: 300px;\n  z-index: 2;\n`;\n\nexport const TitleBar = styled.div`\n  align-items: center;\n  background: ${(props) => props.theme.gradients.titleBarBg};\n  color: ${(props) => props.theme.colors.titleBarText};\n  display: flex;\n  font-family: 'Trebuchet MS';\n  font-size: 13px;\n  padding: 6px 15px;\n\n  img {\n    height: 100%;\n  }\n`;\n\nexport const CloseButton = styled(styledComponents.Button)`\n  background-image: url(${CloseSVG});\n  background-repeat: no-repeat;\n  height: 16px;\n  margin-left: auto;\n  width: 16px;\n\n  &:hover {\n    background-image: url(${CloseHoverSVG});\n  }\n\n  &:not(:disabled):active {\n    background-image: url(${CloseActiveSVG});\n  }\n`;\n\nexport const WindowBody = styled.div`\n  align-items: center;\n  border: 1px solid ${(props) => props.theme.colors.windowBorder};\n  display: flex;\n  flex-direction: column;\n  font-size: 0.7rem;\n  gap: 10px;\n  height: 100%;\n  text-align: center;\n  justify-content: center;\n`;\n\nexport const WindowContent = styled.div`\n  background-color: ${(props) => props.theme.colors.xpWindowBg};\n  display: flex;\n  flex-direction: column;\n  font-size: 0.6rem;\n  gap: 8px;\n  margin-top: 10px;\n  padding-left: 10px;\n  padding-right: 10px;\n  text-align: center;\n\n  p {\n    line-height: 0.9rem;\n  }\n\n  button {\n    background-color: ${(props) => props.theme.colors.buttonBg};\n    border: 1px solid black;\n    border-radius: 3px;\n    color: ${(props) => props.theme.colors.buttonText};\n    font-size: 0.55rem;\n    height: 20px;\n    margin: 0 auto;\n    width: 60px;\n\n    &:hover {\n      box-shadow: ${(props) =>\n        props.theme.boxShadows.windowButton$hover};\n    }\n\n    &:active {\n      box-shadow: ${(props) =>\n        props.theme.boxShadows.windowButton$active};\n    }\n  }\n`;\n\nexport const YesButton = styled(styledComponents.Button)`\n  background-color: ${(props) => props.theme.colors.buttonBg};\n  border: 1px solid black;\n  border-radius: 3px;\n  color: ${(props) => props.theme.colors.buttonText};\n  font-size: 0.55rem;\n  height: 20px;\n  margin: 0 auto;\n  width: 60px;\n\n  &:hover {\n    box-shadow: ${(props) =>\n      props.theme.boxShadows.windowButton$hover};\n  }\n\n  &:active {\n    box-shadow: ${(props) =>\n      props.theme.boxShadows.windowButton$active};\n  }\n`;\n","// Libraries\nimport React, { useContext, useEffect } from 'react';\n// Components | Utils\nimport { UserContext } from '../../../contexts/UserContext';\nimport { newGame } from '../../../utils/cardUtils';\nimport getSounds from '../../../utils/soundUtils';\n// Assets\nimport * as Styled from './styles';\nimport { DesktopContext } from '../../../contexts/DesktopContext';\n\nconst GameOver = (props) => {\n  const { setCardDecks, setDealingDecks, gameStats, setGameStats } =\n    props;\n\n  const { setIsGameRunning } = useContext(DesktopContext);\n  const { user } = useContext(UserContext);\n  const [winSound] = getSounds('win');\n\n  /*\n  ====================================================\n  ================== USE EFFECT ======================\n  ====================================================\n  */\n\n  useEffect(() => {\n    winSound.play();\n  }, []);\n\n  /*\n  ====================================================\n  =================== HANDLER ========================\n  ====================================================\n  */\n\n  const handleNewGameClick = () => {\n    const [cDecks, dDecks] = newGame();\n    setCardDecks(cDecks);\n    setDealingDecks(dDecks);\n    setGameStats({\n      completedDeckCount: 0,\n      score: 500,\n      moves: 0,\n    });\n  };\n\n  const handleCloseClick = () => {\n    setIsGameRunning(false);\n  };\n\n  /*\n  ====================================================\n  =================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <>\n      <Styled.WinScreen>\n        <span>You Won!</span>\n      </Styled.WinScreen>\n\n      <Styled.Window>\n        <Styled.TitleBar>\n          <span>Game Over</span>\n          <Styled.CloseButton onClick={handleCloseClick} />\n        </Styled.TitleBar>\n\n        <Styled.WindowBody>\n          <p>\n            Congratulations {user.username}!\n            <br />\n            You won with {gameStats.score} points in {gameStats.moves}{' '}\n            moves.\n          </p>\n          <p> Do you want to start another game?</p>\n          <Styled.YesButton onClick={handleNewGameClick}>\n            Yes\n          </Styled.YesButton>\n        </Styled.WindowBody>\n      </Styled.Window>\n    </>\n  );\n};\n\nexport default React.memo(GameOver);\n","// Libraries\nimport styled from 'styled-components';\n\nexport const CardContainer = styled.div`\n  z-index: 1;\n`;\n","// Libraries\nimport React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\n// Components | Utils\nimport { cardImages } from '../../../utils/cardUtils';\nimport getSounds from '../../../utils/soundUtils';\n// Assets\nimport * as Styled from './styles';\n\nconst Card = (props) => {\n  const {\n    index,\n    deckNo,\n    cardNo,\n    isClose,\n    isDragDisabled,\n    isInSelectedCards,\n    isSourceInHint,\n    isDestinationInHint,\n  } = props;\n\n  const [mouseDownSound] = getSounds('mouse-down');\n\n  const handleMouseDownFromCard = (e) => {\n    e.preventDefault();\n    mouseDownSound.play();\n  };\n\n  /*\n  ====================================================\n  ==================== FUNCTIONS =====================\n  ====================================================\n  */\n\n  function getStyle(style, snapshot) {\n    /* \n    This function overrides the default gliding behavior of the react-beautiful-dnd \n    package when the drag is above the other draggable object.\n    */\n    if (snapshot.isDropAnimating) {\n      return {\n        ...style,\n        // cannot be 0, but make it super tiny\n        transitionDuration: '0.001s',\n      };\n    }\n\n    if (snapshot.isDragging) {\n      // We do not apply it to the being dragged object so that the drag behavior can continue.\n      return style;\n    }\n\n    if (isInSelectedCards) {\n      return {\n        ...style,\n        display: 'none',\n        // We ovveride the \"translate(... px)\" that performs the sliding behavior as \"none\".\n        transform: 'none',\n      };\n    }\n\n    return {\n      ...style,\n      // We ovveride the \"translate(... px)\" that performs the sliding behavior as \"none\".\n      transform: 'none',\n      filter:\n        isSourceInHint || isDestinationInHint ? 'invert(100%)' : '',\n      transition: isDestinationInHint ? 'filter 400ms 300ms' : '',\n    };\n  }\n\n  /*\n  ====================================================\n  ==================== RENDER ========================\n  ====================================================\n  */\n\n  return deckNo ? (\n    <Draggable\n      draggableId={`deck${deckNo}${index}`}\n      index={index}\n      isDragDisabled={isDragDisabled}\n    >\n      {(provided, snapshot) => {\n        return (\n          <Styled.CardContainer\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            style={getStyle(provided.draggableProps.style, snapshot)}\n            onMouseDown={\n              !isDragDisabled ? handleMouseDownFromCard : undefined\n            }\n          >\n            <div className=\"card\">\n              <img\n                draggable={false} // Removes the preview created by dragging and holding the image.\n                src={isClose ? cardImages[0] : cardImages[cardNo]}\n                alt=\"card\"\n              />\n            </div>\n          </Styled.CardContainer>\n        );\n      }}\n    </Draggable>\n  ) : (\n    <div className=\"card\">\n      <img\n        draggable={false} // Removes the preview created by dragging and holding the image.\n        src={isClose ? cardImages[0] : cardImages[cardNo]}\n        alt=\"card\"\n      />\n    </div>\n  );\n};\n\nexport default React.memo(Card);\n","// Libraries\nimport styled from 'styled-components';\n\nexport const Deck = styled.div`\n  display: grid;\n  grid-template-rows: repeat(\n    ${(props) => props.deckLength + 5},\n    min(16px, 2.5vw)\n  );\n  height: fit-content;\n  justify-self: center;\n  max-width: 71px;\n  position: relative;\n  width: 100%;\n\n  @media (min-width: ${(props) =>\n      props.theme.breakpoints.smallTablet}) {\n    grid-template-rows: repeat(\n      ${(props) => props.deckLength + 5},\n      min(17px, 3vh)\n    );\n  }\n`;\n\nexport const Placeholder = styled.div`\n  border-radius: 4px;\n  box-shadow: ${(props) => props.theme.boxShadows.emptyDeck};\n  display: grid;\n  left: 0;\n  position: absolute;\n  top: 0;\n  width: 100%;\n  z-index: 0;\n\n  & > * {\n    grid-area: 1/1;\n  }\n`;\n\nexport const CardContainer = styled.div`\n  z-index: 1;\n`;\n","// Libraries\nimport React, { useContext } from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\n// Components | Utils\nimport { DraggingContext } from '../../../contexts/DraggingContext';\nimport { HintContext } from '../../../contexts/HintContext';\nimport Card from '../Card/index';\nimport { getIndexWhichNextCardsDraggable } from '../../../utils/cardUtils';\n// Assets\nimport * as Styled from './styles';\n\nconst Deck = (props) => {\n  const { deckNo, deck } = props;\n\n  const { indicesOfSelectedCards } = useContext(DraggingContext);\n  const { hint } = useContext(HintContext);\n\n  let indexWhichNextCardsDraggable;\n\n  if ('cards' in deck) {\n    indexWhichNextCardsDraggable =\n      getIndexWhichNextCardsDraggable(deck);\n  }\n\n  /*\n  ====================================================\n  ==================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    'cards' in deck && (\n      <Droppable droppableId={`deck${deckNo}`}>\n        {(provided) => (\n          <Styled.Deck\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n            deckLength={deck.cards.length}\n          >\n            <Styled.Placeholder>\n              <svg viewBox=\"0 0 71 96\" />\n            </Styled.Placeholder>\n            {deck.cards.map((value, index) => {\n              return (\n                <Card\n                  key={`deck${deckNo}${index}`}\n                  index={index}\n                  deckNo={deckNo}\n                  cardNo={value}\n                  isClose={\n                    index < deck.cards.length - deck.visibleCardCount\n                  }\n                  isDragDisabled={\n                    index < indexWhichNextCardsDraggable\n                  }\n                  isInSelectedCards={\n                    indicesOfSelectedCards.deckId ===\n                      `deck${deckNo}` &&\n                    indicesOfSelectedCards.items\n                      .slice(1)\n                      .includes(index)\n                  }\n                  isDestinationInHint={\n                    hint.destinationDeckId === `deck${deckNo}` &&\n                    hint.destinationStartingIndex <= index\n                  }\n                  isSourceInHint={\n                    hint.sourceDeckId === `deck${deckNo}` &&\n                    hint.sourceStartingIndex <= index\n                  }\n                />\n              );\n            })}\n            {provided.placeholder}\n          </Styled.Deck>\n        )}\n      </Droppable>\n    )\n  );\n};\n\nexport default React.memo(Deck);\n","// Libraries\nimport styled from 'styled-components';\n\nexport const DeckArea = styled.div`\n  display: grid;\n  gap: 0.4vw;\n  grid-template-columns: repeat(10, 1fr);\n  justify-content: space-evenly;\n  padding: 0 0.9vw;\n\n  .card {\n    height: 100%;\n    width: auto;\n\n    img {\n      height: auto;\n      width: 100%;\n    }\n  }\n\n  @media (min-width: ${(props) =>\n      props.theme.breakpoints.smallTablet}) {\n    grid-template-rows: 1fr;\n  }\n`;\n\nexport const CardDeckContainer = styled.div`\n  height: fit-content;\n`;\n","// Libraries\nimport React, { useContext } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\n// Components | Utils\nimport { GameContext } from '../../../contexts/GameContext';\nimport { DraggingContext } from '../../../contexts/DraggingContext';\nimport Deck from '../Deck';\nimport { moveCards } from '../../../utils/cardUtils';\n// Assets\nimport * as Styled from './styles';\n\nconst DeckArea = () => {\n  const { cardDecks, gameStats, setGameStats, setCardDecks } =\n    useContext(GameContext);\n  const { setIndicesOfSelectedCards } = useContext(DraggingContext);\n\n  /*\n  ====================================================\n  =================== HANDLER ========================\n  ====================================================\n  */\n\n  const handleOnDragEnd = (result) => {\n    const { source, destination } = result;\n\n    // Cards saved during drag are cleared.\n    setIndicesOfSelectedCards({\n      deckId: '',\n      items: [],\n    });\n\n    // Saves dragged cards.\n    if (!destination) {\n      return;\n    }\n\n    const sourceDeckId = source.droppableId;\n    const destinationDeckId = destination.droppableId;\n\n    // Do nothing if the deck from which the card was drawn is the\n    // same as the deck it was dragged into.\n    if (sourceDeckId === destinationDeckId) {\n      return;\n    }\n\n    const { newCardDecks, isThereACompletedDeck, isDragSuccessful } =\n      moveCards(cardDecks, source, destination);\n\n    // Update list if drag is successful.\n    if (isDragSuccessful) {\n      const previousGameStats = { ...gameStats };\n      previousGameStats.moves += 1;\n      previousGameStats.score -= 1;\n\n      if (isThereACompletedDeck) {\n        previousGameStats.completedDeckCount += 1;\n        previousGameStats.score += 100;\n      }\n\n      setGameStats(previousGameStats);\n      setCardDecks(newCardDecks);\n    }\n  };\n\n  const handleOnDragStart = (result) => {\n    const { source } = result;\n\n    const sourceCardIndex = source.index;\n    const sourceDeckId = source.droppableId;\n    const sourceDeck = { ...cardDecks[sourceDeckId] };\n\n    // Saves dragged cards.\n    setIndicesOfSelectedCards({\n      deckId: sourceDeckId,\n      items: Array.from(\n        {\n          length: sourceDeck.cards.length - sourceCardIndex,\n        },\n        (_, i) => i + sourceCardIndex\n      ),\n    });\n  };\n\n  /*\n  ====================================================\n  ==================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <DragDropContext\n      onDragEnd={handleOnDragEnd}\n      onDragStart={handleOnDragStart}\n    >\n      <Styled.DeckArea>\n        {Array.from({ length: 10 }, (_, i) => i + 1).map((no) => (\n          <Deck key={no} deckNo={no} deck={cardDecks[`deck${no}`]} />\n        ))}\n      </Styled.DeckArea>\n    </DragDropContext>\n  );\n};\n\nexport default DeckArea;\n","// Libraries\nimport styled from 'styled-components';\n\nexport const CompletedDeckArea = styled.div`\n  width: 110px;\n  height: 100%;\n  display: inline-flex;\n\n  .card {\n    &:not(:first-child) {\n      margin-left: -30px;\n\n      @media (min-width: ${(props) =>\n          props.theme.breakpoints.smallTablet}) {\n        margin-left: -62px;\n      }\n    }\n\n    img {\n      height: 100%;\n    }\n  }\n`;\n","// Libraries\nimport React from 'react';\n// Components | Utils\nimport Card from '../Card';\n// Assets\nimport * as Styled from './styles';\n\nconst CompletedDeckArea = (props) => {\n  const { completedDeckCount } = props;\n\n  /*\n  ====================================================\n  ==================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <Styled.CompletedDeckArea>\n      {React.Children.toArray(\n        Array(completedDeckCount).fill(<Card cardNo={1} />)\n      )}\n    </Styled.CompletedDeckArea>\n  );\n};\n\nexport default React.memo(CompletedDeckArea);\n","// Libraries\nimport styled from 'styled-components';\n// Assets\nimport ClickableCursor from '../../../assets/cursors/clickable.cur';\n\nexport const HintArea = styled.div`\n  background-color: green;\n  border: 1px solid black;\n  color: white;\n  cursor: url(${ClickableCursor}), pointer;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  font-size: 0.5rem;\n  height: 100%;\n  justify-content: center;\n  margin: 0 10px;\n  max-width: 130px;\n  min-width: 100px;\n  padding: 7px;\n\n  @media (min-width: ${(props) =>\n      props.theme.breakpoints.smallTablet}) {\n    font-size: 0.8rem;\n    max-width: 180px;\n  }\n`;\n\nexport const Hint = styled.div`\n  background-color: green;\n  display: flex;\n  gap: 10px;\n  padding: 2px;\n\n  span {\n    display: inline-block;\n    width: 50%;\n\n    &:first-of-type {\n      text-align: right;\n    }\n  }\n`;\n","// Libraries\nimport React, { useContext } from 'react';\n// Components | Utils\nimport { HintContext } from '../../../contexts/HintContext';\nimport { getHint } from '../../../utils/cardUtils';\nimport getSounds from '../../../utils/soundUtils';\n// Assets\nimport * as Styled from './styles';\n\nconst HintArea = (props) => {\n  const { cardDecks, gameStats, setGameStats } = props;\n\n  const { setHint } = useContext(HintContext);\n\n  const [hintSound, noHintSound] = getSounds('hint', 'no-hint');\n\n  /*\n  ====================================================\n  =================== HANDLER ========================\n  ====================================================\n  */\n\n  const handleHintClick = () => {\n    const hint = getHint(cardDecks);\n\n    if (hint) {\n      hintSound.play();\n      setHint({\n        sourceDeckId: hint.sourceDeckId,\n        sourceStartingIndex: hint.sourceStartingIndex,\n        destinationDeckId: hint.destinationDeckId,\n        destinationStartingIndex: hint.destinationStartingIndex,\n      });\n\n      const previousGameStats = { ...gameStats };\n      previousGameStats.score -= 10;\n\n      setGameStats(previousGameStats);\n    } else {\n      noHintSound.play();\n    }\n  };\n\n  /*\n  ====================================================\n  =================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <Styled.HintArea onClick={handleHintClick}>\n      <Styled.Hint>\n        <span>Score:</span>\n        <span>{gameStats.score}</span>\n      </Styled.Hint>\n      <Styled.Hint>\n        <span>Moves:</span>\n        <span>{gameStats.moves}</span>\n      </Styled.Hint>\n    </Styled.HintArea>\n  );\n};\n\nexport default React.memo(HintArea);\n","// Libraries\nimport styled from 'styled-components';\n// Assets\nimport ClickableCursor from '../../../assets/cursors/clickable.cur';\n\nexport const DealArea = styled.div`\n  cursor: url(${ClickableCursor}), pointer;\n  display: inline-flex;\n  flex-direction: row-reverse;\n  height: 100%;\n  width: 110px;\n\n  .card {\n    &:not(:last-child) {\n      margin-left: -30px;\n\n      @media (min-width: ${(props) =>\n          props.theme.breakpoints.smallTablet}) {\n        margin-left: -62px;\n      }\n    }\n\n    img {\n      height: 100%;\n    }\n  }\n`;\n","// Libraries\nimport React, { useContext } from 'react';\n// Components | Utils\nimport Card from '../Card';\nimport { deal } from '../../../utils/cardUtils';\nimport getSounds from '../../../utils/soundUtils';\n// Assets\nimport * as Styled from './styles';\nimport { GameContext } from '../../../contexts/GameContext';\n\nconst DealArea = (props) => {\n  const { setCardDecks, cardDecks } = props;\n  const [cannotDealSound, dealSound] = getSounds(\n    'cannot-deal',\n    'deal'\n  );\n  const { dealingDecks, setDealingDecks } = useContext(GameContext);\n  /*\n  ====================================================\n  =================== HANDLER ========================\n  ====================================================\n  */\n\n  const handleDealClick = () => {\n    dealSound.play();\n\n    const [returnCardDecks, returnDealingDecks] = deal(\n      cardDecks,\n      dealingDecks,\n      cannotDealSound\n    );\n\n    setCardDecks(returnCardDecks);\n    setDealingDecks(returnDealingDecks);\n  };\n\n  /*\n  ====================================================\n  =================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <Styled.DealArea\n      onClick={dealingDecks.length ? handleDealClick : undefined}\n    >\n      {React.Children.toArray(\n        Array(dealingDecks.length).fill(<Card isClose />)\n      )}\n    </Styled.DealArea>\n  );\n};\n\nexport default React.memo(DealArea);\n","// Libraries\nimport styled from 'styled-components';\n\nexport const Board = styled.div`\n  background-image: url(${`${process.env.PUBLIC_URL}/solitaire-background.webp`});\n  background-size: fill;\n  display: grid;\n  grid-template-rows: 1fr 50px;\n  height: 100%;\n  padding: 10px;\n  position: relative;\n\n  @media (min-width: ${(props) =>\n      props.theme.breakpoints.smallTablet}) {\n    grid-template-rows: 1fr 100px;\n    padding: 20px 30px;\n  }\n`;\n\nexport const BottomArea = styled.div`\n  align-items: center;\n  display: flex;\n  height: 50px;\n  justify-content: space-between;\n  width: 100%;\n\n  @media (min-width: ${(props) =>\n      props.theme.breakpoints.smallTablet}) {\n    height: 100px;\n  }\n`;\n","// Libraries\nimport React, { useContext } from 'react';\n// Components | Utils\nimport HintContextProvider from '../../contexts/HintContext';\nimport DraggingContextProvider from '../../contexts/DraggingContext';\nimport { GameContext } from '../../contexts/GameContext';\nimport Window from '../../components/PreGame/Window';\nimport GameOver from '../../components/Game/GameOver';\nimport DeckArea from '../../components/Game/DeckArea';\nimport CompletedDeckArea from '../../components/Game/CompletedArea';\nimport HintArea from '../../components/Game/HintArea';\nimport DealArea from '../../components/Game/DealArea';\n// Assets\nimport * as Styled from './styles';\n\nconst SolitaireGame = () => {\n  const {\n    setDealingDecks,\n    cardDecks,\n    setCardDecks,\n    gameStats,\n    setGameStats,\n  } = useContext(GameContext);\n\n  /*\n  ====================================================\n  =================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <DraggingContextProvider>\n      <HintContextProvider>\n        <Window title=\"Spider Solitaire\">\n          <Styled.Board>\n            <DeckArea cardDecks={cardDecks} />\n            <Styled.BottomArea>\n              <CompletedDeckArea\n                completedDeckCount={gameStats.completedDeckCount}\n              />\n              <HintArea\n                cardDecks={cardDecks}\n                gameStats={gameStats}\n                setGameStats={setGameStats}\n              />\n              <DealArea\n                setCardDecks={setCardDecks}\n                cardDecks={cardDecks}\n              />\n            </Styled.BottomArea>\n            {gameStats.completedDeckCount === 8 && (\n              <GameOver\n                setCardDecks={setCardDecks}\n                setDealingDecks={setDealingDecks}\n                gameStats={gameStats}\n                setGameStats={setGameStats}\n              />\n            )}\n          </Styled.Board>\n        </Window>\n      </HintContextProvider>\n    </DraggingContextProvider>\n  );\n};\n\nexport default SolitaireGame;\n","// Libraries\nimport styled from 'styled-components';\n// Components | Utils\nimport { styledComponents } from '../../../globalStyles';\n\nexport const Program = styled(styledComponents.Button)`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  font-size: 0.7rem;\n  gap: 5px;\n  line-height: 0.8rem;\n  text-align: center;\n  width: 70px;\n`;\n","// Libraries\nimport React, { useContext } from 'react';\n// Components | Utils\nimport { DesktopContext } from '../../../contexts/DesktopContext';\n// Assets\nimport * as Styled from './styles';\nimport SolitaireIcon from '../../../assets/images/solitaire-icon.webp';\n\nconst Program = () => {\n  const { setIsGameRunning } = useContext(DesktopContext);\n\n  /*\n  ====================================================\n  =================== HANDLER ========================\n  ====================================================\n  */\n\n  const handleProgramClick = () => {\n    setIsGameRunning(true);\n  };\n\n  /*\n  ====================================================\n  ==================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <Styled.Program\n      onDoubleClick={handleProgramClick}\n      onTouchStart={handleProgramClick}\n    >\n      <img src={SolitaireIcon} alt=\"\" width=\"40\" height=\"40\" />\n      <span>Spider Solitaire</span>\n    </Styled.Program>\n  );\n};\n\nexport default Program;\n","/*\n  ====================================================\n  Return time to be displayed in Taskbar\n  Return value: String\n  ====================================================\n*/\n\nexport default function getTimeAsAMPM() {\n  const date = new Date();\n  let hours = date.getHours();\n  let minutes = date.getMinutes();\n  const ampm = hours >= 12 ? 'PM' : 'AM';\n  hours %= 12;\n  hours = hours || 12;\n  minutes = minutes < 10 ? `0${minutes}` : minutes;\n  const strTime = `${hours}:${minutes} ${ampm}`;\n  return strTime;\n}\n","// Libraries\nimport styled from 'styled-components';\n\nexport const Toolbar = styled.div`\n  align-items: center;\n  background: ${(props) => props.theme.gradients.toolbarBg};\n  border-left: 3px solid rgb(16, 66, 175);\n  color: ${(props) => props.theme.colors.toolbarText};\n  display: flex;\n  font-size: 0.65rem;\n  gap: 5px;\n  height: 100%;\n  padding: 4px 15px 3px 10px;\n  width: fit-content;\n`;\n","export default __webpack_public_path__ + \"static/media/msn-icon.81c25df4.webp\";","// Libraries\nimport React, { useState, useEffect } from 'react';\n// Components | Utils\nimport getTimeAsAMPM from '../../../utils/dateUtils';\n// Assets\nimport * as Styled from './styles';\nimport MsnIcon from '../../../assets/images/msn-icon.webp';\n\nconst Toolbar = () => {\n  const [time, setTime] = useState(getTimeAsAMPM());\n\n  /*\n  ====================================================\n  ================== USE EFFECT ======================\n  ====================================================\n  */\n\n  useEffect(() => {\n    const timeInterval = setInterval(\n      () => setTime(getTimeAsAMPM()),\n      30000\n    );\n    return () => {\n      clearInterval(timeInterval);\n    };\n  }, []);\n  /*\n  ====================================================\n  ==================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <Styled.Toolbar>\n      <img src={MsnIcon} alt=\"msn icon\" width=\"32\" height=\"21\" />\n      <span>{time}</span>\n    </Styled.Toolbar>\n  );\n};\n\nexport default Toolbar;\n","// Libraries\nimport styled from 'styled-components';\n// Components | Utils\nimport { styledComponents } from '../../../globalStyles';\n\nexport const Taskbar = styled.section`\n  background: ${(props) => props.theme.gradients.taskbarBg};\n  display: flex;\n  height: 35px;\n  overflow: hidden;\n`;\n\nexport const StartButton = styled(styledComponents.Button)`\n  &:hover {\n    filter: brightness(105%);\n  }\n  img {\n    height: 100%;\n  }\n`;\n\nexport const TaskList = styled.div`\n  align-items: center;\n  display: flex;\n  flex-grow: 1;\n  gap: 1px;\n  padding-left: 20px;\n  padding-top: 4px;\n`;\n\nexport const Task = styled(styledComponents.Button)`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.taskBg};\n  border-radius: 2px;\n  box-shadow: ${(props) => props.theme.boxShadows.task};\n  display: flex;\n  gap: 3px;\n  height: 65%;\n  max-width: 120px;\n  min-width: 100px;\n  padding: 4px 8px;\n  width: 40%;\n\n  &:hover {\n    background-color: ${(props) => props.theme.colors.taskBg$hover};\n  }\n\n  span {\n    font-size: 0.55rem;\n    line-height: 0.6rem;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/winxp-start-button.5316ea67.webp\";","// Libraries\nimport React, { useContext } from 'react';\n// Components | Utils\nimport { DesktopContext } from '../../../contexts/DesktopContext';\nimport Toolbar from '../Toolbar';\n// Assets\nimport * as Styled from './styles';\nimport XpStartButton from '../../../assets/images/winxp-start-button.webp';\nimport SolitaireIcon from '../../../assets/images/solitaire-icon.webp';\n\nconst Taskbar = () => {\n  const { isGameRunning } = useContext(DesktopContext);\n\n  /*\n  ====================================================\n  ==================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <Styled.Taskbar>\n      <Styled.StartButton>\n        <img\n          src={XpStartButton}\n          alt=\"win xp start\"\n          height=\"35\"\n          width=\"110\"\n        />\n      </Styled.StartButton>\n      <Styled.TaskList>\n        {isGameRunning && (\n          <Styled.Task>\n            <img\n              src={SolitaireIcon}\n              alt=\"solitaire icon\"\n              width=\"15\"\n              height=\"15\"\n            />\n            <span>Spider Solitaire</span>\n          </Styled.Task>\n        )}\n      </Styled.TaskList>\n      <Toolbar />\n    </Styled.Taskbar>\n  );\n};\n\nexport default Taskbar;\n","// Libraries\nimport styled from 'styled-components';\n\nexport const Desktop = styled.div`\n  background-image: url(${`${process.env.PUBLIC_URL}/winxp-background.webp`});\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center center;\n  height: 100%;\n`;\n\nexport const ProgramContainer = styled.main`\n  height: calc(100% - 35px);\n`;\n\nexport const ProgramList = styled.main`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  gap: 15px;\n  padding: 40px;\n`;\n","// Libraries\nimport React, { useContext } from 'react';\n// Components | Utils\nimport GameContextProvider from '../../contexts/GameContext';\nimport { DesktopContext } from '../../contexts/DesktopContext';\nimport SolitaireGame from '../SolitaireGame';\nimport Program from '../../components/PreGame/Program';\nimport Taskbar from '../../components/PreGame/Taskbar';\n// Assets\nimport * as Styled from './styles';\n\nconst Desktop = () => {\n  const { isGameRunning } = useContext(DesktopContext);\n\n  /*\n  ====================================================\n  ==================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <Styled.Desktop>\n      <Styled.ProgramContainer>\n        {!isGameRunning ? (\n          <Styled.ProgramList>\n            <Program />\n          </Styled.ProgramList>\n        ) : (\n          <GameContextProvider>\n            <SolitaireGame />\n          </GameContextProvider>\n        )}\n      </Styled.ProgramContainer>\n      <Taskbar />\n    </Styled.Desktop>\n  );\n};\n\nexport default Desktop;\n","// Libraries\nimport React, { useContext } from 'react';\n// Components | Utils\nimport Introduction from './views/Introduction';\nimport Desktop from './views/Desktop';\nimport { UserContext } from './contexts/UserContext';\nimport DesktopContextProvider from './contexts/DesktopContext';\n\nfunction App() {\n  const { isUserSelected } = useContext(UserContext);\n\n  /*\n  ====================================================\n  ==================== RENDER ========================\n  ====================================================\n  */\n\n  return (\n    <div id=\"app\">\n      {isUserSelected ? (\n        <DesktopContextProvider>\n          <Desktop />\n        </DesktopContextProvider>\n      ) : (\n        <Introduction />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// Libraries\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\n// Components | Utils\nimport UserContextProvider from './contexts/UserContext';\nimport App from './App';\n// Assets\nimport './index.scss';\nimport { theme } from './globalStyles';\n\n/* eslint-disable no-console */\nconsole.log(\n  \"%cHi, I'm Enes. Welcome to my project. You can find more at https://enesbaspinar.me. Oh by the way, feel free to look at my CV :)\",\n  'background: #222; color: #bada55; padding: 4px;'\n);\n/* eslint-enable no-console */\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserContextProvider>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </UserContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}